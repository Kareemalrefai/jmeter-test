<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="5.4.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="booking.com-flights" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">www.booking.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">booking.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">booking.kayak.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">accounts.google.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">uk.mytrip.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">cdn.cookielaw.org</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/c360/v1/track" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;action_name&quot;:&quot;webcoreux.header_component_action_clicked&quot;,&quot;action_version&quot;:&quot;1.0.0&quot;,&quot;content&quot;:{&quot;action_type&quot;:&quot;vertical&quot;,&quot;clicked_text_copy_tag&quot;:&quot;flights&quot;},&quot;context&quot;:{&quot;page&quot;:{&quot;page_referrer&quot;:&quot;https://www.booking.com/searchresults.en-gb.html?ss=amman&amp;efdco=1&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;aid=2311236&amp;lang=en-gb&amp;sb=1&amp;src_elem=sb&amp;src=index&amp;dest_id=-970362&amp;dest_type=city&amp;ac_position=0&amp;ac_click_type=b&amp;ac_langcode=en&amp;ac_suggestion_list_length=5&amp;search_selected=true&amp;search_pageview_id=c5c38181613d00fb&amp;ac_meta=GhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA&amp;checkin=2023-06-01&amp;checkout=2023-06-05&amp;group_adults=4&amp;no_rooms=1&amp;group_children=0&amp;sb_travel_purpose=leisure&quot;,&quot;page_url&quot;:&quot;https://www.booking.com/index.en-gb.html?aid=2311236&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;sid=e3f3ecc54206abb2cd1ae1af0ad9b274&amp;&quot;,&quot;page_title&quot;:&quot;Booking.com | Official site | The best hotels, flights, car rentals &amp; accommodations&quot;},&quot;web&quot;:{&quot;browser_language&quot;:&quot;en-US&quot;},&quot;local&quot;:{&quot;currency&quot;:&quot;JOD&quot;,&quot;language&quot;:&quot;en-gb&quot;}},&quot;tracker&quot;:{&quot;tracker_name&quot;:&quot;C360ReactTracker&quot;,&quot;tracker_type&quot;:&quot;Client&quot;,&quot;tracker_version&quot;:&quot;0.1.0&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">c360/v1/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-Booking-CSRF</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Label" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Label</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">1b4a81ba8ff40033</stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-ET-Seed" elementType="Header">
                  <stringProp name="Header.name">X-Booking-ET-Seed</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Platform" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Platform</stringProp>
                  <stringProp name="Header.value">WWW</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.com/pxgo?url=https%3A%2F%2Fbooking.kayak.com%2Fin%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26mc%3DJOD%26bdclc%3Den-gb%26p%3Dsearchbox_link%26a%3Dbdc%252Fsearchbox&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;token=UmFuZG9tSVYkc2RlIyh9YQCDNEDqnGbdhGcS-z-cpV3svPBmadevM3TPpup1wOhNXSNmErSVnLuu4lWCexhBgIYopFexyLlK0dHfgLsZvZwisHCf45oktax-eRCTm5n7E1aAS-E_6NhPe63vNMxOPIHqABLa3twvG1XeslWWdNg4vtF0Vf8KmApJLRvyS1vR1mcgWQEZ1_kEr6Sb_3gbxHbOTVd50bz4snN53fgQw_xscAA214OGzPbiilRsGWodZVlSR3JE3SjBCJP3LwHcJBBjvVH6zxE6-Zbkevp_Ubar69FL0szZp6BwVW1IdKyKjuIVvMS3otP6b3lk_Qg1nV_75eaAVO8gVSbmkJz3oYZmxgNE46LsKn6ggBCcWRXAQLkRR4GR6vqMt5Ulv5JQE0URxQ0YMjK5F2lXtfYkwMJ2kK06R7Djq3uQ_YZrHaz-Lbq_e7y-Fivw4ifMepLM1Nx1gViK4jbz&amp;lang=en-gb&amp;aid=2311236" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="label" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">label</stringProp>
                  <stringProp name="Argument.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499:pl:ta:p1:p2:ac:ap:neg:fi:tikwd-65526620:lp9069822:li:dec:dm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aid</stringProp>
                  <stringProp name="Argument.value">2311236</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://booking.kayak.com/in?sid=e3f3ecc54206abb2cd1ae1af0ad9b274&amp;mc=JOD&amp;bdclc=en-gb&amp;p=searchbox_link&amp;a=bdc%2Fsearchbox</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">UmFuZG9tSVYkc2RlIyh9YQCDNEDqnGbdhGcS-z-cpV3svPBmadevM3TPpup1wOhNXSNmErSVnLuu4lWCexhBgIYopFexyLlK0dHfgLsZvZwisHCf45oktax-eRCTm5n7E1aAS-E_6NhPe63vNMxOPIHqABLa3twvG1XeslWWdNg4vtF0Vf8KmApJLRvyS1vR1mcgWQEZ1_kEr6Sb_3gbxHbOTVd50bz4snN53fgQw_xscAA214OGzPbiilRsGWodZVlSR3JE3SjBCJP3LwHcJBBjvVH6zxE6-Zbkevp_Ubar69FL0szZp6BwVW1IdKyKjuIVvMS3otP6b3lk_Qg1nV_75eaAVO8gVSbmkJz3oYZmxgNE46LsKn6ggBCcWRXAQLkRR4GR6vqMt5Ulv5JQE0URxQ0YMjK5F2lXtfYkwMJ2kK06R7Djq3uQ_YZrHaz-Lbq_e7y-Fivw4ifMepLM1Nx1gViK4jbz</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">pxgo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>0.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.com/pxgo?url=https%3A%2F%2Fbooking.kayak.com%2Fin%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26mc%3DJOD%26bdclc%3Den-gb%26p%3Dsearchbox_link%26a%3Dbdc%252Fsearchbox&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;token=UmFuZG9tSVYkc2RlIyh9YQCDNEDqnGbdhGcS-z-cpV3svPBmadevM3TPpup1wOhNXSNmErSVnLuu4lWCexhBgIYopFexyLlK0dHfgLsZvZwisHCf45oktax-eRCTm5n7E1aAS-E_6NhPe63vNMxOPIHqABLa3twvG1XeslWWdNg4vtF0Vf8KmApJLRvyS1vR1mcgWQEZ1_kEr6Sb_3gbxHbOTVd50bz4snN53fgQw_xscAA214OGzPbiilRsGWodZVlSR3JE3SjBCJP3LwHcJBBjvVH6zxE6-Zbkevp_Ubar69FL0szZp6BwVW1IdKyKjuIVvMS3otP6b3lk_Qg1nV_75eaAVO8gVSbmkJz3oYZmxgNE46LsKn6ggBCcWRXAQLkRR4GR6vqMt5Ulv5JQE0URxQ0YMjK5F2lXtfYkwMJ2kK06R7Djq3uQ_YZrHaz-Lbq_e7y-Fivw4ifMepLM1Nx1gViK4jbz&amp;lang=en-gb&amp;aid=2311236" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="label" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">label</stringProp>
                  <stringProp name="Argument.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499:pl:ta:p1:p2:ac:ap:neg:fi:tikwd-65526620:lp9069822:li:dec:dm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aid</stringProp>
                  <stringProp name="Argument.value">2311236</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://booking.kayak.com/in?sid=e3f3ecc54206abb2cd1ae1af0ad9b274&amp;mc=JOD&amp;bdclc=en-gb&amp;p=searchbox_link&amp;a=bdc%2Fsearchbox</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">UmFuZG9tSVYkc2RlIyh9YQCDNEDqnGbdhGcS-z-cpV3svPBmadevM3TPpup1wOhNXSNmErSVnLuu4lWCexhBgIYopFexyLlK0dHfgLsZvZwisHCf45oktax-eRCTm5n7E1aAS-E_6NhPe63vNMxOPIHqABLa3twvG1XeslWWdNg4vtF0Vf8KmApJLRvyS1vR1mcgWQEZ1_kEr6Sb_3gbxHbOTVd50bz4snN53fgQw_xscAA214OGzPbiilRsGWodZVlSR3JE3SjBCJP3LwHcJBBjvVH6zxE6-Zbkevp_Ubar69FL0szZp6BwVW1IdKyKjuIVvMS3otP6b3lk_Qg1nV_75eaAVO8gVSbmkJz3oYZmxgNE46LsKn6ggBCcWRXAQLkRR4GR6vqMt5Ulv5JQE0URxQ0YMjK5F2lXtfYkwMJ2kK06R7Djq3uQ_YZrHaz-Lbq_e7y-Fivw4ifMepLM1Nx1gViK4jbz</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">pxgo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>16.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">8</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 16 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/js_tracking?ref_action=index&amp;ver=2&amp;stype=1&amp;lang=en-gb&amp;pid=1b4a81ba8ff40033&amp;ete=&amp;etg=xpb_total_clicks,xpb_flights&amp;etcg=&amp;ets=&amp;etgwv=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ver" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ver</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="etgwv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">etgwv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stype" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stype</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ete" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ete</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref_action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref_action</stringProp>
                  <stringProp name="Argument.value">index</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="etg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">etg</stringProp>
                  <stringProp name="Argument.value">xpb_total_clicks,xpb_flights</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">1b4a81ba8ff40033</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="etcg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">etcg</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">js_tracking</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-ET-Serialized-State" elementType="Header">
                  <stringProp name="Header.name">X-Booking-ET-Serialized-State</stringProp>
                  <stringProp name="Header.value">ExOe9rgzhdnkaJKhZvVluauy-l86qXnZCYSjXsPma1bBqZrnFLjPYsGQRzDYKxX3U</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Client-Info" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Client-Info</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">1b4a81ba8ff40033</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Info" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Info</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">e3f3ecc54206abb2cd1ae1af0ad9b274</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/a/api/smarty/nearby" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                  <stringProp name="Argument.value">TLV</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">a/api/smarty/nearby</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/p13n/flight/destinations?originAirport=TLV&amp;limit=5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="originAirport" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">originAirport</stringProp>
                  <stringProp name="Argument.value">TLV</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/p13n/flight/destinations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/react/component/CompareToConfigStateProviderAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/react/component/CompareToConfigStateProviderAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/react/component/CompareToConfigStateProviderAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/react/component/CompareToConfigStateProviderAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/react/component/CurrencyPickerStateProviderAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/react/component/CurrencyPickerStateProviderAction</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/ads/dfp/banner300x250/ads.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ads/dfp/banner300x250/ads.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/common/privacy/AjaxStyleJamHeaderCookiesMessage?scriptsMetadata=13w4E16I8%3AIEI3Q4g1Y5U13E19CE12E11Dg34B30B1I1Q29Q%3D%3D&amp;stylesMetadata=39w5C83g1g1w10%3A14Q17D37I14Q13G46B50g305E108Ig12g41I8I3ES1g39E339ECSJEmSJ1CQ1EiSJEmSJEmSJ1k1IEE1I1iQ1E1S1EiSBECSJEiSJEmSB2C324I177CQJ127IEmS1E4i1B24EgCB100ECSJ1E1IEk1IEGSJ1CSB2CB1mQJ15B11I1kQ1Eg83E11CQB25C1J3B5kCIEESJEmSJEkCB4EC1J564ECCB1%3D%3D&amp;r9version=R667c" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="r9version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">r9version</stringProp>
                  <stringProp name="Argument.value">R667c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scriptsMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scriptsMetadata</stringProp>
                  <stringProp name="Argument.value">13w4E16I8:IEI3Q4g1Y5U13E19CE12E11Dg34B30B1I1Q29Q==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stylesMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">stylesMetadata</stringProp>
                  <stringProp name="Argument.value">39w5C83g1g1w10:14Q17D37I14Q13G46B50g305E108Ig12g41I8I3ES1g39E339ECSJEmSJ1CQ1EiSJEmSJEmSJ1k1IEE1I1iQ1E1S1EiSBECSJEiSJEmSB2C324I177CQJ127IEmS1E4i1B24EgCB100ECSJ1E1IEk1IEGSJ1CSB2CB1mQJ15B11I1kQ1Eg83E11CQB25C1J3B5kCIEESJEmSJEkCB4EC1J564ECCB1==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/common/privacy/AjaxStyleJamHeaderCookiesMessage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="X-RequestId" elementType="Header">
                  <stringProp name="Header.name">X-RequestId</stringProp>
                  <stringProp name="Header.value">flights#frontdoor#5kBOVG</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/ads/dfp/banner300x250/ads.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ads/dfp/banner300x250/ads.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/flights/common/GetFlightSearchHistoryAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="maxSearchHistory" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">maxSearchHistory</stringProp>
                  <stringProp name="Argument.value">30</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/flights/common/GetFlightSearchHistoryAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[13]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:27:38.554Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;view&quot;,&quot;eventName&quot;:&quot;show&quot;,&quot;payload&quot;:{},&quot;context&quot;:{&quot;viewId&quot;:&quot;LTC1684693657219&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;main&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;main&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:38.054Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/page/main/frontdoor/unknown&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;LTC1684693657219&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;main&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:38.054Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[14]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://accounts.google.com/gsi/status?client_id=446009525344-j420p21u4ap0114qr1fnrk8bhq4f2il1.apps.googleusercontent.com&amp;as=Az5GiqMYyIAeoU%2FTISRLsQ" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="as" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">as</stringProp>
                  <stringProp name="Argument.value">Az5GiqMYyIAeoU/TISRLsQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">446009525344-j420p21u4ap0114qr1fnrk8bhq4f2il1.apps.googleusercontent.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">gsi/status</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CJO2yQEIpLbJAQipncoBCKOEywEIk6HLAQiLq8wBCIWgzQEIwarNARjAy8wB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[15]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:27:39.276Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/main/frontdoor/unknown/undefined/not-displayed/unregistered_origin&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;LTC1684693657219&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;main&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:38.775Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[16]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=flight&amp;where=a&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">flight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[17]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=flight&amp;where=am&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">flight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">am</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[18]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=flight&amp;where=amm&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">flight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">amm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[19]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=flight&amp;where=amma&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">flight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">amma</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[20]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:27:43.009Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;smarty&quot;,&quot;payload&quot;:{&quot;prefilled&quot;:{&quot;location&quot;:&quot;New York, United States (NYC)&quot;,&quot;type&quot;:&quot;ap&quot;},&quot;componentId&quot;:&quot;&quot;,&quot;eventObject&quot;:&quot;destination&quot;,&quot;eventValue&quot;:&quot;input&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:42.507Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[21]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=flight&amp;where=amman&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">flight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">amman</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[22]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/log/client/messages" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;product&quot;:&quot;HORIZON&quot;,&quot;messages&quot;:[{&quot;id&quot;:1873657203,&quot;groupId&quot;:-534114280,&quot;message&quot;:&quot;[unhandledrejection] ReferenceError: response is not defined&quot;,&quot;contentId&quot;:60,&quot;extraArgs&quot;:[{}],&quot;level&quot;:&quot;ERROR&quot;,&quot;type&quot;:&quot;window&quot;,&quot;context&quot;:{&quot;custom&quot;:{&quot;r9-version&quot;:&quot;R667c&quot;},&quot;url&quot;:&quot;https://booking.kayak.com/?sid=e3f3ecc54206abb2cd1ae1af0ad9b274&amp;aid=2311236&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&quot;,&quot;cookiesEnabled&quot;:true,&quot;screenWidth&quot;:1536,&quot;screenHeight&quot;:824,&quot;winWidth&quot;:1536,&quot;winHeight&quot;:696,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;,&quot;jsFiles&quot;:[&quot;https://www.googletagservices.com/tag/js/gpt.js&quot;,&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/prompt.js&quot;,&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5&quot;,&quot;https://content.r9cdn.net/res/combined.js?v=1246ed5a492a62d092d6a5fd31065c3f292bea89-frpreducers&amp;cluster=5&quot;,&quot;https://booking.kayak.com/res/js/stl.js?v=66a1038a5fad3291a8c43ea63254389ea94edc65-frpreducers-nc&amp;cluster=5&quot;,&quot;https://securepubads.g.doubleclick.net/pagead/managed/js/gpt/m202305150101/pubads_impl.js&quot;,&quot;https://accounts.google.com/gsi/client&quot;,&quot;https://content.r9cdn.net/res/combined.js?v=b0c7590a5aee67bf4f102ebf7b25786348e5635f-frpreducers&amp;cluster=5&quot;,&quot;https://content.r9cdn.net/res/combined.js?v=89e9c165fd9f9e0af336cfbf856775d6f1b4abc6-frpreducers&amp;cluster=5&quot;,&quot;https://content.r9cdn.net/res/combined.js?v=f751f52b3e824756ab159f0df20e34dceb95cf1b-frpreducers&amp;cluster=5&quot;]},&quot;occurrences&quot;:4,&quot;stackTrace&quot;:[&quot;Error&quot;,&quot;    at u (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:3614)&quot;,&quot;    at f (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:3267)&quot;,&quot;    at f (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:3450)&quot;,&quot;    at new t (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:2643)&quot;,&quot;    at b (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:7864)&quot;,&quot;    at e (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:7378)&quot;]}],&quot;reqNo&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">log/client/messages</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[23]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/a/api/smarty/nearby" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                  <stringProp name="Argument.value">AMM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">a/api/smarty/nearby</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[24]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/a/api/flightPricePrediction/coloredCalendar/roundTrip?origin=TLV&amp;destination=AMM&amp;dateMode=range&amp;distinct=false" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="origin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">origin</stringProp>
                  <stringProp name="Argument.value">TLV</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="destination" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">destination</stringProp>
                  <stringProp name="Argument.value">AMM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dateMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dateMode</stringProp>
                  <stringProp name="Argument.value">range</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="distinct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">distinct</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">a/api/flightPricePrediction/coloredCalendar/roundTrip</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[25]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/compareTo/list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;url&quot;:&quot;flights/TLV-AMM/2023-06-20/2023-06-27&quot;,&quot;type&quot;:&quot;F&quot;,&quot;registerImpression&quot;:false,&quot;deepLink&quot;:false,&quot;list&quot;:true,&quot;config&quot;:false,&quot;placement&quot;:{&quot;vertical&quot;:&quot;F&quot;,&quot;showOn&quot;:&quot;fd&quot;,&quot;displayRail&quot;:&quot;fdct&quot;,&quot;position&quot;:0}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/compareTo/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[26]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:27:45.699Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;click&quot;,&quot;payload&quot;:{&quot;eventValue&quot;:&quot;AMM&quot;,&quot;eventObject&quot;:&quot;/form/destination/addLocation&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:45.199Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;click&quot;,&quot;payload&quot;:{&quot;eventValue&quot;:&quot;AMM&quot;,&quot;eventObject&quot;:&quot;/form/destination/addLocation&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:45.201Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;smarty&quot;,&quot;payload&quot;:{&quot;text&quot;:&quot;amman&quot;,&quot;pos&quot;:1,&quot;type&quot;:&quot;ap&quot;,&quot;locid&quot;:&quot;AMM&quot;,&quot;indexId&quot;:&quot;174247&quot;,&quot;includenearby&quot;:false,&quot;custom&quot;:&quot;&quot;,&quot;componentId&quot;:&quot;&quot;,&quot;searchFormType&quot;:&quot;round-trip&quot;,&quot;eventObject&quot;:&quot;destination&quot;,&quot;eventValue&quot;:&quot;select&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:45.210Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[27]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/react/component/FooterBrandsStateProviderAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/react/component/FooterBrandsStateProviderAction</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[28]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=airportonly&amp;where=a&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">airportonly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[29]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=airportonly&amp;where=am&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">airportonly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">am</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[30]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=airportonly&amp;where=amm&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">airportonly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">amm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[31]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=airportonly&amp;where=amma&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">airportonly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">amma</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[32]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:27:52.472Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;smarty&quot;,&quot;payload&quot;:{&quot;prefilled&quot;:{&quot;location&quot;:&quot;TLV&quot;,&quot;type&quot;:&quot;nearby&quot;},&quot;componentId&quot;:&quot;&quot;,&quot;eventObject&quot;:&quot;origin&quot;,&quot;eventValue&quot;:&quot;input&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:51.970Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[33]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=airportonly&amp;where=amman&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">airportonly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">amman</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[34]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/log/client/messages" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;product&quot;:&quot;HORIZON&quot;,&quot;messages&quot;:[{&quot;id&quot;:1873657203,&quot;groupId&quot;:-534114280,&quot;message&quot;:&quot;[unhandledrejection] ReferenceError: response is not defined&quot;,&quot;contentId&quot;:60,&quot;extraArgs&quot;:[{}],&quot;level&quot;:&quot;ERROR&quot;,&quot;type&quot;:&quot;window&quot;,&quot;context&quot;:{&quot;custom&quot;:{&quot;r9-version&quot;:&quot;R667c&quot;},&quot;url&quot;:&quot;https://booking.kayak.com/?sid=e3f3ecc54206abb2cd1ae1af0ad9b274&amp;aid=2311236&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&quot;,&quot;cookiesEnabled&quot;:true,&quot;screenWidth&quot;:1536,&quot;screenHeight&quot;:824,&quot;winWidth&quot;:1536,&quot;winHeight&quot;:696,&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;,&quot;jsFiles&quot;:[&quot;https://www.googletagservices.com/tag/js/gpt.js&quot;,&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/prompt.js&quot;,&quot;chrome-extension://mbopgmdnpcbohhpnfglgohlbhfongabi/sideex/monkey-patch.js&quot;,&quot;https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5&quot;,&quot;https://content.r9cdn.net/res/combined.js?v=1246ed5a492a62d092d6a5fd31065c3f292bea89-frpreducers&amp;cluster=5&quot;,&quot;https://booking.kayak.com/res/js/stl.js?v=66a1038a5fad3291a8c43ea63254389ea94edc65-frpreducers-nc&amp;cluster=5&quot;,&quot;https://securepubads.g.doubleclick.net/pagead/managed/js/gpt/m202305150101/pubads_impl.js&quot;,&quot;https://accounts.google.com/gsi/client&quot;,&quot;https://content.r9cdn.net/res/combined.js?v=b0c7590a5aee67bf4f102ebf7b25786348e5635f-frpreducers&amp;cluster=5&quot;,&quot;https://content.r9cdn.net/res/combined.js?v=89e9c165fd9f9e0af336cfbf856775d6f1b4abc6-frpreducers&amp;cluster=5&quot;,&quot;https://content.r9cdn.net/res/combined.js?v=f751f52b3e824756ab159f0df20e34dceb95cf1b-frpreducers&amp;cluster=5&quot;]},&quot;occurrences&quot;:4,&quot;stackTrace&quot;:[&quot;Error&quot;,&quot;    at u (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:3614)&quot;,&quot;    at f (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:3267)&quot;,&quot;    at f (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:3450)&quot;,&quot;    at new t (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:2643)&quot;,&quot;    at b (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:7864)&quot;,&quot;    at e (https://content.r9cdn.net/res/combined.js?v=a031b1e9b7db30133db93cfd7fb6202e6e04fc40-frpreducers&amp;cluster=5:1:7378)&quot;]}],&quot;reqNo&quot;:5}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">log/client/messages</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[35]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:27:55.292Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;click&quot;,&quot;payload&quot;:{&quot;eventValue&quot;:&quot;AMM&quot;,&quot;eventObject&quot;:&quot;/form/departure/addLocation&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:54.791Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;smarty&quot;,&quot;payload&quot;:{&quot;text&quot;:&quot;amman&quot;,&quot;pos&quot;:1,&quot;type&quot;:&quot;ap&quot;,&quot;locid&quot;:&quot;AMM&quot;,&quot;indexId&quot;:&quot;174247&quot;,&quot;includenearby&quot;:false,&quot;custom&quot;:&quot;&quot;,&quot;componentId&quot;:&quot;&quot;,&quot;searchFormType&quot;:&quot;round-trip&quot;,&quot;eventObject&quot;:&quot;origin&quot;,&quot;eventValue&quot;:&quot;select&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:54.794Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[36]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:27:56.687Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;click&quot;,&quot;payload&quot;:{&quot;eventValue&quot;:0,&quot;eventObject&quot;:&quot;/form/destination/removeLocation&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:56.182Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[37]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=flight&amp;where=a&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">flight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[38]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/mvm/smartyv2/search?f=j&amp;s=flight&amp;where=aq&amp;lc_cc=GB&amp;lc=en&amp;sv=5&amp;cv=undefined&amp;c=undefined&amp;searchId=undefined&amp;v=undefined" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">flight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">f</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lc_cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lc_cc</stringProp>
                  <stringProp name="Argument.value">GB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="where" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">where</stringProp>
                  <stringProp name="Argument.value">aq</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mvm/smartyv2/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[39]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:27:57.446Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;smarty&quot;,&quot;payload&quot;:{&quot;prefilled&quot;:{&quot;location&quot;:&quot;New York, United States (NYC)&quot;,&quot;type&quot;:&quot;ap&quot;},&quot;componentId&quot;:&quot;&quot;,&quot;eventObject&quot;:&quot;destination&quot;,&quot;eventValue&quot;:&quot;input&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:56.945Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[40]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/a/api/smarty/nearby" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                  <stringProp name="Argument.value">AQJ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">a/api/smarty/nearby</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[41]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/a/api/flightPricePrediction/coloredCalendar/roundTrip?origin=TLV&amp;destination=AQJ&amp;dateMode=range&amp;distinct=false" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="origin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">origin</stringProp>
                  <stringProp name="Argument.value">TLV</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="destination" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">destination</stringProp>
                  <stringProp name="Argument.value">AQJ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dateMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dateMode</stringProp>
                  <stringProp name="Argument.value">range</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="distinct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">distinct</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">a/api/flightPricePrediction/coloredCalendar/roundTrip</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[42]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/compareTo/list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;url&quot;:&quot;flights/TLV,AMM-AQJ/2023-06-20/2023-06-27&quot;,&quot;type&quot;:&quot;F&quot;,&quot;registerImpression&quot;:false,&quot;deepLink&quot;:false,&quot;list&quot;:true,&quot;config&quot;:false,&quot;placement&quot;:{&quot;vertical&quot;:&quot;F&quot;,&quot;showOn&quot;:&quot;fd&quot;,&quot;displayRail&quot;:&quot;fdct&quot;,&quot;position&quot;:0}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/compareTo/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-sid" elementType="Header">
                  <stringProp name="Header.name">x-sid</stringProp>
                  <stringProp name="Header.value">R-5LmpgiQ7acXwfYvV4mNjp-RWFmXUkSG4zve4vlhj5bxkG7PPKTTNWq0Ku_U7sWV</stringProp>
                </elementProp>
                <elementProp name="x-mc" elementType="Header">
                  <stringProp name="Header.name">x-mc</stringProp>
                  <stringProp name="Header.value">Ad5P-6InLheJUkoUB8dQ3OTUo93gLTqVRTQ5v541O_rGH8bjmhLwN79y1Ugx5ssoZfzDN8NkxA9pKtp-bVH6EpF0Lq9ultGbbs7MEVhie08lYlXpZZSuApDP5r4GGWrWg75WQW08YbWFMrvHgn5iw4usysDtGfN13JhtAwPIZzJ25qmSO7ujbDWbj23Xcy6A9fltyD_uV0noYzTMU-kdwrX8KVctZkD0H3JfQFE4pEW6wgCfGoNh4Wkbq96UO-Ebf2kUOhyCNtB4d-CnQcEkhY1eQwXUa1uluACC2WQ51XKxExHBQzHiaWzapjeDcrZkD1arz1_Ql_BjYZmoYfvjuso</stringProp>
                </elementProp>
                <elementProp name="x-tracking" elementType="Header">
                  <stringProp name="Header.name">x-tracking</stringProp>
                  <stringProp name="Header.value">VmxJBQ-AAABiD_RJf8-c5-foZrfw</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="x-user-tag" elementType="Header">
                  <stringProp name="Header.name">x-user-tag</stringProp>
                  <stringProp name="Header.value">EWZmhuF_9SUv92Vmu$85</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[43]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:27:59.219Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;click&quot;,&quot;payload&quot;:{&quot;eventValue&quot;:&quot;AQJ&quot;,&quot;eventObject&quot;:&quot;/form/destination/addLocation&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:58.719Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;click&quot;,&quot;payload&quot;:{&quot;eventValue&quot;:&quot;AQJ&quot;,&quot;eventObject&quot;:&quot;/form/destination/addLocation&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:58.720Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;smarty&quot;,&quot;payload&quot;:{&quot;text&quot;:&quot;aq&quot;,&quot;pos&quot;:1,&quot;type&quot;:&quot;ap&quot;,&quot;locid&quot;:&quot;AQJ&quot;,&quot;indexId&quot;:&quot;174232&quot;,&quot;includenearby&quot;:false,&quot;custom&quot;:&quot;&quot;,&quot;componentId&quot;:&quot;&quot;,&quot;searchFormType&quot;:&quot;round-trip&quot;,&quot;eventObject&quot;:&quot;destination&quot;,&quot;eventValue&quot;:&quot;select&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:27:58.723Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[44]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/compareTo/list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;url&quot;:&quot;flights/TLV,AMM-AQJ/2023-06-28/2023-06-29&quot;,&quot;type&quot;:&quot;F&quot;,&quot;registerImpression&quot;:false,&quot;deepLink&quot;:false,&quot;list&quot;:true,&quot;config&quot;:false,&quot;placement&quot;:{&quot;vertical&quot;:&quot;F&quot;,&quot;showOn&quot;:&quot;fd&quot;,&quot;displayRail&quot;:&quot;fdct&quot;,&quot;position&quot;:0}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/compareTo/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-sid" elementType="Header">
                  <stringProp name="Header.name">x-sid</stringProp>
                  <stringProp name="Header.value">R-5LmpgiQ7acXwfYvV4mNjp-RWFmXUkSG4zve4vlhj5bxkG7PPKTTNWq0Ku_U7sWV</stringProp>
                </elementProp>
                <elementProp name="x-mc" elementType="Header">
                  <stringProp name="Header.name">x-mc</stringProp>
                  <stringProp name="Header.value">AXGzlBjR3agkuqeLiw39fRthz1lEAKaaYxZJpjqbPUIY9GlkUtCpZHIN9SDiufscbl5OrkRzzhMhm76bn7TTEHrkMg7i9E5CafwjLTPlW20hb9A7f_EDRrtBtv7BUy2_YRXaJ5VQkhj7wPvgoUjZNruV9-wILUoOqPDLzNqBnmHrH-6fKtob5KODzxdDQPjXHJcbgXrluzmDJPb4eEz16NbCIooYb80uJ-Je8OJtTYibbMxpi37TXNvmWqcUQAjyPUyVVVfFA78HZABKxMy4fXIaVYwY2UM-iaI6hFslqnJVyRFl2CYHsPUVFEqH1iC-PggQamIFo0uttafAKSWD9Eg</stringProp>
                </elementProp>
                <elementProp name="x-tracking" elementType="Header">
                  <stringProp name="Header.name">x-tracking</stringProp>
                  <stringProp name="Header.value">VmxJBQ-AAABiD_RJf8-c5-foZrfw</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="x-user-tag" elementType="Header">
                  <stringProp name="Header.name">x-user-tag</stringProp>
                  <stringProp name="Header.value">EWZmhuF_9SUv92Vmu$85</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[45]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:28:11.855Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;click&quot;,&quot;payload&quot;:{&quot;eventValue&quot;:&quot;2023-06-28&quot;,&quot;eventObject&quot;:&quot;/form/departDate/date&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:11.354Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;calendarpicker&quot;,&quot;payload&quot;:{&quot;prefilled&quot;:{&quot;date&quot;:{&quot;from&quot;:&quot;2023-06-20&quot;,&quot;to&quot;:&quot;2023-06-27&quot;},&quot;precision&quot;:{&quot;from&quot;:&quot;exact&quot;,&quot;to&quot;:&quot;exact&quot;}},&quot;selected&quot;:{&quot;date&quot;:{&quot;from&quot;:&quot;2023-06-28&quot;,&quot;to&quot;:&quot;2023-06-29&quot;},&quot;precision&quot;:{&quot;from&quot;:&quot;exact&quot;,&quot;to&quot;:&quot;exact&quot;}},&quot;changed&quot;:true,&quot;componentId&quot;:&quot;SearchFormState_defaultForm&quot;,&quot;searchFormType&quot;:&quot;round-trip&quot;,&quot;eventObject&quot;:&quot;dates&quot;,&quot;eventValue&quot;:&quot;&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:11.354Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;click&quot;,&quot;payload&quot;:{&quot;eventValue&quot;:&quot;2023-06-29&quot;,&quot;eventObject&quot;:&quot;/form/returnDate/date&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:11.356Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;calendarpicker&quot;,&quot;payload&quot;:{&quot;prefilled&quot;:{&quot;date&quot;:{&quot;from&quot;:&quot;2023-06-20&quot;,&quot;to&quot;:&quot;2023-06-27&quot;},&quot;precision&quot;:{&quot;from&quot;:&quot;exact&quot;,&quot;to&quot;:&quot;exact&quot;}},&quot;selected&quot;:{&quot;date&quot;:{&quot;from&quot;:&quot;2023-06-28&quot;,&quot;to&quot;:&quot;2023-06-29&quot;},&quot;precision&quot;:{&quot;from&quot;:&quot;exact&quot;,&quot;to&quot;:&quot;exact&quot;}},&quot;changed&quot;:true,&quot;componentId&quot;:&quot;SearchFormState_defaultForm&quot;,&quot;searchFormType&quot;:&quot;round-trip&quot;,&quot;eventObject&quot;:&quot;dates&quot;,&quot;eventValue&quot;:&quot;&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:11.356Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[46]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/compareTo/list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;url&quot;:&quot;flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;type&quot;:&quot;F&quot;,&quot;registerImpression&quot;:false,&quot;deepLink&quot;:false,&quot;list&quot;:true,&quot;config&quot;:false,&quot;placement&quot;:{&quot;vertical&quot;:&quot;F&quot;,&quot;showOn&quot;:&quot;fd&quot;,&quot;displayRail&quot;:&quot;fdct&quot;,&quot;position&quot;:0}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/compareTo/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-sid" elementType="Header">
                  <stringProp name="Header.name">x-sid</stringProp>
                  <stringProp name="Header.value">R-5LmpgiQ7acXwfYvV4mNjp-RWFmXUkSG4zve4vlhj5bxkG7PPKTTNWq0Ku_U7sWV</stringProp>
                </elementProp>
                <elementProp name="x-mc" elementType="Header">
                  <stringProp name="Header.name">x-mc</stringProp>
                  <stringProp name="Header.value">ATU2YBP2mNjYcE2FPqHivop7lL1jUs8FgUXXqyTC-ZKkNTLpqILWcoaSAnIRwqxQSsX9B-NdQb3FYLjip6npDKREYuuRFevbFR1ehfDKqzvJ4QHvlpZga46G_mchNVi5kF-qpZCB0UCXJuWt78OWjOF0yiHQuNPgx9V3o3yIgTljXJ2WU9HVh4MSO9Ylw2rsQV7MnBBEl8I58hPXxrEyxk97bzsNx1DCb_wFAyt8abDQWmHiibxHeImmXMrNRgV7Bqxl_6Cu7pqXXH7Rth4kLLYEF8HY0YhAmQc8jlxxaA9cl3gckWIwfV1YLdsd3TXqGYWWwwAlO9_wVyvLUYgQkrE</stringProp>
                </elementProp>
                <elementProp name="x-tracking" elementType="Header">
                  <stringProp name="Header.name">x-tracking</stringProp>
                  <stringProp name="Header.value">VmxJBQ-AAABiD_RJf8-c5-foZrfw</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="x-user-tag" elementType="Header">
                  <stringProp name="Header.name">x-user-tag</stringProp>
                  <stringProp name="Header.value">EWZmhuF_9SUv92Vmu$85</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[47]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:28:19.473Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;click&quot;,&quot;payload&quot;:{&quot;eventValue&quot;:&quot;2023-07-09&quot;,&quot;eventObject&quot;:&quot;/form/returnDate/date&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:18.972Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;calendarpicker&quot;,&quot;payload&quot;:{&quot;prefilled&quot;:{&quot;date&quot;:{&quot;from&quot;:&quot;2023-06-20&quot;,&quot;to&quot;:&quot;2023-06-27&quot;},&quot;precision&quot;:{&quot;from&quot;:&quot;exact&quot;,&quot;to&quot;:&quot;exact&quot;}},&quot;selected&quot;:{&quot;date&quot;:{&quot;from&quot;:&quot;2023-06-28&quot;,&quot;to&quot;:&quot;2023-07-09&quot;},&quot;precision&quot;:{&quot;from&quot;:&quot;exact&quot;,&quot;to&quot;:&quot;exact&quot;}},&quot;changed&quot;:true,&quot;componentId&quot;:&quot;SearchFormState_defaultForm&quot;,&quot;searchFormType&quot;:&quot;round-trip&quot;,&quot;eventObject&quot;:&quot;dates&quot;,&quot;eventValue&quot;:&quot;&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:18.972Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[48]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/compareTo/WindowInformation/add" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;F&quot;,&quot;placement&quot;:{&quot;vertical&quot;:&quot;F&quot;,&quot;showOn&quot;:&quot;fd&quot;,&quot;displayRail&quot;:&quot;fdct&quot;,&quot;position&quot;:0},&quot;url&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;items&quot;:[],&quot;other&quot;:{&quot;windowNamePrefix&quot;:&quot;k1684693657851EC9RlAVV&quot;,&quot;referer&quot;:&quot;&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/compareTo/WindowInformation/add</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-sid" elementType="Header">
                  <stringProp name="Header.name">x-sid</stringProp>
                  <stringProp name="Header.value">R-5LmpgiQ7acXwfYvV4mNjp-RWFmXUkSG4zve4vlhj5bxkG7PPKTTNWq0Ku_U7sWV</stringProp>
                </elementProp>
                <elementProp name="x-mc" elementType="Header">
                  <stringProp name="Header.name">x-mc</stringProp>
                  <stringProp name="Header.value">AWpGCSqMnvvnEbLhgPfcM3WHMVlK6F6UTBOfUZBxTtms8UOvvVWYp1XWC4RiXBHd4lG0_aeu2evDAL2beP-U4Jygxdemk9zcm64IEBXWzHwif1SkUB2LDf1a_tnUoi2ynXD1gpI3yeLCipiiRs01hk1msgnDwoX9v0cP-953yBWg50Ah17eW0olQOp5jiui1EBnBHWPByY_EidVDVd61E12r17r__vAvfCsUk0Paq_upPsNImGXyvH3kZFrohgdKwbwlhawkC1XgSHC0dWfXgCZ6ZNkq1nmc3H_jh8z4LHdqhOJmxjbJSPYeG1sYVIMGN5CLAw8pgh2RusmxnK3V_AE</stringProp>
                </elementProp>
                <elementProp name="x-tracking" elementType="Header">
                  <stringProp name="Header.name">x-tracking</stringProp>
                  <stringProp name="Header.value">VmxJBQ-AAABiD_RJf8-c5-foZrfw</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="x-user-tag" elementType="Header">
                  <stringProp name="Header.name">x-user-tag</stringProp>
                  <stringProp name="Header.value">EWZmhuF_9SUv92Vmu$85</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[49]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">flights/TLV,AMM-AQJ/2023-06-28/2023-07-09</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[50]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>44425.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">22212.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 44425 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:28:21.046Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;click&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/searchform/submit&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:20.545Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/main/frontdoor/unknown/searchform/submit&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;LTC1684693657219&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;main&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:20.546Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;searchform&quot;,&quot;payload&quot;:{&quot;prefilled&quot;:{&quot;origin&quot;:&quot;TLV&quot;,&quot;origin_type&quot;:&quot;ap&quot;,&quot;destination&quot;:&quot;&quot;,&quot;dest_type&quot;:&quot;ap&quot;,&quot;date&quot;:{&quot;from&quot;:&quot;2023-06-20&quot;,&quot;to&quot;:&quot;2023-06-27&quot;},&quot;precision&quot;:{&quot;from&quot;:&quot;exact&quot;,&quot;to&quot;:&quot;exact&quot;},&quot;ptc&quot;:{&quot;adults&quot;:1,&quot;children&quot;:0,&quot;seniors&quot;:0,&quot;students&quot;:0,&quot;infantsLap&quot;:0,&quot;infantsSeat&quot;:0,&quot;youths&quot;:0},&quot;cabin&quot;:&quot;e&quot;,&quot;nonstop-only&quot;:0},&quot;selected&quot;:{&quot;origin&quot;:&quot;TLV,AMM&quot;,&quot;origin_type&quot;:&quot;ap&quot;,&quot;destination&quot;:&quot;AQJ&quot;,&quot;dest_type&quot;:&quot;ap&quot;,&quot;date&quot;:{&quot;from&quot;:&quot;2023-06-28&quot;,&quot;to&quot;:&quot;2023-07-09&quot;},&quot;precision&quot;:{&quot;from&quot;:&quot;exact&quot;,&quot;to&quot;:&quot;exact&quot;},&quot;ptc&quot;:{&quot;adults&quot;:1,&quot;children&quot;:0,&quot;seniors&quot;:0,&quot;students&quot;:0,&quot;infantsLap&quot;:0,&quot;infantsSeat&quot;:0,&quot;youths&quot;:0},&quot;cabin&quot;:&quot;e&quot;,&quot;nonstop-only&quot;:0},&quot;componentId&quot;:&quot;1684693657&quot;,&quot;changed&quot;:1,&quot;searchType&quot;:&quot;F&quot;,&quot;eventObject&quot;:&quot;round-trip&quot;,&quot;eventValue&quot;:&quot;submit&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;4hZ1684693657223&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;react&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;frontdoor&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/&quot;,&quot;queryString&quot;:&quot;%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fwww.booking.com%2F&quot;},&quot;seoPlacementId&quot;:&quot;&quot;,&quot;tags&quot;:&quot;&quot;,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:20.546Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[51]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/a/api/smarty/nearby" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                  <stringProp name="Argument.value">TLV</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">a/api/smarty/nearby</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[52]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/a/api/smarty/nearby" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                  <stringProp name="Argument.value">AQJ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">a/api/smarty/nearby</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[53]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/a/api/flightPricePrediction/coloredCalendar/roundTrip?origin=TLV&amp;destination=AQJ&amp;dateMode=range&amp;distinct=false" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="origin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">origin</stringProp>
                  <stringProp name="Argument.value">TLV</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="destination" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">destination</stringProp>
                  <stringProp name="Argument.value">AQJ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dateMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dateMode</stringProp>
                  <stringProp name="Argument.value">range</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="distinct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">distinct</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">a/api/flightPricePrediction/coloredCalendar/roundTrip</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[54]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/react/component/CompareToConfigStateProviderAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/react/component/CompareToConfigStateProviderAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[55]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/react/component/CompareToConfigStateProviderAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/react/component/CompareToConfigStateProviderAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[56]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/compareTo/list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;registerImpression&quot;:true,&quot;includeTrackingLink&quot;:true,&quot;deepLink&quot;:true,&quot;type&quot;:&quot;F&quot;,&quot;url&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;placement&quot;:{&quot;showOn&quot;:&quot;rr&quot;,&quot;displayRail&quot;:&quot;footer&quot;,&quot;logo&quot;:{&quot;width&quot;:166,&quot;height&quot;:34}},&quot;filterBlackListed&quot;:false,&quot;includeCloseDeepLinks&quot;:false,&quot;list&quot;:true,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;config&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/compareTo/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-sid" elementType="Header">
                  <stringProp name="Header.name">x-sid</stringProp>
                  <stringProp name="Header.value">R-5LmpgiQ7acXwfYvV4mNjp-RWFmXUkSG4zve4vlhj5bxkG7PPKTTNWq0Ku_U7sWV</stringProp>
                </elementProp>
                <elementProp name="x-mc" elementType="Header">
                  <stringProp name="Header.name">x-mc</stringProp>
                  <stringProp name="Header.value">AWpGCSqMnvvnEbLhgPfcM3WHMVlK6F6UTBOfUZBxTtms8UOvvVWYp1XWC4RiXBHd4lG0_aeu2evDAL2beP-U4Jygxdemk9zcm64IEBXWzHwif1SkUB2LDf1a_tnUoi2ynXD1gpI3yeLCipiiRs01hk1msgnDwoX9v0cP-953yBWg50Ah17eW0olQOp5jiui1EBnBHWPByY_EidVDVd61E12r17r__vAvfCsUk0Paq_upPsNImGXyvH3kZFrohgdKwbwlhawkC1XgSHC0dWfXgCZ6ZNkq1nmc3H_jh8z4LHdqhOJmxjbJSPYeG1sYVIMGN5CLAw8pgh2RusmxnK3V_AE</stringProp>
                </elementProp>
                <elementProp name="x-tracking" elementType="Header">
                  <stringProp name="Header.name">x-tracking</stringProp>
                  <stringProp name="Header.value">VmxJBQ-AAABiD_RJf8-c5-foZrfw</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="x-user-tag" elementType="Header">
                  <stringProp name="Header.name">x-user-tag</stringProp>
                  <stringProp name="Header.value">EWZmhuF_9SUv92Vmu$85</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[57]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/react/component/CurrencyPickerStateProviderAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/react/component/CurrencyPickerStateProviderAction</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[58]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/ads/dfp/banner300x250/ads.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ads/dfp/banner300x250/ads.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[59]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/compareTo/WindowInformation/list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;placement&quot;:null,&quot;requestInformation&quot;:null,&quot;type&quot;:&quot;F&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/compareTo/WindowInformation/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-sid" elementType="Header">
                  <stringProp name="Header.name">x-sid</stringProp>
                  <stringProp name="Header.value">R-5LmpgiQ7acXwfYvV4mNjp-RWFmXUkSG4zve4vlhj5bxkG7PPKTTNWq0Ku_U7sWV</stringProp>
                </elementProp>
                <elementProp name="x-mc" elementType="Header">
                  <stringProp name="Header.name">x-mc</stringProp>
                  <stringProp name="Header.value">AWpGCSqMnvvnEbLhgPfcM3WHMVlK6F6UTBOfUZBxTtms8UOvvVWYp1XWC4RiXBHd4lG0_aeu2evDAL2beP-U4Jygxdemk9zcm64IEBXWzHwif1SkUB2LDf1a_tnUoi2ynXD1gpI3yeLCipiiRs01hk1msgnDwoX9v0cP-953yBWg50Ah17eW0olQOp5jiui1EBnBHWPByY_EidVDVd61E12r17r__vAvfCsUk0Paq_upPsNImGXyvH3kZFrohgdKwbwlhawkC1XgSHC0dWfXgCZ6ZNkq1nmc3H_jh8z4LHdqhOJmxjbJSPYeG1sYVIMGN5CLAw8pgh2RusmxnK3V_AE</stringProp>
                </elementProp>
                <elementProp name="x-tracking" elementType="Header">
                  <stringProp name="Header.name">x-tracking</stringProp>
                  <stringProp name="Header.value">VmxJBQ-AAABiD_RJf8-c5-foZrfw</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="x-user-tag" elementType="Header">
                  <stringProp name="Header.name">x-user-tag</stringProp>
                  <stringProp name="Header.value">EWZmhuF_9SUv92Vmu$85</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[60]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/common/privacy/AjaxStyleJamHeaderCookiesMessage?scriptsMetadata=14B1HgE16I2J2EB1%3AIEI8g1Y5U12IGIjLBhUIChWR8CEB4Eg5UBD1L6QDw35D1PTyc6g1Bj1E1%2CBk1gC5B1I1Q28BQ%3D%3D&amp;stylesMetadata=42Dg1C83g1g27Q17D8BS4Q4M%2CE1R%3AYNGCo1g5I3Q2E7Q2QK2IQ4gGg44C11B2O1ergk5Y2Q1ME2M1%253E10g305E108Ig12g41I8I3ES1g39E339ECSJEmSJ1CQ1EiSJEmSJEmSJ1k1IEE1I1iQ1E1S1EiSBECSJEiSJEmSB2C148I175I109k67CQJE43ECSJEk59E17IEmS1E4C1B24EgCB100ECSJ1E1IEk1IECSJ1CSB2CB1GQJ15B11I1kQ1Eg95CQB14Q10C1J3B5kCJEESJEmSJEkCB4EC1J564ECCB1%3D%3D&amp;r9version=R667c" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="r9version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">r9version</stringProp>
                  <stringProp name="Argument.value">R667c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scriptsMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scriptsMetadata</stringProp>
                  <stringProp name="Argument.value">14B1HgE16I2J2EB1:IEI8g1Y5U12IGIjLBhUIChWR8CEB4Eg5UBD1L6QDw35D1PTyc6g1Bj1E1,Bk1gC5B1I1Q28BQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stylesMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">stylesMetadata</stringProp>
                  <stringProp name="Argument.value">42Dg1C83g1g27Q17D8BS4Q4M,E1R:YNGCo1g5I3Q2E7Q2QK2IQ4gGg44C11B2O1ergk5Y2Q1ME2M1%3E10g305E108Ig12g41I8I3ES1g39E339ECSJEmSJ1CQ1EiSJEmSJEmSJ1k1IEE1I1iQ1E1S1EiSBECSJEiSJEmSB2C148I175I109k67CQJE43ECSJEk59E17IEmS1E4C1B24EgCB100ECSJ1E1IEk1IECSJ1CSB2CB1GQJ15B11I1kQ1Eg95CQB14Q10C1J3B5kCJEESJEmSJEkCB4EC1J564ECCB1==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/common/privacy/AjaxStyleJamHeaderCookiesMessage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="X-RequestId" elementType="Header">
                  <stringProp name="Header.name">X-RequestId</stringProp>
                  <stringProp name="Header.value">flights#results#7GAEJP</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[61]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/ads/dfp/banner300x250/ads.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ads/dfp/banner300x250/ads.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[62]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/flights/common/GetFlightSearchHistoryAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="maxSearchHistory" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">maxSearchHistory</stringProp>
                  <stringProp name="Argument.value">30</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/flights/common/GetFlightSearchHistoryAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[63]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/i/api/kn/userbucket/v1?searchId=RcFiB5Gw-8" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">i/api/kn/userbucket/v1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[64]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/flights/results/FlightSearchPoll?p=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">p</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageNumber</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pollNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pollNumber</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stylesMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">stylesMetadata</stringProp>
                  <stringProp name="Argument.value">42Dg1C83g1g27Q17D8BS4Q4M,E1R:YNGCo1g5I3Q2E7Q2QK2IQ4gGg44C11B2O1ergk5Y2Q1ME2M1%3E10g305E108Ig12g41I8I3ES1g39E339ECSJEmSJ1CQ1EiSJEmSJEmSJ1k1IEE1I1iQ1E1S1EiSBECSJEiSJEmSB2C148I175I109k67CQJE43ECSJEk59E17IEmS1E4C1B24EgCB100ECSJ1E1IEk1IECSJ1CSB2CB1GQJ15B11I1kQ1Eg95CQB14Q10C1J3B5kCJEESJEmSJEkCB4EC1J564ECCB1==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="poll" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">poll</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="phoenixRising" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">phoenixRising</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="useViewStateFilterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">useViewStateFilterState</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="view" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">view</stringProp>
                  <stringProp name="Argument.value">list</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ajaxts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ajaxts</stringProp>
                  <stringProp name="Argument.value">1684693702359</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestAlternateFlexDates" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestAlternateFlexDates</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="activeLeg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">activeLeg</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hasFilterPreferences" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hasFilterPreferences</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="r9version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">r9version</stringProp>
                  <stringProp name="Argument.value">R667c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestReason" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestReason</stringProp>
                  <stringProp name="Argument.value">POLL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="priceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">priceType</stringProp>
                  <stringProp name="Argument.value">daybase</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sortMode</stringProp>
                  <stringProp name="Argument.value">bestflight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="watchedResultId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">watchedResultId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ascending" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ascending</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderAirlineStopsMatrix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderAirlineStopsMatrix</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderPlusMinusThreeFlex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderPlusMinusThreeFlex</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scriptsMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scriptsMetadata</stringProp>
                  <stringProp name="Argument.value">14B1HgE16I2J2EB1:IEI8g1Y5U11QIGIjLBhUIChWR8CEB4Eg5UBD1L6QDw35D1PTyc6g1Bj1E1,Bk1gC5B1I1Q28BQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">filterState</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSecondPhase" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isSecondPhase</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="applyFilters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">applyFilters</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="existingAds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">existingAds</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="append" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">append</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/flights/results/FlightSearchPoll</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="X-RequestId" elementType="Header">
                  <stringProp name="Header.name">X-RequestId</stringProp>
                  <stringProp name="Header.value">flights#results#7GAEJP</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[65]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:28:22.606Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;searchIdUpdate&quot;,&quot;payload&quot;:{},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:22.104Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/flight/results/unknown/ResultsPage/search_started/FD&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:22.138Z&quot;},{&quot;eventType&quot;:&quot;view&quot;,&quot;eventName&quot;:&quot;show&quot;,&quot;payload&quot;:{},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:22.138Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/page/flight/results/unknown&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:22.138Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[66]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/common/results/filters/PreviousFiltersUpdateAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="formtoken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">formtoken</stringProp>
                  <stringProp name="Argument.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/common/results/filters/PreviousFiltersUpdateAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[67]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/flights/results/FlightSearchPoll?p=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">p</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageNumber</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pollNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pollNumber</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stylesMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">stylesMetadata</stringProp>
                  <stringProp name="Argument.value">42Dw1C74Qw7g1g27Q17D8BS4Q4M,E1R:YNGDq1g5I3Q2E7Q2QK2IQ4gGg44C2Q8B2O1erlk2FCEYGDU1MmB:cY%o1XkBQ8g2C236B65E107IIg12g41I8I3ES1g39E339ECSJEmSJ1CQ1EiSJEmSJEmSJ1k1IEE1I1iQ1E1S1EiSBECSJEiSJEmSB2C126CCJEkSJ1kS10E1I175I109k67CQJEgC37EmCJEmSJEk1I1E1I1E1I1C1JEiSJEmSB7JEmSJEESJ1E4S4IEmS2CCIEGS16IEmS1E4i1B24EgCB100ECSJ1E1IEk1IEGSJ1CSB2CBEmQJ7I7BE1Q7QI1kQ1Eg83E11CSB14Q1ECSJE4C1J3B5kCJEESJEmSJEkCB4EC1J564ECCJEg39C25I1==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="poll" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">poll</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="phoenixRising" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">phoenixRising</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="useViewStateFilterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">useViewStateFilterState</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="view" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">view</stringProp>
                  <stringProp name="Argument.value">list</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ajaxts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ajaxts</stringProp>
                  <stringProp name="Argument.value">1684693703215</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestAlternateFlexDates" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestAlternateFlexDates</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="activeLeg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">activeLeg</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hasFilterPreferences" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hasFilterPreferences</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="r9version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">r9version</stringProp>
                  <stringProp name="Argument.value">R667c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lastPollTotalCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lastPollTotalCount</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestReason" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestReason</stringProp>
                  <stringProp name="Argument.value">POLL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="priceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">priceType</stringProp>
                  <stringProp name="Argument.value">daybase</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sortMode</stringProp>
                  <stringProp name="Argument.value">bestflight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="watchedResultId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">watchedResultId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ascending" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ascending</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderAirlineStopsMatrix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderAirlineStopsMatrix</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderPlusMinusThreeFlex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderPlusMinusThreeFlex</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scriptsMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scriptsMetadata</stringProp>
                  <stringProp name="Argument.value">14D1HgE16I2JK1kB1:IEI8g1Y5U11QIGIjLBhUICpXR8CEB4Eg5UBD1L6QDw35D1PTycE1KBC1kYFrGVv.BkogLg4B1I1Q27BBQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">filterState</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSecondPhase" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isSecondPhase</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="applyFilters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">applyFilters</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="existingAds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">existingAds</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="append" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">append</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/flights/results/FlightSearchPoll</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="X-RequestId" elementType="Header">
                  <stringProp name="Header.name">X-RequestId</stringProp>
                  <stringProp name="Header.value">flights#results#7GAEJP</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[68]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:28:24.009Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/flight/results/unknown/myfilters/impression&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:23.509Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[69]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/flights/results/FlightSearchPoll?p=2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">p</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageNumber</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pollNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pollNumber</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stylesMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">stylesMetadata</stringProp>
                  <stringProp name="Argument.value">42Dw1C74Qw7g1g27Q17D8BS4Q4M,E1R:YNGDq1g5I3Q2E7Q2QK2IQ4gGg44C2Q8B2O1erlk2FCEYGDU1MmB:cY%o1XkBQ8g2C236B65E107IIg12g41I8I3ES1g39E339ECSJEmSJ1CQ1EiSJEmSJEmSJ1k1IEE1I1iQ1E1S1EiSBECSJEiSJEmSB2C126CCJEkSJ1kS10E1I175I109k67CQJEgC37EmCJEmSJEk1I1E1I1E1I1C1JEiSJEmSB7JEmSJEESJ1E4S4IEmS2CCIEGS16IEmS1E4i1B24EgCB100ECSJ1E1IEk1IEGSJ1CSB2CBEmQJ7I7BE1Q7QI1kQ1Eg83E11CSB14Q1ECSJE4C1J3B5kCJEESJEmSJEkCB4EC1J564ECCJEg39C25I1==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="poll" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">poll</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="phoenixRising" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">phoenixRising</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="useViewStateFilterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">useViewStateFilterState</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="view" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">view</stringProp>
                  <stringProp name="Argument.value">list</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ajaxts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ajaxts</stringProp>
                  <stringProp name="Argument.value">1684693705529</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestAlternateFlexDates" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestAlternateFlexDates</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="activeLeg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">activeLeg</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hasFilterPreferences" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hasFilterPreferences</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="r9version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">r9version</stringProp>
                  <stringProp name="Argument.value">R667c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lastPollTotalCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lastPollTotalCount</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestReason" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestReason</stringProp>
                  <stringProp name="Argument.value">POLL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="priceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">priceType</stringProp>
                  <stringProp name="Argument.value">daybase</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sortMode</stringProp>
                  <stringProp name="Argument.value">bestflight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="watchedResultId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">watchedResultId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ascending" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ascending</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderAirlineStopsMatrix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderAirlineStopsMatrix</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderPlusMinusThreeFlex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderPlusMinusThreeFlex</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scriptsMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scriptsMetadata</stringProp>
                  <stringProp name="Argument.value">14D1HgE16I2JK1kB1:IEI8g1Y5U11QIGIjLBhUICpXR8CEB4Eg5UBD1L6QDw35D1PTycE1KBC1kYFrGVv.BkogLg4B1I1Q27BBQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">filterState</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSecondPhase" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isSecondPhase</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="applyFilters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">applyFilters</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="existingAds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">existingAds</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="append" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">append</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/flights/results/FlightSearchPoll</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="X-RequestId" elementType="Header">
                  <stringProp name="Header.name">X-RequestId</stringProp>
                  <stringProp name="Header.value">flights#results#7GAEJP</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[70]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/flights/results/FlightSearchPoll?p=3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">p</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageNumber</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pollNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pollNumber</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stylesMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">stylesMetadata</stringProp>
                  <stringProp name="Argument.value">42Dw1C74Qw7g1g27Q17D8BS4Q4M,E1R:YNGDq1g5I3Q2E7Q2QK2IQ4gGg44C2Q8B2O1erlk2FCEYGDU1MmB:cY%o1XkBQ8g2C236B65E107IIg12g41I8I3ES1g39E339ECSJEmSJ1CQ1EiSJEmSJEmSJ1k1IEE1I1iQ1E1S1EiSBECSJEiSJEmSB2C126CCJEkSJ1kS10E1I175I109k67CQJEgC37EmCJEmSJEk1I1E1I1E1I1C1JEiSJEmSB7JEmSJEESJ1E4S4IEmS2CCIEGS16IEmS1E4i1B24EgCB100ECSJ1E1IEk1IEGSJ1CSB2CBEmQJ7I7BE1Q7QI1kQ1Eg83E11CSB14Q1ECSJE4C1J3B5kCJEESJEmSJEkCB4EC1J564ECCJEg39C25I1==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="poll" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">poll</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="phoenixRising" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">phoenixRising</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="useViewStateFilterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">useViewStateFilterState</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="view" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">view</stringProp>
                  <stringProp name="Argument.value">list</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ajaxts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ajaxts</stringProp>
                  <stringProp name="Argument.value">1684693707685</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestAlternateFlexDates" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestAlternateFlexDates</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="activeLeg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">activeLeg</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hasFilterPreferences" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hasFilterPreferences</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="r9version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">r9version</stringProp>
                  <stringProp name="Argument.value">R667c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lastPollTotalCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lastPollTotalCount</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestReason" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestReason</stringProp>
                  <stringProp name="Argument.value">POLL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="priceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">priceType</stringProp>
                  <stringProp name="Argument.value">daybase</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sortMode</stringProp>
                  <stringProp name="Argument.value">bestflight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="watchedResultId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">watchedResultId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ascending" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ascending</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderAirlineStopsMatrix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderAirlineStopsMatrix</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderPlusMinusThreeFlex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderPlusMinusThreeFlex</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scriptsMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scriptsMetadata</stringProp>
                  <stringProp name="Argument.value">14D1HgE16I2JK1kB1:IEI8g1Y5U11QIGIjLBhUICpXR8CEB4Eg5UBD1L6QDw35D1PTycE1KBC1kYFrGVv.BkogLg4B1I1Q27BBQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">filterState</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSecondPhase" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isSecondPhase</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="applyFilters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">applyFilters</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="existingAds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">existingAds</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="append" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">append</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/flights/results/FlightSearchPoll</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="X-RequestId" elementType="Header">
                  <stringProp name="Header.name">X-RequestId</stringProp>
                  <stringProp name="Header.value">flights#results#7GAEJP</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[71]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/flights/results/FlightSearchPoll?p=4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">p</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageNumber</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pollNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pollNumber</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stylesMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">stylesMetadata</stringProp>
                  <stringProp name="Argument.value">42Dw1C74Qw7g1g27Q17D8BS4Q4M,E1R:YNGDq1g5I3Q2E7Q2QK2IQ4gGg44C2Q8B2O1erlk2FCEYGDU1MmB:cY%o1XkBQ8g2C236B65E107IIg12g41I8I3ES1g39E339ECSJEmSJ1CQ1EiSJEmSJEmSJ1k1IEE1I1iQ1E1S1EiSBECSJEiSJEmSB2C126CCJEkSJ1kS10E1I175I109k67CQJEgC37EmCJEmSJEk1I1E1I1E1I1C1JEiSJEmSB7JEmSJEESJ1E4S4IEmS2CCIEGS16IEmS1E4i1B24EgCB100ECSJ1E1IEk1IEGSJ1CSB2CBEmQJ7I7BE1Q7QI1kQ1Eg83E11CSB14Q1ECSJE4C1J3B5kCJEESJEmSJEkCB4EC1J564ECCJEg39C25I1==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="poll" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">poll</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="phoenixRising" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">phoenixRising</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="useViewStateFilterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">useViewStateFilterState</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="view" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">view</stringProp>
                  <stringProp name="Argument.value">list</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ajaxts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ajaxts</stringProp>
                  <stringProp name="Argument.value">1684693709835</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestAlternateFlexDates" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestAlternateFlexDates</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="activeLeg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">activeLeg</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hasFilterPreferences" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hasFilterPreferences</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="r9version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">r9version</stringProp>
                  <stringProp name="Argument.value">R667c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lastPollTotalCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lastPollTotalCount</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestReason" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestReason</stringProp>
                  <stringProp name="Argument.value">POLL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="priceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">priceType</stringProp>
                  <stringProp name="Argument.value">daybase</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sortMode</stringProp>
                  <stringProp name="Argument.value">bestflight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="watchedResultId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">watchedResultId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ascending" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ascending</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderAirlineStopsMatrix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderAirlineStopsMatrix</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderPlusMinusThreeFlex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderPlusMinusThreeFlex</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scriptsMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scriptsMetadata</stringProp>
                  <stringProp name="Argument.value">14D1HgE16I2JK1kB1:IEI8g1Y5U11QIGIjLBhUICpXR8CEB4Eg5UBD1L6QDw35D1PTycE1KBC1kYFrGVv.BkogLg4B1I1Q27BBQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">filterState</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSecondPhase" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isSecondPhase</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="applyFilters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">applyFilters</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="existingAds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">existingAds</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="append" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">append</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/flights/results/FlightSearchPoll</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="X-RequestId" elementType="Header">
                  <stringProp name="Header.name">X-RequestId</stringProp>
                  <stringProp name="Header.value">flights#results#7GAEJP</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[72]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/flights/results/FlightSearchPoll?p=5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">p</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageNumber</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pollNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pollNumber</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stylesMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">stylesMetadata</stringProp>
                  <stringProp name="Argument.value">42Dw1C74Qw7g1g27Q17D8BS4Q4M,E1R:YNGDq1g5I3Q2E7Q2QK2IQ4gGg44C2Q8B2O1erlk2FCEYGDU1MmB:cY%o1XkBQ8g2C236B65E107IIg12g41I8I3ES1g39E339ECSJEmSJ1CQ1EiSJEmSJEmSJ1k1IEE1I1iQ1E1S1EiSBECSJEiSJEmSB2C126CCJEkSJ1kS10E1I175I109k67CQJEgC37EmCJEmSJEk1I1E1I1E1I1C1JEiSJEmSB7JEmSJEESJ1E4S4IEmS2CCIEGS16IEmS1E4i1B24EgCB100ECSJ1E1IEk1IEGSJ1CSB2CBEmQJ7I7BE1Q7QI1kQ1Eg83E11CSB14Q1ECSJE4C1J3B5kCJEESJEmSJEkCB4EC1J564ECCJEg39C25I1==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="poll" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">poll</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="phoenixRising" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">phoenixRising</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="useViewStateFilterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">useViewStateFilterState</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="view" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">view</stringProp>
                  <stringProp name="Argument.value">list</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ajaxts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ajaxts</stringProp>
                  <stringProp name="Argument.value">1684693711985</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestAlternateFlexDates" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestAlternateFlexDates</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="activeLeg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">activeLeg</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hasFilterPreferences" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hasFilterPreferences</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="r9version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">r9version</stringProp>
                  <stringProp name="Argument.value">R667c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lastPollTotalCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lastPollTotalCount</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestReason" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestReason</stringProp>
                  <stringProp name="Argument.value">POLL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="priceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">priceType</stringProp>
                  <stringProp name="Argument.value">daybase</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sortMode</stringProp>
                  <stringProp name="Argument.value">bestflight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="watchedResultId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">watchedResultId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ascending" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ascending</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderAirlineStopsMatrix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderAirlineStopsMatrix</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderPlusMinusThreeFlex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderPlusMinusThreeFlex</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scriptsMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scriptsMetadata</stringProp>
                  <stringProp name="Argument.value">14D1HgE16I2JK1kB1:IEI8g1Y5U11QIGIjLBhUICpXR8CEB4Eg5UBD1L6QDw35D1PTycE1KBC1kYFrGVv.BkogLg4B1I1Q27BBQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">filterState</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSecondPhase" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isSecondPhase</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="applyFilters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">applyFilters</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="existingAds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">existingAds</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="append" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">append</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/flights/results/FlightSearchPoll</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="X-RequestId" elementType="Header">
                  <stringProp name="Header.name">X-RequestId</stringProp>
                  <stringProp name="Header.value">flights#results#7GAEJP</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[73]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/flights/results/FlightSearchPoll?p=6" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">p</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageNumber</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pollNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pollNumber</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stylesMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">stylesMetadata</stringProp>
                  <stringProp name="Argument.value">42Dw1C74Qw7g1g27Q17D8BS4Q4M,E1R:YNGDq1g5I3Q2E7Q2QK2IQ4gGg44C2Q8B2O1erlk2FCEYGDU1MmB:cY%o1XkBQ8g2C236B65E107IIg12g41I8I3ES1g39E339ECSJEmSJ1CQ1EiSJEmSJEmSJ1k1IEE1I1iQ1E1S1EiSBECSJEiSJEmSB2C126CCJEkSJ1kS10E1I175I109k67CQJEgC37EmCJEmSJEk1I1E1I1E1I1C1JEiSJEmSB7JEmSJEESJ1E4S4IEmS2CCIEGS16IEmS1E4i1B24EgCB100ECSJ1E1IEk1IEGSJ1CSB2CBEmQJ7I7BE1Q7QI1kQ1Eg83E11CSB14Q1ECSJE4C1J3B5kCJEESJEmSJEkCB4EC1J564ECCJEg39C25I1==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="poll" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">poll</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="phoenixRising" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">phoenixRising</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="useViewStateFilterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">useViewStateFilterState</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="view" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">view</stringProp>
                  <stringProp name="Argument.value">list</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ajaxts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ajaxts</stringProp>
                  <stringProp name="Argument.value">1684693714140</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestAlternateFlexDates" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestAlternateFlexDates</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="activeLeg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">activeLeg</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hasFilterPreferences" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hasFilterPreferences</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="r9version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">r9version</stringProp>
                  <stringProp name="Argument.value">R667c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lastPollTotalCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lastPollTotalCount</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="requestReason" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">requestReason</stringProp>
                  <stringProp name="Argument.value">POLL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="priceType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">priceType</stringProp>
                  <stringProp name="Argument.value">daybase</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sortMode</stringProp>
                  <stringProp name="Argument.value">bestflight</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="watchedResultId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">watchedResultId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ascending" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ascending</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderAirlineStopsMatrix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderAirlineStopsMatrix</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="renderPlusMinusThreeFlex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">renderPlusMinusThreeFlex</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scriptsMetadata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scriptsMetadata</stringProp>
                  <stringProp name="Argument.value">14D1HgE16I2JK1kB1:IEI8g1Y5U11QIGIjLBhUICpXR8CEB4Eg5UBD1L6QDw35D1PTycE1KBC1kYFrGVv.BkogLg4B1I1Q27BBQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filterState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">filterState</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSecondPhase" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isSecondPhase</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="applyFilters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">applyFilters</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="existingAds" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">existingAds</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="append" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">append</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/flights/results/FlightSearchPoll</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="X-RequestId" elementType="Header">
                  <stringProp name="Header.name">X-RequestId</stringProp>
                  <stringProp name="Header.value">flights#results#7GAEJP</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[74]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/common/results/filters/PreviousFiltersUpdateAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="formtoken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">formtoken</stringProp>
                  <stringProp name="Argument.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currentFilters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">currentFilters</stringProp>
                  <stringProp name="Argument.value">stops;2;0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/common/results/filters/PreviousFiltersUpdateAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[75]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:28:36.303Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/flight/results/unknown/ResultsPage/search_finished/completed&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:35.803Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[76]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/horizon/flights/results/FlightResultImageDetailsAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="formtoken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">formtoken</stringProp>
                  <stringProp name="Argument.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="resultId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">resultId</stringProp>
                  <stringProp name="Argument.value">87f69085d94d72b341fd6bbf72d3ad02</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="searchId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">searchId</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/horizon/flights/results/FlightResultImageDetailsAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-R9-Blue-Green-Version" elementType="Header">
                  <stringProp name="Header.name">X-R9-Blue-Green-Version</stringProp>
                  <stringProp name="Header.value">R667c</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-CSRF</stringProp>
                  <stringProp name="Header.value">FCcutXY1vBSMBsBBxuD3rx52zAaQOfDqcgR4ZZZVs2k-vVElU9XaM38Gtbh8Gu$uvoparZwt5PIBM8__e3Otn8I</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[77]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:28:46.314Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;resultdetail&quot;,&quot;payload&quot;:{&quot;componentId&quot;:&quot;87f69085d94d72b341fd6bbf72d3ad02&quot;,&quot;respos&quot;:0,&quot;source&quot;:&quot;cta&quot;,&quot;eventObject&quot;:&quot;details&quot;,&quot;eventValue&quot;:&quot;show&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:45.811Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;viewdeal&quot;,&quot;payload&quot;:{&quot;respos&quot;:0,&quot;componentId&quot;:&quot;87f69085d94d72b341fd6bbf72d3ad02&quot;,&quot;eventObject&quot;:&quot;bookinglink&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:45.811Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;resultdetail&quot;,&quot;payload&quot;:{&quot;componentId&quot;:&quot;87f69085d94d72b341fd6bbf72d3ad02&quot;,&quot;respos&quot;:0,&quot;source&quot;:&quot;cta&quot;,&quot;eventObject&quot;:&quot;details&quot;,&quot;eventValue&quot;:&quot;show&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:45.812Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;viewdeal&quot;,&quot;payload&quot;:{&quot;respos&quot;:0,&quot;componentId&quot;:&quot;87f69085d94d72b341fd6bbf72d3ad02&quot;,&quot;eventObject&quot;:&quot;bookinglink&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:45.812Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;resultdetail&quot;,&quot;payload&quot;:{&quot;componentId&quot;:&quot;87f69085d94d72b341fd6bbf72d3ad02&quot;,&quot;respos&quot;:0,&quot;source&quot;:&quot;cta&quot;,&quot;eventObject&quot;:&quot;details&quot;,&quot;eventValue&quot;:&quot;show&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:45.814Z&quot;},{&quot;eventType&quot;:&quot;event&quot;,&quot;eventName&quot;:&quot;viewdeal&quot;,&quot;payload&quot;:{&quot;respos&quot;:0,&quot;componentId&quot;:&quot;87f69085d94d72b341fd6bbf72d3ad02&quot;,&quot;eventObject&quot;:&quot;bookinglink&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:45.814Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/flight/results/unknown/faremodaldialog/open&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:45.879Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/flight/results/unknown/booking-link/click/bf-cheapest/10/featured-button&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:45.879Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/flight/results/unknown/result-card/click/bf-cheapest/10/featured-price&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:45.880Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/flight/results/unknown/result-card/click/bf-cheapest/10/featured-price&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:45.880Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/flight/results/unknown/imagedetails/error/UPA_TASK_ERROR&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;iAZ1684693701104&quot;,&quot;searchId&quot;:&quot;RcFiB5Gw-8&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;results&quot;,&quot;subPageType&quot;:&quot;unknown&quot;},&quot;location&quot;:{&quot;uri&quot;:&quot;/flights/TLV,AMM-AQJ/2023-06-28/2023-07-09&quot;,&quot;queryString&quot;:&quot;%3Fsort%3Dbestflight_a&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2F%3Fsid%3De3f3ecc54206abb2cd1ae1af0ad9b274%26aid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:46.309Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[78]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/book/flight?code=RcFiB5Gw-8.18wgSzIaLAlgpzrTH2pViLaYAeeTFjgE.21658.87f69085d94d72b341fd6bbf72d3ad02&amp;h=c9f2d75c2714&amp;sub=E-18768e47a15&amp;payment=0.00:JOD:MC_D:Mastercard%20Debit:true&amp;pageOrigin=F..RP.RFE.P0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sub" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sub</stringProp>
                  <stringProp name="Argument.value">E-18768e47a15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageOrigin</stringProp>
                  <stringProp name="Argument.value">F..RP.RFE.P0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                  <stringProp name="Argument.value">RcFiB5Gw-8.18wgSzIaLAlgpzrTH2pViLaYAeeTFjgE.21658.87f69085d94d72b341fd6bbf72d3ad02</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="h" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">h</stringProp>
                  <stringProp name="Argument.value">c9f2d75c2714</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="payment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payment</stringProp>
                  <stringProp name="Argument.value">0.00:JOD:MC_D:Mastercard Debit:true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">book/flight</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[79]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>31464.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">15732</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 31464 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://uk.mytrip.com/from/kayak/air/AMMAQJ28JUN09JUL/1?customerCurrency=GBP&amp;customerLanguage=en&amp;ibe.asc=1&amp;ibe.asr=6.2QKK7DZK&amp;ibe.cot=4.3566GKC5P5&amp;ibe.cr=H2X0V6_1&amp;ibe.d=MCwxOzAsMDswOzU7MjM7MzU2NkdLQlZMQg%3D%3D&amp;ibe.ecc=4.2sidx0g.5451&amp;ibe.oas=1&amp;ibe.oct=20&amp;ibe.odt=RV0TZ9&amp;ibe.ot=17399&amp;ibe.psc=18&amp;ibe.x=12391.12583&amp;selectionKey=RJ306-28Jun23-L_RJ305-09Jul23-L%2C1436cmm%2C%3A%3Ag_0.0%3Ah_0.1%3Aa_J6.E1%3Ab_4Z%3Ac_5A%3Ad_2da78%3Ae_-32d2%3Af_5%3Ai_1.0.0%3Aj_E0%3Az_d3nncp&amp;ext-tr=Ri2_9Eyvvo8bQ$KTHDskng&amp;ext-src=gb_web_kay" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="customerLanguage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customerLanguage</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.asc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ibe.asc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ibe.x</stringProp>
                  <stringProp name="Argument.value">12391.12583</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ext-tr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ext-tr</stringProp>
                  <stringProp name="Argument.value">Ri2_9Eyvvo8bQ$KTHDskng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.ot" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ibe.ot</stringProp>
                  <stringProp name="Argument.value">17399</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.cot" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ibe.cot</stringProp>
                  <stringProp name="Argument.value">4.3566GKC5P5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ext-src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ext-src</stringProp>
                  <stringProp name="Argument.value">gb_web_kay</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.ecc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ibe.ecc</stringProp>
                  <stringProp name="Argument.value">4.2sidx0g.5451</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.asr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ibe.asr</stringProp>
                  <stringProp name="Argument.value">6.2QKK7DZK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.oas" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ibe.oas</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.cr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ibe.cr</stringProp>
                  <stringProp name="Argument.value">H2X0V6_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.oct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ibe.oct</stringProp>
                  <stringProp name="Argument.value">20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.psc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ibe.psc</stringProp>
                  <stringProp name="Argument.value">18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.odt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ibe.odt</stringProp>
                  <stringProp name="Argument.value">RV0TZ9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selectionKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selectionKey</stringProp>
                  <stringProp name="Argument.value">RJ306-28Jun23-L_RJ305-09Jul23-L,1436cmm,::g_0.0:h_0.1:a_J6.E1:b_4Z:c_5A:d_2da78:e_-32d2:f_5:i_1.0.0:j_E0:z_d3nncp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ibe.d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ibe.d</stringProp>
                  <stringProp name="Argument.value">MCwxOzAsMDswOzU7MjM7MzU2NkdLQlZMQg==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="customerCurrency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">customerCurrency</stringProp>
                  <stringProp name="Argument.value">GBP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">from/kayak/air/AMMAQJ28JUN09JUL/1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[80]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>596.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">298</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 596 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://booking.kayak.com/s/vestigo/measure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;headers&quot;:{&quot;clientRequestTime&quot;:&quot;2023-05-21T18:28:53.110Z&quot;},&quot;events&quot;:[{&quot;eventType&quot;:&quot;view&quot;,&quot;eventName&quot;:&quot;show&quot;,&quot;payload&quot;:{},&quot;context&quot;:{&quot;viewId&quot;:&quot;$ZB1684693732550&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;BookItPage&quot;,&quot;subPageType&quot;:null},&quot;location&quot;:{&quot;uri&quot;:&quot;/book/flight&quot;,&quot;queryString&quot;:&quot;%3Fcode%3DRcFiB5Gw-8.18wgSzIaLAlgpzrTH2pViLaYAeeTFjgE.21658.87f69085d94d72b341fd6bbf72d3ad02%26h%3Dc9f2d75c2714%26sub%3DE-18768e47a15%26payment%3D0.00%3AJOD%3AMC_D%3AMastercard%2520Debit%3Atrue%26pageOrigin%3DF..RP.RFE.P0&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2Fflights%2FTLV%2CAMM-AQJ%2F2023-06-28%2F2023-07-09%3Fsort%3Dbestflight_a&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:52.609Z&quot;},{&quot;eventType&quot;:&quot;action&quot;,&quot;eventName&quot;:&quot;vs&quot;,&quot;payload&quot;:{&quot;eventObject&quot;:&quot;/vs/page/flight/BookItPage&quot;},&quot;context&quot;:{&quot;viewId&quot;:&quot;$ZB1684693732550&quot;,&quot;domain&quot;:&quot;booking.kayak.com&quot;,&quot;client&quot;:{&quot;type&quot;:&quot;desktop&quot;,&quot;windowSize&quot;:{&quot;height&quot;:696,&quot;width&quot;:1536},&quot;userInterfaceStyle&quot;:&quot;light&quot;,&quot;npmPackageVersion&quot;:&quot;12.7.0&quot;},&quot;viewCode&quot;:{&quot;vertical&quot;:&quot;flight&quot;,&quot;pageType&quot;:&quot;BookItPage&quot;,&quot;subPageType&quot;:null},&quot;location&quot;:{&quot;uri&quot;:&quot;/book/flight&quot;,&quot;queryString&quot;:&quot;%3Fcode%3DRcFiB5Gw-8.18wgSzIaLAlgpzrTH2pViLaYAeeTFjgE.21658.87f69085d94d72b341fd6bbf72d3ad02%26h%3Dc9f2d75c2714%26sub%3DE-18768e47a15%26payment%3D0.00%3AJOD%3AMC_D%3AMastercard%2520Debit%3Atrue%26pageOrigin%3DF..RP.RFE.P0&quot;,&quot;referrer&quot;:&quot;https%3A%2F%2Fbooking.kayak.com%2Fflights%2FTLV%2CAMM-AQJ%2F2023-06-28%2F2023-07-09%3Fsort%3Dbestflight_a&quot;},&quot;tags&quot;:null,&quot;devicePixelRatio&quot;:1.25},&quot;timestamp&quot;:&quot;2023-05-21T18:28:52.609Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">s/vestigo/measure</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Content-Type-Options" elementType="Header">
                  <stringProp name="Header.name">X-Content-Type-Options</stringProp>
                  <stringProp name="Header.value">nosniff</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[81]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cdn.cookielaw.org/consent/bc45c15d-6379-4d34-aa12-a9c7f323e277/bc45c15d-6379-4d34-aa12-a9c7f323e277.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">consent/bc45c15d-6379-4d34-aa12-a9c7f323e277/bc45c15d-6379-4d34-aa12-a9c7f323e277.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[82]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://uk.mytrip.com/graphql/verifyUser" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;verifyUser&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query verifyUser {\n  verifyUser {\n    email\n    loginType\n    loginOrderNumber\n    sessionOrderNumber\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">graphql/verifyUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-ETG-GraphQL-Operation" elementType="Header">
                  <stringProp name="Header.name">X-ETG-GraphQL-Operation</stringProp>
                  <stringProp name="Header.value">verifyUser</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[83]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://uk.mytrip.com/graphql/CurrentUserForLayout" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CurrentUserForLayout&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query CurrentUserForLayout {\n  siteContext {\n    language {\n      id\n      code\n      name\n      __typename\n    }\n    brand {\n      id\n      code\n      name\n      __typename\n    }\n    dateFormat {\n      date\n      datetime\n      dayDdmmmTime\n      dayDdmmm\n      time\n      day\n      dayYear\n      dayTime\n      weekday\n      shortWeekday\n      shortWeekdayYear\n      shortWeekdayFullYear\n      weekdayYear\n      monthYear\n      longMonthYear\n      timeWeekdayYear\n      shortDayShortMonth\n      dayName\n      __typename\n    }\n    market {\n      code\n      name\n      id\n      phonePrefixes {\n        id\n        prefix\n        __typename\n      }\n      states {\n        value: code\n        label: name\n        __typename\n      }\n      __typename\n    }\n    language {\n      code\n      id\n      __typename\n    }\n    entryType\n    partner\n    siteCurrency {\n      code\n      exponent\n      __typename\n    }\n    siteName\n    productionWeb\n    __typename\n  }\n  localization {\n    availableLanguages {\n      code\n      id\n      locale\n      name\n      __typename\n    }\n    __typename\n  }\n  siteInformation {\n    footer {\n      legal\n      paymentProviders {\n        id\n        url {\n          href\n          __typename\n        }\n        __typename\n      }\n      siteFlags {\n        id\n        url {\n          href\n          __typename\n        }\n        __typename\n      }\n      trustedPartners {\n        id\n        url {\n          href\n          __typename\n        }\n        __typename\n      }\n      menus {\n        mainMenuItems {\n          name\n          path\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    header {\n      mainMenuItems {\n        menuType\n        path\n        name\n        subMenu {\n          path\n          name\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">graphql/CurrentUserForLayout</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-ETG-GraphQL-Operation" elementType="Header">
                  <stringProp name="Header.name">X-ETG-GraphQL-Operation</stringProp>
                  <stringProp name="Header.value">CurrentUserForLayout</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[84]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cdn.cookielaw.org/consent/bc45c15d-6379-4d34-aa12-a9c7f323e277/0406ae38-c904-48d5-9b01-1f7c386d5416/en.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">consent/bc45c15d-6379-4d34-aa12-a9c7f323e277/0406ae38-c904-48d5-9b01-1f7c386d5416/en.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[85]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cdn.cookielaw.org/scripttemplates/6.28.0/assets/otCenterRounded.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">scripttemplates/6.28.0/assets/otCenterRounded.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[86]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cdn.cookielaw.org/scripttemplates/6.28.0/assets/v2/otPcPanel.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">scripttemplates/6.28.0/assets/v2/otPcPanel.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[87]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cdn.cookielaw.org/scripttemplates/6.28.0/assets/otCommonStyles.css" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">scripttemplates/6.28.0/assets/otCommonStyles.css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[88]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://uk.mytrip.com/graphql/getSelfServiceRebooking" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSelfServiceRebooking&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getSelfServiceRebooking {\n  selfServiceRebooking {\n    criteria\n    travelers {\n      id\n      ageType\n      birthDate\n      firstName\n      lastName\n      gender\n      __typename\n    }\n    validatingCarriers\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">graphql/getSelfServiceRebooking</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-ETG-GraphQL-Operation" elementType="Header">
                  <stringProp name="Header.name">X-ETG-GraphQL-Operation</stringProp>
                  <stringProp name="Header.value">getSelfServiceRebooking</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[89]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://uk.mytrip.com/graphql/SearchOnResultPage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SearchOnResultPage&quot;,&quot;variables&quot;:{&quot;adults&quot;:1,&quot;cabinClass&quot;:&quot;ECONOMY&quot;,&quot;childAges&quot;:[],&quot;direct&quot;:false,&quot;filters&quot;:[],&quot;routes&quot;:[{&quot;origin&quot;:&quot;AMM&quot;,&quot;destination&quot;:&quot;AQJ&quot;,&quot;departureDate&quot;:&quot;2023-06-28&quot;},{&quot;origin&quot;:&quot;AQJ&quot;,&quot;destination&quot;:&quot;AMM&quot;,&quot;departureDate&quot;:&quot;2023-07-09&quot;}],&quot;sortTypeCode&quot;:&quot;RECOMMENDATION&quot;},&quot;query&quot;:&quot;query SearchOnResultPage($routes: [Route!]!, $cabinClass: CabinClass, $direct: Boolean, $carrierCodes: [String], $adults: Int!, $childAges: [Int], $offset: Int, $sortTypeCode: String, $filters: [Filter!], $validWithVoucher: Boolean) {\n  search(routes: $routes, cabinClass: $cabinClass, direct: $direct, carrierCodes: $carrierCodes, adults: $adults, childAges: $childAges, offset: $offset, sortTypeCode: $sortTypeCode, filters: $filters, validWithVoucher: $validWithVoucher) {\n    availableFilters {\n      code\n      group\n      label\n      ... on RangeFilter {\n        __typename\n        code\n        group\n        label\n        max\n        min\n        type\n      }\n      ... on SelectionFilter {\n        __typename\n        code\n        group\n        label\n        isMultiChoice\n        options {\n          label\n          value\n          __typename\n        }\n        type\n      }\n      __typename\n    }\n    availableSortTypes {\n      code\n      name\n      __typename\n    }\n    carrierCodes\n    carrierNames\n    flights {\n      ...Flights\n      __typename\n    }\n    flightsCount\n    filteredFlightsCount\n    quickSortPrices {\n      carrierPromo {\n        value\n        currency {\n          code\n          __typename\n        }\n        __typename\n      }\n      cheapTrip {\n        value\n        currency {\n          code\n          __typename\n        }\n        __typename\n      }\n      shortTrip {\n        value\n        currency {\n          code\n          __typename\n        }\n        __typename\n      }\n      recommendation {\n        value\n        currency {\n          code\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    resultSetMetaData {\n      priceRange {\n        min\n        max\n        __typename\n      }\n      travelTimeRange {\n        min\n        max\n        __typename\n      }\n      marketingCarriers {\n        code\n        name\n        __typename\n      }\n      __typename\n    }\n    routes {\n      origin {\n        code\n        name\n        cityCode\n        cityName\n        countryCode\n        countryName\n        continentCode\n        continentName\n        __typename\n      }\n      destination {\n        code\n        name\n        cityCode\n        cityName\n        countryCode\n        countryName\n        continentCode\n        continentName\n        __typename\n      }\n      departureAt\n      departureDate\n      departureTimeOfDay\n      __typename\n    }\n    searchPath\n    sponsoredTrips {\n      ...Flights\n      __typename\n    }\n    travelers {\n      ageType\n      __typename\n    }\n    type\n    tripCampaigns {\n      campaignImageUrlDesktop\n      campaignImageUrlMobile\n      selectionKey\n      __typename\n    }\n    validWithVoucher\n    __typename\n  }\n}\n\nfragment Flights on Trip {\n  id\n  tripId\n  isVI\n  includedCabinBaggage {\n    ...IncludedCabinBaggage\n    __typename\n  }\n  includedCheckedBaggage {\n    ...IncludedCheckedBaggage\n    __typename\n  }\n  bounds {\n    boundId: id\n    includedCabinBaggage {\n      ...IncludedCabinBaggage\n      __typename\n    }\n    includedCheckedBaggage {\n      ...IncludedCheckedBaggage\n      __typename\n    }\n    segments {\n      ... on TripSegment {\n        __typename\n        segmentId: id\n        aircraftType\n        arrivedAt\n        includedCabinBaggage {\n          ...IncludedCabinBaggage\n          __typename\n        }\n        includedCheckedBaggage {\n          ...IncludedCheckedBaggage\n          __typename\n        }\n        cabinClassName\n        departuredAt\n        destination {\n          code\n          name\n          cityCode\n          cityName\n          __typename\n        }\n        duration\n        equipmentCode\n        flightNumber\n        marketingCarrier {\n          code\n          name\n          __typename\n        }\n        numberOfTechnicalStops\n        operatingCarrier {\n          code\n          name\n          __typename\n        }\n        operatingInformation\n        origin {\n          code\n          name\n          cityCode\n          cityName\n          __typename\n        }\n        segmentDetails {\n          paxType\n          numberOfSeatsLeft\n          __typename\n        }\n      }\n      ... on EventSegment {\n        __typename\n        segmentId: id\n        types\n        duration\n      }\n      __typename\n    }\n    __typename\n  }\n  availableExtraProducts {\n    ...AvailableExtraProducts\n    __typename\n  }\n  includedExtraProducts {\n    id\n    texts {\n      name\n      productSummaryAlternativeName\n      readMoreText\n      receiptText\n      salesAbstract\n      __typename\n    }\n    __typename\n  }\n  selectionKey\n  type\n  tripCharacteristics\n  tripTravelers: travelers {\n    id\n    ageType\n    __typename\n  }\n  paymentMethodPrices {\n    ...PaymentMethodPrices\n    __typename\n  }\n  travelerPrices {\n    ...TravelerPrices\n    __typename\n  }\n  travelerPricesWithoutPaymentDiscounts {\n    price {\n      markup {\n        value\n        __typename\n      }\n      price {\n        value\n        currency {\n          code\n          __typename\n        }\n        __typename\n      }\n      vat {\n        value\n        __typename\n      }\n      __typename\n    }\n    taxesAndFees {\n      category\n      taxes {\n        code\n        title\n        amount {\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    travelerId\n    __typename\n  }\n  tripTags\n  systems\n  voucherAmount {\n    value\n    __typename\n  }\n  shareableUrl\n  __typename\n}\n\nfragment IncludedCabinBaggage on IncludedCabinBaggage {\n  pieces\n  weight\n  weightUnit\n  __typename\n}\n\nfragment IncludedCheckedBaggage on IncludedCheckedBaggage {\n  pieces\n  weight\n  weightUnit\n  __typename\n}\n\nfragment AvailableExtraProducts on ExtraProduct {\n  configuration {\n    productPreSelection\n    __typename\n  }\n  productId: id\n  name\n  selectedWithTrip\n  sellSpecification {\n    ... on SellSpecificationTravelerNew {\n      sellPriceTravelers {\n        price {\n          price {\n            value\n            __typename\n          }\n          markup {\n            value\n            __typename\n          }\n          vat {\n            value\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SellSpecificationNoneNew {\n      price {\n        price {\n          value\n          currency {\n            code\n            exponent\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SellSpecificationBaggageNew {\n      sellPriceBaggage {\n        maxWeight\n        numberOfUnits\n        weightUnit\n        price {\n          price {\n            value\n            currency {\n              code\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PaymentMethodPrices on PaymentMethodPrice {\n  name\n  price {\n    value\n    __typename\n  }\n  type\n  __typename\n}\n\nfragment TravelerPrices on TravelerPrice {\n  id\n  price {\n    markup {\n      value\n      __typename\n    }\n    price {\n      value\n      currency {\n        code\n        __typename\n      }\n      __typename\n    }\n    vat {\n      value\n      __typename\n    }\n    __typename\n  }\n  taxesAndFees {\n    category\n    taxes {\n      code\n      title\n      amount {\n        value\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  travelerId\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">graphql/SearchOnResultPage</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-ETG-GraphQL-Operation" elementType="Header">
                  <stringProp name="Header.name">X-ETG-GraphQL-Operation</stringProp>
                  <stringProp name="Header.value">SearchOnResultPage</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[90]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://uk.mytrip.com/graphql/SelectTripWithDataOnResultPage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SelectTripWithDataOnResultPage&quot;,&quot;variables&quot;:{&quot;selectionKey&quot;:&quot;RJ306-28Jun23-L_RJ305-09Jul23-L,1436cmm,::g_0.0:h_0.1:a_J6.E1:b_4Z:c_5A:d_2da78:e_-32d2:f_5:i_1.0.0:j_E0:z_d3nncp&quot;,&quot;searchPath&quot;:&quot;/air/AMMAQJ28JUN09JUL/1&quot;,&quot;excludedExtraProductIds&quot;:[2003]},&quot;query&quot;:&quot;mutation SelectTripWithDataOnResultPage($selectionKey: String!, $extraProductSelection: [ID], $bundleProductSelection: [BundleSelectionInput], $searchPath: String, $excludedExtraProductIds: [ID]) {\n  selectTrip(selectionKey: $selectionKey, extraProductSelection: $extraProductSelection, bundleProductSelection: $bundleProductSelection, searchPath: $searchPath) {\n    success\n    selectedTrip {\n      availableAncillaryBundles {\n        id\n        __typename\n      }\n      id\n      isVI\n      selectionKey\n      brandedFares {\n        ...BrandedFares\n        __typename\n      }\n      availableExtraProducts(excludedExtraProducts: $excludedExtraProductIds) {\n        ...AvailableExtraProducts\n        __typename\n      }\n      includedExtraProducts {\n        id\n        texts {\n          name\n          productSummaryAlternativeName\n          readMoreText\n          receiptText\n          salesAbstract\n          __typename\n        }\n        __typename\n      }\n      includedCheckedBaggage {\n        ...IncludedCheckedBaggage\n        __typename\n      }\n      bounds {\n        boundId: id\n        includedCheckedBaggage {\n          ...IncludedCheckedBaggage\n          __typename\n        }\n        segments {\n          ... on TripSegment {\n            __typename\n            segmentId: id\n            aircraftType\n            arrivedAt\n            includedCheckedBaggage {\n              ...IncludedCheckedBaggage\n              __typename\n            }\n            cabinClassName\n            departuredAt\n            destination {\n              code\n              name\n              cityCode\n              cityName\n              __typename\n            }\n            duration\n            equipmentCode\n            flightNumber\n            marketingCarrier {\n              code\n              name\n              __typename\n            }\n            operatingCarrier {\n              code\n              name\n              __typename\n            }\n            operatingInformation\n            origin {\n              code\n              name\n              cityCode\n              cityName\n              __typename\n            }\n            segmentDetails {\n              paxType\n              numberOfSeatsLeft\n              __typename\n            }\n          }\n          ... on EventSegment {\n            __typename\n            types\n            duration\n            segmentId: id\n          }\n          __typename\n        }\n        __typename\n      }\n      tripTravelers: travelers {\n        id\n        ageType\n        __typename\n      }\n      travelerPrices {\n        ...TravelerPrices\n        __typename\n      }\n      travelerPricesWithoutPaymentDiscounts {\n        price {\n          markup {\n            value\n            __typename\n          }\n          price {\n            value\n            currency {\n              code\n              __typename\n            }\n            __typename\n          }\n          vat {\n            value\n            __typename\n          }\n          __typename\n        }\n        taxesAndFees {\n          category\n          taxes {\n            code\n            title\n            amount {\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        travelerId\n        __typename\n      }\n      tripCharacteristics\n      paymentMethodPrices {\n        ...PaymentMethodPrices\n        __typename\n      }\n      tripCharacteristics\n      systems\n      voucherAmount {\n        value\n        __typename\n      }\n      shareableUrl\n      type\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment BrandedFares on BrandedFare {\n  checkedBaggageSummary {\n    tripSummaries {\n      baggageDetails {\n        pieces\n        weight\n        weightUnit\n        __typename\n      }\n      baggageStatus\n      __typename\n    }\n    __typename\n  }\n  cabinBaggageTripSummary {\n    cabinBaggageTravelerDetails {\n      cabinBaggageDetails {\n        pieces\n        weight\n        weightUnit\n        __typename\n      }\n      cabinBaggageStatus\n      __typename\n    }\n    __typename\n  }\n  features {\n    availability\n    code\n    group\n    name\n    __typename\n  }\n  id\n  name\n  selectionKey\n  travelerPrices {\n    id\n    price {\n      price {\n        value\n        __typename\n      }\n      __typename\n    }\n    travelerId\n    __typename\n  }\n  travelers {\n    age\n    ageType\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment AvailableExtraProducts on ExtraProduct {\n  configuration {\n    productPreSelection\n    __typename\n  }\n  productId: id\n  name\n  selectedWithTrip\n  sellSpecification {\n    ... on SellSpecificationTravelerNew {\n      sellPriceTravelers {\n        price {\n          price {\n            value\n            __typename\n          }\n          markup {\n            value\n            __typename\n          }\n          vat {\n            value\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SellSpecificationNoneNew {\n      price {\n        price {\n          value\n          currency {\n            code\n            exponent\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SellSpecificationBaggageNew {\n      sellPriceBaggage {\n        maxWeight\n        numberOfUnits\n        weightUnit\n        price {\n          price {\n            value\n            currency {\n              code\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment IncludedCheckedBaggage on IncludedCheckedBaggage {\n  pieces\n  weight\n  weightUnit\n  __typename\n}\n\nfragment TravelerPrices on TravelerPrice {\n  id\n  price {\n    markup {\n      value\n      __typename\n    }\n    price {\n      value\n      currency {\n        code\n        __typename\n      }\n      __typename\n    }\n    vat {\n      value\n      __typename\n    }\n    __typename\n  }\n  taxesAndFees {\n    category\n    taxes {\n      code\n      title\n      amount {\n        value\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  travelerId\n  __typename\n}\n\nfragment PaymentMethodPrices on PaymentMethodPrice {\n  name\n  price {\n    value\n    __typename\n  }\n  type\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">graphql/SelectTripWithDataOnResultPage</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-ETG-GraphQL-Operation" elementType="Header">
                  <stringProp name="Header.name">X-ETG-GraphQL-Operation</stringProp>
                  <stringProp name="Header.value">SelectTripWithDataOnResultPage</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[91]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://uk.mytrip.com/com.snowplowanalytics.snowplow/tp2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;schema&quot;:&quot;iglu:com.snowplowanalytics.snowplow/payload_data/jsonschema/1-0-4&quot;,&quot;data&quot;:[{&quot;e&quot;:&quot;se&quot;,&quot;se_ca&quot;:&quot;Results&quot;,&quot;se_ac&quot;:&quot;Seen&quot;,&quot;se_la&quot;:&quot;Page&quot;,&quot;eid&quot;:&quot;29ec31af-afe9-4b55-8fc9-421b9a7afc53&quot;,&quot;tv&quot;:&quot;js-3.3.1&quot;,&quot;tna&quot;:&quot;sp&quot;,&quot;aid&quot;:&quot;sp-mytrip_uk&quot;,&quot;p&quot;:&quot;web&quot;,&quot;cookie&quot;:&quot;1&quot;,&quot;cs&quot;:&quot;UTF-8&quot;,&quot;lang&quot;:&quot;en-US&quot;,&quot;res&quot;:&quot;1536x864&quot;,&quot;cd&quot;:&quot;24&quot;,&quot;dtm&quot;:&quot;1684693736624&quot;,&quot;vp&quot;:&quot;1536x696&quot;,&quot;ds&quot;:&quot;1519x1383&quot;,&quot;vid&quot;:&quot;1&quot;,&quot;sid&quot;:&quot;0568d928-5f95-4bfc-a15d-cb325fefb525&quot;,&quot;duid&quot;:&quot;6e969853-402a-40ff-b3c0-5e5bb04bdd9f&quot;,&quot;refr&quot;:&quot;https://booking.kayak.com/&quot;,&quot;url&quot;:&quot;https://uk.mytrip.com/rf/result?selectionKey=RJ306-28Jun23-L_RJ305-09Jul23-L%2C1436cmm%2C%3A%3Ag_0.0%3Ah_0.1%3Aa_J6.E1%3Ab_4Z%3Ac_5A%3Ad_2da78%3Ae_-32d2%3Af_5%3Ai_1.0.0%3Aj_E0%3Az_d3nncp&quot;,&quot;cx&quot;:&quot;eyJzY2hlbWEiOiJpZ2x1OmNvbS5zbm93cGxvd2FuYWx5dGljcy5zbm93cGxvdy9jb250ZXh0cy9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6W3sic2NoZW1hIjoiaWdsdTpjb20uZXRncnMyL2ZsaWdodC9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6eyJkZXN0aW5hdGlvbkFpcnBvcnRJYXRhcyI6IkFRSiwgQU1NIiwiZG9tZXN0aWMiOnRydWUsImluYm91bmREYXRlcyI6IjIwMjMtMDctMDkiLCJpbmJvdW5kTnVtU2VnbWVudHMiOjEsImluYm91bmRUcmlwRHVyYXRpb24iOjMwMDAwMDAsImlzTXVsdGlTdG9wVHJpcCI6ZmFsc2UsImlzVmlUcmlwIjpudWxsLCJqb3VybmV5VHlwZSI6IlJFVFVSTiIsIm1hcmtldGluZ0NhcnJpZXJDb2RlcyI6IlJKIiwibWV0YVByaWNlIjoxNzM5OSwib2ZmZXJlZEJyYW5kZWRGYXJlIjpmYWxzZSwib3BlcmF0aW5nQ2FycmllckNvZGVzIjoiUkoiLCJvcmlnaW5BaXJwb3J0SWF0YXMiOiJBTU0sIEFRSiIsIm91dGJvdW5kRGF0ZXMiOiIyMDIzLTA2LTI4Iiwib3V0Ym91bmROdW1TZWdtZW50cyI6MSwib3V0Ym91bmRUcmlwRHVyYXRpb24iOjMzMDAwMDAsInByaWNlIjoxNzM5OSwicHJpY2VTZWVuUGF5bWVudE1ldGhvZCI6bnVsbCwic2VsZWN0ZWRCcmFuZGVkRmFyZSI6bnVsbCwic2VsZWN0ZWRGcm9tRW50cnkiOm51bGwsInRvdGFsQW1vdW50IjpudWxsLCJ0cmlwVHlwZSI6IkFJUiIsInZhbGlkYXRpbmdDYXJyaWVyQ29kZXMiOm51bGwsImFpclN5c3RlbXMiOiJBbWFkZXVzIiwiYm9va2luZ0NsYXNzZXMiOiJFQ09OT01ZIn19LHsic2NoZW1hIjoiaWdsdTpjb20uZXRncnMyL3Bhc3Nlbmdlci9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6eyJudW1BZHVsdHMiOjEsIm51bUNoaWxkcmVuIjowLCJudW1JbmZhbnRzIjowLCJudW1UZWVuQ2hpbGRyZW4iOjAsIm51bVlvdW5nQ2hpbGRyZW4iOjB9fSx7InNjaGVtYSI6ImlnbHU6Y29tLmV0Z3JzMi9wcm9kdWN0L2pzb25zY2hlbWEvMS0wLTAiLCJkYXRhIjp7InNlbGVjdGVkUHJvZHVjdHMiOm51bGwsIm9mZmVyZWRQcm9kdWN0cyI6bnVsbH19LHsic2NoZW1hIjoiaWdsdTpjb20uZXRncnMyL3JlZmVycmVyL2pzb25zY2hlbWEvMS0wLTAiLCJkYXRhIjp7ImVudHJ5VHlwZSI6Im1ldGFzZWFyY2giLCJwYXJ0bmVyIjoia2F5YWsifX0seyJzY2hlbWEiOiJpZ2x1OmNvbS5ldGdyczIvc2l0ZS9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6eyJhYnhUZXN0cyI6eyJBQi01MTggQkYgT1RBIGV4cGFuc2lvbiB0ZXN0Ijp7ImFieFRlc3RTY2VuYXJpbyI6IkNvbnRyb2wgVmFyaWF0aW9uIiwiYWJ4VGVzdFR5cGUiOiJQcm9wZXJ0aWVzVXNlZEJ5V2ViTGF5ZXIifSwiVUsgS2F5YWsgLSBDb252ZXJzaW9uUmF0ZUJsb2NrLkZpbHRlci5FbmFibGVkIjp7ImFieFRlc3RTY2VuYXJpbyI6IkNvbnZlcnNpb25SYXRlQmxvY2suRmlsdGVyLkVuYWJsZWQiLCJhYnhUZXN0VHlwZSI6IlByb3BlcnRpZXNVc2VkQnlDdXN0b21lclNlYXJjaCJ9LCIyLiBFeHRyYSBSZXZlbnVlIEhlYWRyb29tIENhbGN1bGF0aW9ucyBLYXkiOnsiYWJ4VGVzdFNjZW5hcmlvIjoiQ29udHJvbCBWYXJpYXRpb24iLCJhYnhUZXN0VHlwZSI6IlByb3BlcnRpZXMifSwiQUItNTIzIFRBUC1Eb21lc3RpYyBCYWdnYWdlIE1hcmtVcCBkZWNyZWFzZSI6eyJhYnhUZXN0U2NlbmFyaW8iOiJUQVAtRG9tZXN0aWMgQmFnZ2FnZSBNYXJrVXAgZGVjcmVhc2UiLCJhYnhUZXN0VHlwZSI6IkFuY2lsbGFyeVByaWNpbmcifX0sInNpdGVDb3VudHJ5IjoiR0IiLCJzaXRlQ3VycmVuY3kiOiJHQlAiLCJzaXRlTGFuZ3VhZ2UiOiJFTiIsInNpdGVOYW1lIjoibXl0cmlwX3VrIn19LHsic2NoZW1hIjoiaWdsdTpjb20uZXRncnMyL3VzZXIvanNvbnNjaGVtYS8xLTAtMCIsImRhdGEiOnsiYnJvd3NlciI6IkNocm9tZSIsImRldmljZVR5cGUiOiJEZXNrdG9wIn19LHsic2NoZW1hIjoiaWdsdTpjb20uc25vd3Bsb3dhbmFseXRpY3Muc25vd3Bsb3cvd2ViX3BhZ2UvanNvbnNjaGVtYS8xLTAtMCIsImRhdGEiOnsiaWQiOiI4YTk2NTRiMi0yZTRkLTQ5ZDItOWVjNC0yMTlkY2VkMGZkMmUifX1dfQ&quot;,&quot;stm&quot;:&quot;1684693736636&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">com.snowplowanalytics.snowplow/tp2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[92]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
