<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="booking.com-flights" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">collector-pxikkul2rm.px-cloud.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">www.booking.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">accommodations.booking.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">accounts.google.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">gtm-mktg.booking.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">ct.pinterest.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">3</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://collector-pxikkul2rm.px-cloud.net/api/v2/collector" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">p2</stringProp>
                  <stringProp name="Argument.value">EAIaIQobChMIh9XRu_OG_wIVy4uDBx0A7wjYEAAYASAAEgLOJvD_BwE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cts</stringProp>
                  <stringProp name="Argument.value">410c7124-f7fa-11ed-94c6-6f67526d7259</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rsc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsc</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">NTA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uuid</stringProp>
                  <stringProp name="Argument.value">d171d7d0-f804-11ed-91f3-3d0496194026</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ft" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ft</stringProp>
                  <stringProp name="Argument.value">263</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">410c6dad-f7fa-11ed-94c6-6f67526d7259ó &#x84;±ó &#x84;¶ó &#x84;¸ó &#x84;´ó &#x84;¶ó &#x84;¹ó &#x84;³ó &#x84;µó &#x84;±ó &#x84;°ó &#x84;°ó &#x84;´ó &#x84;¸</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cs</stringProp>
                  <stringProp name="Argument.value">0f237966a9148381fa490fcc4533d1217b13b3d0a7d8462713074947d61adba4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vid</stringProp>
                  <stringProp name="Argument.value">40bf309a-f7fa-11ed-b3fa-a5ee45f1ce0d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pxhd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pxhd</stringProp>
                  <stringProp name="Argument.value">W0BgYwcW-mJHk%2Fxz-ALsSp1FV2QcQF4cqEGKXUImLpK4otclBga2e6SIhsF3P06hNt6gZK7KBYQDgHYlLfx1lw%3D%3D%3AnS5dd51DXJY5rpHg6y7D6NMGM7AWawLhb2Zn5tJYxNhl-DnKhkQ73vvjpg1cCmXGBTZPHeTXLwfcDbCWYU8nBGvSIKDzRVuhJLeHj7Ag6Ks%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">8790088017817818</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="payload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payload</stringProp>
                  <stringProp name="Argument.value">aUkQRhAIEGJqAwIKBgcQHhBWEAhJEGJqAwIKAQIQCAMDBgMeEGJqAwMDBgMQCAMLAB4QYmoDAgUCBxAIEGZLQld3QEBdQAgScVNcXF1GEkBXU1YSQkBdQldARltXQRJdVBJcR15eEhpAV1NWW1xVEhUCFRtuXBISEhJTRhJTRhIaWkZGQkEIHR1RVBxQQUZTRltRHFFdXx1eW1BBHUJXQFtfV0ZXQEodQkocRAUcBBwLHF9bXBxYQQgACAMKBAEHG25cEhISElNGEnpmf35wXVZLd15XX1dcRhxXURIaWkZGQkEIHR1RVBxQQUZTRltRHFFdXx1eW1BBHUJXQFtfV0ZXQEodQkocRAUcBBwLHF9bXBxYQQgACAcLAAQDGxAeEGJqAwMCAAUQCBBfXUdBV11EV0AQHhBiagMCBgMEEAgDBwEDBR4QYmoDAgUCChAIEEZAR1cQHhBiagMDAwoLEAhGQEdXHhBiagMCAQQFEAgQEVtcVldKQVdTQFFaDHZ7ZAhcRlofUVpbXlYaAxsMdntG^kCFxGWh9SRWlteVhoDGwx2e2QIXEZaH1FaW15WGgMbDHZ7ZAhcRlofUVpbXlYaAxsQHhBiagMCBAAAEAgAHhBiagMCAAUAEAgDBQQH&gt;Ax4QYmoDAwICBhAIAwQKBgQLAQcDABgsBBx4QYmoDAgACBNBAIEFYDBQNWBVYCH1QSKAgYfAwNXVh8LA1QBHwFWAgYLBA?GMLBgIABBpAeEGJqAw_rGICCgoQCFRTXkFXHhBiagMCAQQCEAgQWkZGQkEIHR1FRUUcUF1dWVtcVRxRXV8dW1xWV0ocV1wfVVAcWkZfXg1TW1YPAAEDAwABBBcNBcF5TUFdeFwF2U0AfWKF0fUF1dWVtcVR9WV0FZRl1CH2hk:S1cKd3FXRwFdflBAAVVmYXBUBHNhBAcACgALAgIDBgsLFwFzQl4XAXNGUxcBc0IDFwFzQgAXAXNTURcBc1NCFwFzXFdVFwFzVFsXAXNGW1lFVh8EBwcABAQAAEhcBc15CCwIECwoAABcBc15bFwFzVldRFwFzVl8XAXBFQRcKBdhRVUV5bVg93c3tTe2NdUHFaf3taC2pgR219dW1Fe2RLBkd2cEoCcwVFWGt3c3Nrc2Fzc3dVfn14RHZtcEV3FF5TXFUPV1wfVVAUQV71IDwMUXlN7cVW1RWlNcVVdWDwMQT09v</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">appId</stringProp>
                  <stringProp name="Argument.value">PXikKuL2RM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                  <stringProp name="Argument.value">v7.6.9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/collector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://accommodations.booking.com/autocomplete.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">autocomplete.json</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://collector-pxikkul2rm.px-cloud.net/api/v2/collector" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">p2</stringProp>
                  <stringProp name="Argument.value">EAIaIQobChMIh9XRu_OG_wIVy4uDBx0A7wjYEAAYASAAEgLOJvD_BwE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cts</stringProp>
                  <stringProp name="Argument.value">410c7124-f7fa-11ed-94c6-6f67526d7259</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rsc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsc</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">NTA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uuid</stringProp>
                  <stringProp name="Argument.value">d171d7d0-f804-11ed-91f3-3d0496194026</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ft" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ft</stringProp>
                  <stringProp name="Argument.value">263</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">410c6dad-f7fa-11ed-94c6-6f67526d7259ó &#x84;±ó &#x84;¶ó &#x84;¸ó &#x84;´ó &#x84;¶ó &#x84;¹ó &#x84;³ó &#x84;µó &#x84;±ó &#x84;°ó &#x84;°ó &#x84;´ó &#x84;¸</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cs</stringProp>
                  <stringProp name="Argument.value">0f237966a9148381fa490fcc4533d1217b13b3d0a7d8462713074947d61adba4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vid</stringProp>
                  <stringProp name="Argument.value">40bf309a-f7fa-11ed-b3fa-a5ee45f1ce0d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pxhd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pxhd</stringProp>
                  <stringProp name="Argument.value">W0BgYwcW-mJHk%2Fxz-ALsSp1FV2QcQF4cqEGKXUImLpK4otclBga2e6SIhsF3P06hNt6gZK7KBYQDgHYlLfx1lw%3D%3D%3AnS5dd51DXJY5rpHg6y7D6NMGM7AWawLhb2Zn5tJYxNhl-DnKhkQ73vvjpg1cCmXGBTZPHeTXLwfcDbCWYU8nBGvSIKDzRVuhJLeHj7Ag6Ks%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">6743795026517108</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="payload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payload</stringProp>
                  <stringProp name="Argument.value">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^BBGQEdXEB4QYmoDAwIABxAIEAcKCx4BBAAeAwQACgEQTx5JEGJqAwMCBAoQCBBfXUdBV11HRhAeESGJqAwILCwYQCBBGQEdXEB4QYmoDAgMBBRAIAQEKHAELCwsLAQoLBAYKBgYeEGJqAwILAQIQCAADARwEAgICAgQDAgEHAwcEAB4QYmoDAgEEBRAICx4QYmoDAgcGABAIAQoAHhBiagMCAQYEEAgHAB4QYmoDAgoKBRAIEFZbRBAeEGJqAwIKAQIQCAcEBh4QYmoDAwMGAxAIAQQKHhBiagMCBgMEEAgDBAALC08eSRBiagMDAgQKEAgQX11HQVdfXURXEB4QYmoDAgsLBhAIEEZAR1cQHhBiagMDAgAHEAgQBwAGHgEECx4DBAEGCk4HAgMeAQQLHgAGBRBPHkkQYmoDAwIEChAIEF9dR0FXVl1FXBAeEGJqAwILCwYQCBBGQEdXEB4QYmoDAgMBBRAIAQYEHAELCwsLAQoLBAYKBgYeEGJqAwILAQIQCAAHARwEAgICAgQDAgEHAwcEAB4QYmoDAgEEBRAICx4QYmoDAgcGABAIAQEGHhBiagMCAQYEEAgBBB4QYmoDAgoKBRAIEFtcQkdGEB4QYmoDAgoBAhAIBwICHhBiagMDAwYDEAgBBAseEGJqAwIGAwQQCAMECwAATx5JEGJqAwMCBAoQCBBUXVFHQRAeEGJqAwILCwYQCBBGQEdXEB4QYmoDAgMBBRAIAQYEHAELCwsLAQoLBAYKBgYeEGJqAwILAQIQCAAHARwEAgICAgQDAgEHAwcEAB4QYmoDAgEEBRAICx4QYmoDAgcGABAIAQEGHhBiagMCAQYEEAgBBB4Q&gt;YmoDAgoKBRAIEFtcQkdGEB4QYmoDAgYDBBAIAwQLAARPHkkQYmoDAwIEChAIEF9dR0FXR0IQHhBiagMCCwsGEAgQRkBHVxAeEGJqAwIDAQUQCAEGBBwBCwsLCwEKCwQGCgYGHhBiagMCCwECEAgABwEcBAICAgIEAwIBBwMHBAAeEGJqAwIBBAUQCAseEGJqAwIHBgAQCAEBBh4QYmoDAgEGBBAIAQQeEGJqAwIKCDgUQCBBbXEJHRhAeEGJqAwIKAQIQCAcCAh4QYmoDAwMGAxAIAQQLHhBiagMCBgMEEAgDBQIDB08eSRBiagMDAgQKEAgQUV5bUVkQHhBiagMCCwsGEAgQRkBHVxAeEGJqAwIDAQUQCAEGBBwBCwsLCwEKCwQGNCgYGHhBiagMCCwECEAgABwEcBAICAgIEAwIBBwMHBAAeEGJqAwIBBAUQCAseEGJqAwIHBgAQCAEBBh4QYmoDAgEGBBAIAQQeEGJqAwIKCgUQCBBbXEJHRhAeEGJqAwIKAQIQCAcCAh4QYmoDAwMGAxAIAQQSLHhBiagMCBQYEEAgQAhAeEGJqAwMDCgsQCEZAR1ceEGJqAwIGAwQQCAMFAgAATx5JEGJqAwMCBAoQCBBfXUdBV19dRFcQHhBiagMCCwsGEAgQRkBHVxAeEGJqAwMCAAcQCBAHAgMeAQQLHgMFAQEKEE8eSRBiagMDAgQKEAgQWVdLVl1FXBAeEGJqAwILCwYQCBBGQEdXEB4QYmoDAgMBBRAIAQYEHAELCwsLAQoL?GBAYKBgYeEGJqAwILAQIQCAAHARwEAgICAgQDAgEHAwcEAB4QYmoDAgEEBRAICx4QYmoDAgcGABAIpAQEGHhBiagMCAQYEEAgBBB4QYmoDAgoKBRAIEFtcQkdGEB4QYmoDAgUKABAIRkBHVx4QYmoDAgQBB_rGBAIBh4QYmoDAgYLAxAIAx4QYmoDAgYDBBAIAwUFBgRPHkkQYmoDAwIEChAIEFlXS0dCEB4QYmoDAgsLBhAIEEZAR1cQHhBiagMCAwEFEAgBBgQcAQsLCwsBCgsEBgoGBh4QYmoDAgsBAhAIAAcBHAQCAgICBAMCAQcDBwQAHhBiagMCAQQFEAgLHhBiagMCBwYAEAgBAgQeEGJqAwIBBgQQCAEEHhBiagMCCgoFEAgQW1xCR0YQHhBiagMCBgMEEAgDBQoEBE8eSRBiagMDAgQKEAgQWVdLVl1FXBAeEGJqAwILCwYQCBBGQEdXEB4QYmoDAgMBBRAIAQYEHAELCwsLAQoLBAYKBgYeEGJqAwILAQIQCAAHARwEAgICAgQDAgEHAwcEAB4QYmoDAgEEBRAICx4QYmoDAgcGABAIAQIEHhBiagMCAQYEEAgBBB4QYmoDAgoKBRAIEFtcQkdGEB4QYmoDAgUKABAIRkBHVx4QYmoDAgQBBBAIBh4QYmoDAgYLAxAIAx4QYmoDAgYDBBAIAwULBwFPHkkQYmoDAwIEChAIEFlXS0dCEB4QYmoDAgsLBhAIEEZAR1cQHhBiagMCAwEFEAgBBgQcAQsLCwsBCgsEBgoGBh4QYmoDAgsBAhAIAAcBHAQCAgICBAMCAQcDBwQAHhBiagMCAQQFEAgLHhBiagMCBwYAEAgBAgQeEGJqAwIBBgQQCAEEHhBiagMCCgoFEAgQW1xCR0YQHhBiagMCBgMEEAgDCgIABk8eSRBiagMDAgQKEAgQWVdLVl1FXBAeEGJqAwILCwYQCBBGQEdXEB4QYmoDAgMBBRAIAQYEHAELCwsLAQoLBAYKBgYeNEGJqAwILAQIQCAAHARwEAgICAgQDAgEHAwcEAB4QYmoDAgEEBRAICx4QYmoDAgcGABAIAQIEHhBiagMCAQYEEAgBBB4QYmoDAgoKBRAIEFtcQkdGEB4QYmoDAgUKABAIRkBHVx4QYmoDAgQBBBAIBh4QYmoKDAgYLAxAIAx4QYmoDAgYDBBAIAwoDAwFPHkkQYmoDAwIEChAIEFlXS0dCEB4QYmoDAgsLBhAIEEZAR1cQHhBiagMCAwEFEAgBBgQcAQsLCwsBCgsEBgoGBh4QYmoDAgsBAhAIAAcBHAQCAgICBAMCAQcDBwQAHhBiagMCAQQFEAgLHhBiagMCBwYAEAgBAgQeEGJqAwIBBgQQCAEEHhBiagMCCgoFEAgQW1xCR0YQ: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</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">appId</stringProp>
                  <stringProp name="Argument.value">PXikKuL2RM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                  <stringProp name="Argument.value">v7.6.9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/collector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/js_tracking?ref_action=index&amp;ver=2&amp;stype=1&amp;lang=en-gb&amp;pid=c5c38181613d00fb&amp;ete=&amp;etg=www_index_search_button_click&amp;etcg=&amp;ets=&amp;etgwv=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ver" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ver</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="etgwv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">etgwv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ets" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ets</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="stype" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stype</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ete" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ete</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ref_action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref_action</stringProp>
                  <stringProp name="Argument.value">index</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="etg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">etg</stringProp>
                  <stringProp name="Argument.value">www_index_search_button_click</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">c5c38181613d00fb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="etcg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">etcg</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">js_tracking</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-ET-Serialized-State" elementType="Header">
                  <stringProp name="Header.name">X-Booking-ET-Serialized-State</stringProp>
                  <stringProp name="Header.value">EVAu_QV53Rt1678PEEABIWS-H_bO3atZznyuct3hXZXSHLPxL1KQBiSGBquHEGhpl</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Client-Info" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Client-Info</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">c5c38181613d00fb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Info" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Info</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">e3f3ecc54206abb2cd1ae1af0ad9b274</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/searchresults.en-gb.html?ss=amman&amp;efdco=1&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;aid=2311236&amp;lang=en-gb&amp;sb=1&amp;src_elem=sb&amp;src=index&amp;dest_id=-970362&amp;dest_type=city&amp;ac_position=0&amp;ac_click_type=b&amp;ac_langcode=en&amp;ac_suggestion_list_length=5&amp;search_selected=true&amp;search_pageview_id=c5c38181613d00fb&amp;ac_meta=GhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA&amp;checkin=2023-06-01&amp;checkout=2023-06-05&amp;group_adults=4&amp;no_rooms=1&amp;group_children=0&amp;sb_travel_purpose=leisure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ss" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ss</stringProp>
                  <stringProp name="Argument.value">amman</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ac_position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_position</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sb_travel_purpose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sb_travel_purpose</stringProp>
                  <stringProp name="Argument.value">leisure</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ac_suggestion_list_length" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_suggestion_list_length</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                  <stringProp name="Argument.value">index</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ac_click_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_click_type</stringProp>
                  <stringProp name="Argument.value">b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ac_langcode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_langcode</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="search_pageview_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_pageview_id</stringProp>
                  <stringProp name="Argument.value">c5c38181613d00fb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="label" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">label</stringProp>
                  <stringProp name="Argument.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499:pl:ta:p1:p2:ac:ap:neg:fi:tikwd-65526620:lp9069822:li:dec:dm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dest_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dest_id</stringProp>
                  <stringProp name="Argument.value">-970362</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="src_elem" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">src_elem</stringProp>
                  <stringProp name="Argument.value">sb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="group_children" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_children</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="efdco" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">efdco</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="no_rooms" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">no_rooms</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkin</stringProp>
                  <stringProp name="Argument.value">2023-06-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dest_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dest_type</stringProp>
                  <stringProp name="Argument.value">city</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="search_selected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_selected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ac_meta" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_meta</stringProp>
                  <stringProp name="Argument.value">GhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="group_adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_adults</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aid</stringProp>
                  <stringProp name="Argument.value">2311236</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkout</stringProp>
                  <stringProp name="Argument.value">2023-06-05</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">searchresults.en-gb.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/c360/v1/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;action_name&quot;:&quot;webcoreux.header_component_served&quot;,&quot;action_version&quot;:&quot;2.0.0&quot;,&quot;content&quot;:{&quot;product_verticals_loaded&quot;:[{&quot;item_type&quot;:&quot;accommodations&quot;,&quot;item_position&quot;:1,&quot;is_item_preselected&quot;:1},{&quot;item_type&quot;:&quot;flights&quot;,&quot;item_position&quot;:2,&quot;is_item_preselected&quot;:0},{&quot;item_type&quot;:&quot;cars&quot;,&quot;item_position&quot;:3,&quot;is_item_preselected&quot;:0},{&quot;item_type&quot;:&quot;attractions&quot;,&quot;item_position&quot;:4,&quot;is_item_preselected&quot;:0},{&quot;item_type&quot;:&quot;airport_taxis&quot;,&quot;item_position&quot;:5,&quot;is_item_preselected&quot;:0}],&quot;product_vertical_selected&quot;:&quot;accommodations&quot;,&quot;headertype&quot;:&quot;full&quot;,&quot;viewport&quot;:&quot;large&quot;,&quot;option_preselected&quot;:[{&quot;action_type&quot;:&quot;currency&quot;,&quot;option_text&quot;:&quot;JOD&quot;},{&quot;action_type&quot;:&quot;language&quot;,&quot;option_text&quot;:&quot;en-gb&quot;}],&quot;is_loggedin&quot;:0,&quot;aid&quot;:&quot;2311236&quot;,&quot;label&quot;:&quot;ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499:pl:ta:p1:p2:ac:ap:neg:fi:tikwd-65526620:lp9069822:li:dec:dm&quot;,&quot;genius_level&quot;:&quot;0&quot;},&quot;context&quot;:{&quot;page&quot;:{&quot;page_referrer&quot;:&quot;https://www.booking.com/index.en-gb.html?aid=2311236%3Blabel%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm%3Bws%3D&amp;gclid=EAIaIQobChMIh9XRu_OG_wIVy4uDBx0A7wjYEAAYASAAEgLOJvD_BwE&amp;lang=en-gb&amp;soz=1&amp;lang_changed=1&quot;,&quot;page_url&quot;:&quot;https://www.booking.com/searchresults.en-gb.html?ss=amman&amp;efdco=1&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;aid=2311236&amp;lang=en-gb&amp;sb=1&amp;src_elem=sb&amp;src=index&amp;dest_id=-970362&amp;dest_type=city&amp;ac_position=0&amp;ac_click_type=b&amp;ac_langcode=en&amp;ac_suggestion_list_length=5&amp;search_selected=true&amp;search_pageview_id=c5c38181613d00fb&amp;ac_meta=GhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA&amp;checkin=2023-06-01&amp;checkout=2023-06-05&amp;group_adults=4&amp;no_rooms=1&amp;group_children=0&amp;sb_travel_purpose=leisure&quot;,&quot;page_title&quot;:&quot;Booking.com : Hotels in Amman . Book your hotel now!&quot;},&quot;web&quot;:{&quot;browser_language&quot;:&quot;en-US&quot;},&quot;local&quot;:{&quot;currency&quot;:&quot;JOD&quot;,&quot;language&quot;:&quot;en-gb&quot;}},&quot;tracker&quot;:{&quot;tracker_name&quot;:&quot;C360ReactTracker&quot;,&quot;tracker_type&quot;:&quot;Client&quot;,&quot;tracker_version&quot;:&quot;0.1.0&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">c360/v1/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-Booking-CSRF</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Label" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Label</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">74918193e4d90102</stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-ET-Seed" elementType="Header">
                  <stringProp name="Header.name">X-Booking-ET-Seed</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Platform" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Platform</stringProp>
                  <stringProp name="Header.value">WWW</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/87sduif98q3rijax?d=www.booking.com" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;3:QmgZTMBAd7GStdCDoG7/sA==:RwNbBo9aoo3JCfioya1yT7MNykhOQfplItG9p4waKk2YYgvg3no1+9o9dViWhmssOTT8fmUoOhpIPUynqwr9YIk+gVBu+Ru0RmvTb5WBYXp9v29oSdFEVRl2IPiKzwQO4cv+ZkMpkbUxBBssLo6u1+R347WqGuNVS6kYGL59MA+67m4yqYiG9AVOYVe102AacQDh7sZkvzrqcP6VKJq80vwU4OWWwth2yMOFMoQED0d6Jg8lbhGJMEzKgJ6YJ3OwILhafJwvTQq99+cjuZmppzHTuf5j7jF+B10APBJ6CUPXWcOEGOgtSfbgxUiGYrhqZQR2NmHks043/RvtWkmxewfd8wBh0wguDi8oxhmomqAIgv7YJWEMMfouvqsf4x4zcqHAnxIGP4cMI6e08c6Z5P6MbLyUiQSsyNa8zpX2zddFF5Drif59/cZgmbx0EceOqK9WwRd3h0qsgcdh6cFnOQ==:QAW9VezfC6qoivU5pHbi2KGQEh0s4+zofJNNSrPCAZs=&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">87sduif98q3rijax?d=www.booking.com</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/c360/v1/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;action_name&quot;:&quot;webcoreux.header_component_scrolled&quot;,&quot;action_version&quot;:&quot;1.0.0&quot;,&quot;content&quot;:{&quot;product_verticals_seen&quot;:[&quot;accommodations&quot;,&quot;flights&quot;,&quot;cars&quot;,&quot;attractions&quot;,&quot;airport_taxis&quot;]},&quot;context&quot;:{&quot;page&quot;:{&quot;page_referrer&quot;:&quot;https://www.booking.com/index.en-gb.html?aid=2311236%3Blabel%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm%3Bws%3D&amp;gclid=EAIaIQobChMIh9XRu_OG_wIVy4uDBx0A7wjYEAAYASAAEgLOJvD_BwE&amp;lang=en-gb&amp;soz=1&amp;lang_changed=1&quot;,&quot;page_url&quot;:&quot;https://www.booking.com/searchresults.en-gb.html?ss=amman&amp;efdco=1&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;aid=2311236&amp;lang=en-gb&amp;sb=1&amp;src_elem=sb&amp;src=index&amp;dest_id=-970362&amp;dest_type=city&amp;ac_position=0&amp;ac_click_type=b&amp;ac_langcode=en&amp;ac_suggestion_list_length=5&amp;search_selected=true&amp;search_pageview_id=c5c38181613d00fb&amp;ac_meta=GhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA&amp;checkin=2023-06-01&amp;checkout=2023-06-05&amp;group_adults=4&amp;no_rooms=1&amp;group_children=0&amp;sb_travel_purpose=leisure&quot;,&quot;page_title&quot;:&quot;Booking.com : Hotels in Amman . Book your hotel now!&quot;},&quot;web&quot;:{&quot;browser_language&quot;:&quot;en-US&quot;},&quot;local&quot;:{&quot;currency&quot;:&quot;JOD&quot;,&quot;language&quot;:&quot;en-gb&quot;}},&quot;tracker&quot;:{&quot;tracker_name&quot;:&quot;C360ReactTracker&quot;,&quot;tracker_type&quot;:&quot;Client&quot;,&quot;tracker_version&quot;:&quot;0.1.0&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">c360/v1/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-Booking-CSRF</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Label" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Label</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">74918193e4d90102</stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-ET-Seed" elementType="Header">
                  <stringProp name="Header.name">X-Booking-ET-Seed</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Platform" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Platform</stringProp>
                  <stringProp name="Header.value">WWW</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/sendlayoutevents" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="traveller_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">traveller_type</stringProp>
                  <stringProp name="Argument.value">group</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="widget" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">widget</stringProp>
                  <stringProp name="Argument.value">30</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selected_sorter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selected_sorter</stringProp>
                  <stringProp name="Argument.value">popularity</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="page_action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">page_action</stringProp>
                  <stringProp name="Argument.value">searchresults</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selected_filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selected_filter</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="length_of_stay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">length_of_stay</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dest_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dest_id</stringProp>
                  <stringProp name="Argument.value">-970362</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="book_window" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">book_window</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="num_hotel_cards" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">num_hotel_cards</stringProp>
                  <stringProp name="Argument.value">25</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="travel_purpose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">travel_purpose</stringProp>
                  <stringProp name="Argument.value">leisure</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sendlayoutevents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">74918193e4d90102</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Info" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Info</stringProp>
                  <stringProp name="Header.value">1720070,1728110,1728250,1729920,1733680,1735070,1735270,1740070,1741560,1742360,dDfPJKSCYDTLUeXKbEfPYBBVYYT|1,1720070|1,1740070|4,1729920|1,dDfPJKSCYDTLUeXKbEfPYBBVYYT|2,TDXbdeRRYJWcFVbCDVCBOPFHe|1,TDXbdeRRYJWcFVbCDVCBOPFHe|6,TDXbdeRRYJWcFVbCDVCBOPFHe|2,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKdVO|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKdVO|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKBFO|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKBFO|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKVBC|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKVBC|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKOXKe|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKOXKe|3,NAFLeOeJAdcbdGTEYOdDWBLHMVC|1,NAFLeOeJAdcbdGTEYOdDWBLHMVC|2,INFddKNKNKPBDJJHMVGPLTLReASdVLT|2,ODREGZdaAYWXDHIcNQJBCC|1,ODREGZdaAYWXDHIcNQJBCC|2,ODREGZdaAYWXDHIcNQJBCC|9,ODREGZdaAYWXDHIcNQJBCC|6,ODREGZdaAYWXDHIcNQJBCC|8,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|7,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|1,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|2,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|5,ODREGZGMKHNYcNUC|1,ODREGZGMKHNYcNUC|6,ODREGZGMKHNYcNUC|7,PeYGIHRIZWNPKSXHPeDUaUC|1,PeYGIHRIZWNPKSXHPeDUaUC|3,NAREFYTBacTTNAIOFWC|5,NAREFYTBacTTNAIOFWC|2,NAFLeOeJOLQLbcZTTdHFHDQIJYBYeYO|1,ODREEPbTaJZVDXbWNWe|3,ODREEPbTaJZVDXbWNWe|5,cCHObEJcQYIMdUcHCXFZRJNGPbBfC|5,GfHMYYBQJaYbBZeQHVODKe|1,HINZJLeUXSaZbCcBUEXO|1,HINZJLeUXSaZbCcEXO|1,HINZJLeUXSaZbCcEXO|5,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|1,HINZJLeUXSaZbCcBUEXO|3,HINZJLeUXSaZbCcEXO|2,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|6,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|4,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|5,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|2,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|3,HINZJLeUXSaZbONdPGNbSGOLHXT|1,HINZJLeUXSaZbONdPGNbSGOLHXT|5,ODREYFbYALUZCGVTfeBHMacHSCZC|3,ODREYFbYALUZCGVTfeBHMacHSCZC|4,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|1,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|1,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|9,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|3,NAREFYTBacTTNAIOFWC|1,HINZJLeUXSaZbCcEXO|3,ODREGZEOTOCaIeJYKabWTacWXT|1,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|2,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|6,ODRdHUYDZHFBXVWUWCHOYO|1</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">28408250b09bd3a9b8e76c09b186b9e4</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-Booking-CSRF</stringProp>
                  <stringProp name="Header.value">ZppqZAAAAAA=MvbJYHUZ4IwzbRkBp_sc-VMe6gOtjSmfbutpSAwfBZW8JqlglfcRXzlez34Uu9QxJOsC1jDcAYik0tbOAZ0PSGBz1n36eRHmNuLnn8KOEELyqDxoSwyJjtpOVZ70Innc85HVcBllZ4jKUL61yUtU_oTO16YiXXcNo0AjPIHVoFfjachhCxNJM64II1i-l0mJAAxnlRTvTQkuiG0b</stringProp>
                </elementProp>
                <elementProp name="X-Partner-Channel-Id" elementType="Header">
                  <stringProp name="Header.name">X-Partner-Channel-Id</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Label" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Label</stringProp>
                  <stringProp name="Header.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/dml/graphql?ss=amman&amp;efdco=1&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;aid=2311236&amp;lang=en-gb&amp;sb=1&amp;src_elem=sb&amp;src=index&amp;dest_id=-970362&amp;dest_type=city&amp;ac_position=0&amp;ac_click_type=b&amp;ac_langcode=en&amp;ac_suggestion_list_length=5&amp;search_selected=true&amp;search_pageview_id=c5c38181613d00fb&amp;ac_meta=GhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA&amp;checkin=2023-06-01&amp;checkout=2023-06-05&amp;group_adults=4&amp;no_rooms=1&amp;group_children=0&amp;sb_travel_purpose=leisure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ss" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ss</stringProp>
                  <stringProp name="Argument.value">amman</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ac_position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_position</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sb_travel_purpose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sb_travel_purpose</stringProp>
                  <stringProp name="Argument.value">leisure</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ac_suggestion_list_length" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_suggestion_list_length</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                  <stringProp name="Argument.value">index</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ac_click_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_click_type</stringProp>
                  <stringProp name="Argument.value">b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ac_langcode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_langcode</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="search_pageview_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_pageview_id</stringProp>
                  <stringProp name="Argument.value">c5c38181613d00fb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="label" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">label</stringProp>
                  <stringProp name="Argument.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499:pl:ta:p1:p2:ac:ap:neg:fi:tikwd-65526620:lp9069822:li:dec:dm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dest_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dest_id</stringProp>
                  <stringProp name="Argument.value">-970362</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="src_elem" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">src_elem</stringProp>
                  <stringProp name="Argument.value">sb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="group_children" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_children</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="efdco" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">efdco</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="no_rooms" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">no_rooms</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="checkin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkin</stringProp>
                  <stringProp name="Argument.value">2023-06-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dest_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dest_type</stringProp>
                  <stringProp name="Argument.value">city</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="search_selected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_selected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ac_meta" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_meta</stringProp>
                  <stringProp name="Argument.value">GhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="group_adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_adults</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aid</stringProp>
                  <stringProp name="Argument.value">2311236</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="checkout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkout</stringProp>
                  <stringProp name="Argument.value">2023-06-05</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dml/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-booking-context-aid" elementType="Header">
                  <stringProp name="Header.name">x-booking-context-aid</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="x-booking-csrf-token" elementType="Header">
                  <stringProp name="Header.name">x-booking-csrf-token</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJjb250ZXh0LWVucmljaG1lbnQtYXBpIiwic3ViIjoiY3NyZi10b2tlbiIsImlhdCI6MTY4NDY5MzU0MywiZXhwIjoxNjg0Nzc5OTQzfQ.4BITBwaK_yhicIJzWhq-6khuw2bF46iZ-r4c0x394OM3jFzVAGVkzuX0cupXvo66TvhxAD4nfgx8NH4lmjekTw</stringProp>
                </elementProp>
                <elementProp name="x-booking-et-serialized-state" elementType="Header">
                  <stringProp name="Header.name">x-booking-et-serialized-state</stringProp>
                  <stringProp name="Header.value">E3-ES005Jw2_SG9HyHAvj8GBSKtBTIdOiU0Z9lCwJRpn3STTkJOpPa2wUaxFaPtMA</stringProp>
                </elementProp>
                <elementProp name="x-booking-context-action-name" elementType="Header">
                  <stringProp name="Header.name">x-booking-context-action-name</stringProp>
                  <stringProp name="Header.value">searchresults_irene</stringProp>
                </elementProp>
                <elementProp name="x-booking-site-type-id" elementType="Header">
                  <stringProp name="Header.name">x-booking-site-type-id</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-booking-pageview-id" elementType="Header">
                  <stringProp name="Header.name">x-booking-pageview-id</stringProp>
                  <stringProp name="Header.value">74918193e4d90102</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-booking-topic" elementType="Header">
                  <stringProp name="Header.name">x-booking-topic</stringProp>
                  <stringProp name="Header.value">capla_browser_b-search-web-searchresults</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://collector-pxikkul2rm.px-cloud.net/api/v2/collector" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cts</stringProp>
                  <stringProp name="Argument.value">410c7124-f7fa-11ed-94c6-6f67526d7259</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rsc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">NTA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uuid</stringProp>
                  <stringProp name="Argument.value">e72a2550-f804-11ed-b107-69aad9aba940</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ft" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ft</stringProp>
                  <stringProp name="Argument.value">263</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">410c6dad-f7fa-11ed-94c6-6f67526d7259</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vid</stringProp>
                  <stringProp name="Argument.value">40bf309a-f7fa-11ed-b3fa-a5ee45f1ce0d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pxhd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pxhd</stringProp>
                  <stringProp name="Argument.value">W0BgYwcW-mJHk%2Fxz-ALsSp1FV2QcQF4cqEGKXUImLpK4otclBga2e6SIhsF3P06hNt6gZK7KBYQDgHYlLfx1lw%3D%3D%3AnS5dd51DXJY5rpHg6y7D6NMGM7AWawLhb2Zn5tJYxNhl-DnKhkQ73vvjpg1cCmXGBTZPHeTXLwfcDbCWYU8nBGvSIKDzRVuhJLeHj7Ag6Ks%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">8195853228001102</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="payload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payload</stringProp>
                  <stringProp name="Argument.value">aUkQRhAIEGJqAwIKAwQQHhBWEAhJEGJqAwIBBAIQCBBaRkZCQQgdHUVFRRxQXV1ZW1xVHFFdXx1BV1NAUVpAV0FHXkZBHFdcH1VQHFpGX14NQUEPU19fU1wUV1RWUV0PAxReU1BXXg9TQB9YXR9QXV1ZW1xVH1ZXQVlGXUIfaGRLVwp3cVdHAV1 UEABVWZhcFQEc2EEBwAKAAsCAgMGCwsXAXNCXhcBc0ZTFwFzQgMXAXNCABcBc1NRFwFzU0IXAXNcV1UXAXNUWxcBc0ZbWUVWHwQHBwAEBAACFwFzXkILAgQLCgAAFwFzXlsXAXNWV1EXAXNWXxRTW1YPAAEDAwABBBReU1xVD1dcH1VQFEFQDwMUQUBRbVdeV18PQVAUQUBRD1tcVldKFFZXQUZtW1YPHwsFAgEEABRWV0FGbUZLQlcPUVtGSxRTUW1CXUFbRltdXA8CFFNRbVFeW1FZbUZLQlcPUBRTUW1eU1xVUV1WVw9XXBRGTUW1BR1^VVV0FGW11cbV5bQUZtXldcVUZaDwcUQVdTQFFabUFXXldRRldWD0ZAR1cUQVdTQFFabUJSTVVdEW1}DdFbVtWD1EHUQEKAwoDBAMBVgICVFAUU1FtX1dGUw9N1WnBYfGV/SH12dwZ/KZmtKfwBjRX91aFt7c3Ndc2Z7cWhlBgRwZXRGUGV0R28DNzcHlzdHNzFFFaV1FZW1wPAANIAAR8CBB8CAxRRWldRWV1HRg8AAgABHwIEHwIHFFVAXUdCbVNWR15GQQ8GFFxdbUBdXV9BDwMUVUBdR0JtUVpbXlZAV1wa&gt;DPAhRBUG1GQFNEV1`5tQkdAQl1BVw9eV1tBR0BXEB4QYmoDAgsACxAIAh4QYmoDAwMKBBAIEGVbXAEAEB4QYmoDAgQAABKAIAh4QYmoDAgAFABAIAQoABR4QYmoDAgsF}AhAIAQQCAh4QYmoDAgILBhAIAwQKBgQLAQcGBAIGARG4QYmoDAwKICBhAIAwQKBgQLAQcGBAIHAh4QYmoDAgACBBAIEFcFAFMABwcCH1QKAgYfAwNXVh9QAwIFHwQLU1NWC1NQUws7GAhAeEGJ7qAwICCgoQCFRTXkFXT09v</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">appId</stringProp>
                  <stringProp name="Argument.value">PXikKuL2RM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                  <stringProp name="Argument.value">v7.6.9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/collector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/fl/exposed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;model&quot;:&quot;VaRWSHWKNKfVdeWCTKIaHWSLWSHWSLWVKCTceTVfCIVQVJKVdeVaTaGfIaJMUaWIJMeJfXJVGaJRWSRT&quot;,&quot;items&quot;:[&quot;class-5&quot;,&quot;fc-2&quot;,&quot;review_score-80&quot;,&quot;ht_id-204&quot;,&quot;mealplan-1&quot;,&quot;distance-3000&quot;,&quot;fc-4&quot;,&quot;tdb-2&quot;],&quot;is_organic&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">fl/exposed</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">74918193e4d90102</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Info" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Info</stringProp>
                  <stringProp name="Header.value">1720070,1728110,1728250,1729920,1733680,1735070,1735270,1740070,1741560,1742360,dDfPJKSCYDTLUeXKbEfPYBBVYYT|1,1720070|1,1740070|4,1729920|1,dDfPJKSCYDTLUeXKbEfPYBBVYYT|2,TDXbdeRRYJWcFVbCDVCBOPFHe|1,TDXbdeRRYJWcFVbCDVCBOPFHe|6,TDXbdeRRYJWcFVbCDVCBOPFHe|2,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKdVO|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKdVO|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKBFO|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKBFO|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKVBC|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKVBC|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKOXKe|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKOXKe|3,NAFLeOeJAdcbdGTEYOdDWBLHMVC|1,NAFLeOeJAdcbdGTEYOdDWBLHMVC|2,INFddKNKNKPBDJJHMVGPLTLReASdVLT|2,ODREGZdaAYWXDHIcNQJBCC|1,ODREGZdaAYWXDHIcNQJBCC|2,ODREGZdaAYWXDHIcNQJBCC|9,ODREGZdaAYWXDHIcNQJBCC|6,ODREGZdaAYWXDHIcNQJBCC|8,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|7,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|1,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|2,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|5,ODREGZGMKHNYcNUC|1,ODREGZGMKHNYcNUC|6,ODREGZGMKHNYcNUC|7,PeYGIHRIZWNPKSXHPeDUaUC|1,PeYGIHRIZWNPKSXHPeDUaUC|3,NAREFYTBacTTNAIOFWC|5,NAREFYTBacTTNAIOFWC|2,NAFLeOeJOLQLbcZTTdHFHDQIJYBYeYO|1,ODREEPbTaJZVDXbWNWe|3,ODREEPbTaJZVDXbWNWe|5,cCHObEJcQYIMdUcHCXFZRJNGPbBfC|5,GfHMYYBQJaYbBZeQHVODKe|1,HINZJLeUXSaZbCcBUEXO|1,HINZJLeUXSaZbCcEXO|1,HINZJLeUXSaZbCcEXO|5,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|1,HINZJLeUXSaZbCcBUEXO|3,HINZJLeUXSaZbCcEXO|2,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|6,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|4,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|5,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|2,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|3,HINZJLeUXSaZbONdPGNbSGOLHXT|1,HINZJLeUXSaZbONdPGNbSGOLHXT|5,ODREYFbYALUZCGVTfeBHMacHSCZC|3,ODREYFbYALUZCGVTfeBHMacHSCZC|4,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|1,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|1,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|9,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|3,NAREFYTBacTTNAIOFWC|1,HINZJLeUXSaZbCcEXO|3,ODREGZEOTOCaIeJYKabWTacWXT|1,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|2,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|6,ODRdHUYDZHFBXVWUWCHOYO|1</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">28408250b09bd3a9b8e76c09b186b9e4</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-Booking-CSRF</stringProp>
                  <stringProp name="Header.value">ZppqZAAAAAA=MvbJYHUZ4IwzbRkBp_sc-VMe6gOtjSmfbutpSAwfBZW8JqlglfcRXzlez34Uu9QxJOsC1jDcAYik0tbOAZ0PSGBz1n36eRHmNuLnn8KOEELyqDxoSwyJjtpOVZ70Innc85HVcBllZ4jKUL61yUtU_oTO16YiXXcNo0AjPIHVoFfjachhCxNJM64II1i-l0mJAAxnlRTvTQkuiG0b</stringProp>
                </elementProp>
                <elementProp name="X-Partner-Channel-Id" elementType="Header">
                  <stringProp name="Header.name">X-Partner-Channel-Id</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Label" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Label</stringProp>
                  <stringProp name="Header.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://accounts.google.com/gsi/status?client_id=901905703382-m88jn1h9ll89odkt6t5muc6h7ep83rlh.apps.googleusercontent.com&amp;as=VKLXyPAWMgyVYAdK1K0A5g" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="as" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">as</stringProp>
                  <stringProp name="Argument.value">VKLXyPAWMgyVYAdK1K0A5g</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">901905703382-m88jn1h9ll89odkt6t5muc6h7ep83rlh.apps.googleusercontent.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gsi/status</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CJO2yQEIpLbJAQipncoBCKOEywEIk6HLAQiLq8wBCIWgzQEIwarNARjAy8wB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/dml/graphql?ss=amman&amp;efdco=1&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;aid=2311236&amp;lang=en-gb&amp;sb=1&amp;src_elem=sb&amp;src=index&amp;dest_id=-970362&amp;dest_type=city&amp;ac_position=0&amp;ac_click_type=b&amp;ac_langcode=en&amp;ac_suggestion_list_length=5&amp;search_selected=true&amp;search_pageview_id=c5c38181613d00fb&amp;ac_meta=GhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA&amp;checkin=2023-06-01&amp;checkout=2023-06-05&amp;group_adults=4&amp;no_rooms=1&amp;group_children=0&amp;sb_travel_purpose=leisure" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ss" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ss</stringProp>
                  <stringProp name="Argument.value">amman</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ac_position" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_position</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sb_travel_purpose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sb_travel_purpose</stringProp>
                  <stringProp name="Argument.value">leisure</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ac_suggestion_list_length" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_suggestion_list_length</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                  <stringProp name="Argument.value">index</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ac_click_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_click_type</stringProp>
                  <stringProp name="Argument.value">b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ac_langcode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_langcode</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="search_pageview_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_pageview_id</stringProp>
                  <stringProp name="Argument.value">c5c38181613d00fb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="label" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">label</stringProp>
                  <stringProp name="Argument.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499:pl:ta:p1:p2:ac:ap:neg:fi:tikwd-65526620:lp9069822:li:dec:dm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dest_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dest_id</stringProp>
                  <stringProp name="Argument.value">-970362</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="src_elem" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">src_elem</stringProp>
                  <stringProp name="Argument.value">sb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="group_children" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_children</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sb</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="efdco" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">efdco</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="no_rooms" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">no_rooms</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="checkin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkin</stringProp>
                  <stringProp name="Argument.value">2023-06-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dest_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dest_type</stringProp>
                  <stringProp name="Argument.value">city</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="search_selected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_selected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ac_meta" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ac_meta</stringProp>
                  <stringProp name="Argument.value">GhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="group_adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_adults</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aid</stringProp>
                  <stringProp name="Argument.value">2311236</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="checkout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkout</stringProp>
                  <stringProp name="Argument.value">2023-06-05</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dml/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-booking-context-aid" elementType="Header">
                  <stringProp name="Header.name">x-booking-context-aid</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="x-booking-csrf-token" elementType="Header">
                  <stringProp name="Header.name">x-booking-csrf-token</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJjb250ZXh0LWVucmljaG1lbnQtYXBpIiwic3ViIjoiY3NyZi10b2tlbiIsImlhdCI6MTY4NDY5MzU0MywiZXhwIjoxNjg0Nzc5OTQzfQ.4BITBwaK_yhicIJzWhq-6khuw2bF46iZ-r4c0x394OM3jFzVAGVkzuX0cupXvo66TvhxAD4nfgx8NH4lmjekTw</stringProp>
                </elementProp>
                <elementProp name="x-booking-et-serialized-state" elementType="Header">
                  <stringProp name="Header.name">x-booking-et-serialized-state</stringProp>
                  <stringProp name="Header.value">E3-ES005Jw2_SG9HyHAvj8GBSKtBTIdOiU0Z9lCwJRpn3STTkJOpPa2wUaxFaPtMA</stringProp>
                </elementProp>
                <elementProp name="x-booking-context-action-name" elementType="Header">
                  <stringProp name="Header.name">x-booking-context-action-name</stringProp>
                  <stringProp name="Header.value">searchresults_irene</stringProp>
                </elementProp>
                <elementProp name="x-booking-site-type-id" elementType="Header">
                  <stringProp name="Header.name">x-booking-site-type-id</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-booking-pageview-id" elementType="Header">
                  <stringProp name="Header.name">x-booking-pageview-id</stringProp>
                  <stringProp name="Header.value">74918193e4d90102</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-booking-topic" elementType="Header">
                  <stringProp name="Header.name">x-booking-topic</stringProp>
                  <stringProp name="Header.value">capla_browser_b-search-web-searchresults</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://collector-pxikkul2rm.px-cloud.net/api/v2/collector" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cts</stringProp>
                  <stringProp name="Argument.value">410c7124-f7fa-11ed-94c6-6f67526d7259</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rsc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsc</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">NTA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uuid</stringProp>
                  <stringProp name="Argument.value">e72a2550-f804-11ed-b107-69aad9aba940</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ft" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ft</stringProp>
                  <stringProp name="Argument.value">263</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">410c6dad-f7fa-11ed-94c6-6f67526d7259ó &#x84;±ó &#x84;¶ó &#x84;¸ó &#x84;´ó &#x84;¶ó &#x84;¹ó &#x84;³ó &#x84;µó &#x84;´ó &#x84;¶ó &#x84;´ó &#x84;¸ó &#x84;²</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cs</stringProp>
                  <stringProp name="Argument.value">4f4bb45b4ef3d1f8bb4d5a27c1295f7fce736a9dc9854e9622b8d3fba74aa4c6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vid</stringProp>
                  <stringProp name="Argument.value">40bf309a-f7fa-11ed-b3fa-a5ee45f1ce0d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pxhd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pxhd</stringProp>
                  <stringProp name="Argument.value">W0BgYwcW-mJHk%2Fxz-ALsSp1FV2QcQF4cqEGKXUImLpK4otclBga2e6SIhsF3P06hNt6gZK7KBYQDgHYlLfx1lw%3D%3D%3AnS5dd51DXJY5rpHg6y7D6NMGM7AWawLhb2Zn5tJYxNhl-DnKhkQ73vvjpg1cCmXGBTZPHeTXLwfcDbCWYU8nBGvSIKDzRVuhJLeHj7Ag6Ks%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">5625436258882289</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="payload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payload</stringProp>
                  <stringProp name="Argument.value">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^AgEHAwcEAB4QSxAIBgIcBgICAgIDBwAHCgUKCwIETx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGBUClFDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBTXkZtVUBdR0IQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAEEChwAAgICAwAAAgUCAQMAB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgAAdcClFDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBCQFsPAxAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIBgICHAACAgIDAAACBQIBAwAHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGAAC1wKUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEEJAWw8AEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgGAQIcAAICAgMAAAIFAgEDAAdPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYABWXApRQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQQkBbDwEQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAYSEAhwAAgICAwAAAgUCAQMAB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgAFpcClFDCBAeEEZLQlcQCBBRWldRWVBd&gt;DShAeEFxTX1cQCBBCQFsPBhAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIBgsCHAACAgIDAAACBQIBAwAHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGAAXlwKUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEEJAWw8HEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgHAAIcAAICAgMAAAIFAgEDAE8eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgAwNUCllDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBRXlNBQQ8HEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgHCwccAAICAgMANAAIFAgEDAE8eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgAwBUCllDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBUUQ8AEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgEAAccAAICAgMAAAIFAgESDAE8eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgAwFUCllDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBAV0RbV0VtQVFdQFcPCgIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAQHBxwAAgICAwAAAgUCAQMATx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGADBlQKWUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFpGbVtWDwACBhAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIBQIHHAACAgIDAAACBQIBAwBPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYAMHVApZQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQ?GX1dTXkJeU1wPAxAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIBQEHHAACAgIDAAACBQIBAwBPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYAMEVApZQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQVltBRlNcUVcPAQICAhAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIBQQHHAACpAgIDAAACBQIBAwBPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYAMFVApZQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQVFEPBhAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAICgMHHAACAgIDAAACBQIBAwBPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYAMKVApZQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQRlZQDwAQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAoGBxwAAgICAwAAAgUCAQMATx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGAHVApBQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQYUdBRlNbXFNQXldiQF1CV0BGS3RbXkZXQA8DEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgLAAIcAAICAgMAAAIFAgEDAE8eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgWlQLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFFeU0FBDwMQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMCBwMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgW1QLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFFeU0FBDwAQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMCCgMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgWFQLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfV_:DxAIEFFeU0FBDwEQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMDAwMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgWVQLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVx`AIEFFeU0FBDwYQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMDBgMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgXlQLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFFeU0FBDwcQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMDBQMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgX1QLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFFeU0FBDwIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMAAgMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgC1QLUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFZbQUZTXFFXDwMCAgIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMABQQcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgU1QLUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFZbQUZTXFFXDwECAgIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMBAgQcAAICAgU[BAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgUFQLUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFZbQUZTXFFXDwcCAgIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMBAQQcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgWlQLWUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEEJdQkdeU0BtU1FGW0RbRltXQQ8DAxAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">appId</stringProp>
                  <stringProp name="Argument.value">PXikKuL2RM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                  <stringProp name="Argument.value">v7.6.9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/collector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://gtm-mktg.booking.com/g/collect?v=2&amp;tid=G-A12345&amp;gtm=45je35h0&amp;_p=378355391&amp;gcs=G1--&amp;cid=1359512495.1684688971&amp;ul=en-us&amp;sr=1536x864&amp;uaa=x86&amp;uab=64&amp;uafvl=Google%2520Chrome%3B113.0.5672.127%7CChromium%3B113.0.5672.127%7CNot-A.Brand%3B24.0.0.0&amp;uamb=0&amp;uam=&amp;uap=Windows&amp;uapv=10.0.0&amp;uaw=0&amp;sst.uc=JO&amp;sst.rnd=1116490805.1684693547&amp;sst.gcd=G1--&amp;_s=1&amp;sid=1684693507&amp;sct=2&amp;seg=1&amp;dl=https%3A%2F%2Fwww.booking.com%2Fsearchresults.en-gb.html%3Fss%3Damman%26efdco%3D1%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm%26aid%3D2311236%26lang%3Den-gb%26sb%3D1%26src_elem%3Dsb%26src%3Dindex%26dest_id%3D-970362%26dest_type%3Dcity%26ac_position%3D0%26ac_click_type%3Db%26ac_langcode%3Den%26ac_suggestion_list_length%3D5%26search_selected%3Dtrue%26search_pageview_id%3Dc5c38181613d00fb%26ac_meta%3DGhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA%26checkin%3D2023-06-01%26checkout%3D2023-06-05%26group_adults%3D4%26no_rooms%3D1%26group_children%3D0%26sb_travel_purpose%3Dleisure&amp;dr=https%3A%2F%2Fwww.booking.com%2Findex.en-gb.html%3Faid%3D2311236%253Blabel%253Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm%253Bws%253D%26gclid%3DEAIaIQobChMIh9XRu_OG_wIVy4uDBx0A7wjYEAAYASAAEgLOJvD_BwE%26lang%3Den-gb%26soz%3D1%26lang_changed%3D1&amp;dt=Booking.com%20%3A%20Hotels%20in%20Amman%20.%20Book%20your%20hotel%20now!&amp;en=page_view&amp;ep.is_aid_mcc_level_tracked=&amp;ep.cd_action=searchresults&amp;ep.n_b=&amp;richsstsse" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://www.booking.com/searchresults.en-gb.html?ss=amman&amp;efdco=1&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;aid=2311236&amp;lang=en-gb&amp;sb=1&amp;src_elem=sb&amp;src=index&amp;dest_id=-970362&amp;dest_type=city&amp;ac_position=0&amp;ac_click_type=b&amp;ac_langcode=en&amp;ac_suggestion_list_length=5&amp;search_selected=true&amp;search_pageview_id=c5c38181613d00fb&amp;ac_meta=GhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA&amp;checkin=2023-06-01&amp;checkout=2023-06-05&amp;group_adults=4&amp;no_rooms=1&amp;group_children=0&amp;sb_travel_purpose=leisure</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sst.gcd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sst.gcd</stringProp>
                  <stringProp name="Argument.value">G1--</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.is_aid_mcc_level_tracked" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ep.is_aid_mcc_level_tracked</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">G-A12345</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uafvl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uafvl</stringProp>
                  <stringProp name="Argument.value">Google%20Chrome;113.0.5672.127|Chromium;113.0.5672.127|Not-A.Brand;24.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dr</stringProp>
                  <stringProp name="Argument.value">https://www.booking.com/index.en-gb.html?aid=2311236%3Blabel%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm%3Bws%3D&amp;gclid=EAIaIQobChMIh9XRu_OG_wIVy4uDBx0A7wjYEAAYASAAEgLOJvD_BwE&amp;lang=en-gb&amp;soz=1&amp;lang_changed=1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">1684693507</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Booking.com : Hotels in Amman . Book your hotel now!</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaa</stringProp>
                  <stringProp name="Argument.value">x86</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seg</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.n_b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ep.n_b</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gcs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gcs</stringProp>
                  <stringProp name="Argument.value">G1--</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uab</stringProp>
                  <stringProp name="Argument.value">64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uamb</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1536x864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uam" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uam</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">45je35h0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uapv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uapv</stringProp>
                  <stringProp name="Argument.value">10.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uap</stringProp>
                  <stringProp name="Argument.value">Windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sct</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="richsstsse" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">richsstsse</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">page_view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaw</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sst.rnd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sst.rnd</stringProp>
                  <stringProp name="Argument.value">1116490805.1684693547</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sst.uc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sst.uc</stringProp>
                  <stringProp name="Argument.value">JO</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_p</stringProp>
                  <stringProp name="Argument.value">378355391</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.cd_action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ep.cd_action</stringProp>
                  <stringProp name="Argument.value">searchresults</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1359512495.1684688971</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">g/collect</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ct.pinterest.com/user/?tid=2612859132799&amp;pd=%7B%22np%22%3A%22gtm%22%2C%22em%22%3A%221bad6b8cf97131fceab8543e81f7757195fbb1d36b376ee994ad1cf17699c464%22%2C%22pin_unauth%22%3A%22dWlkPU9EaGxPR1JpWW1ZdE1XWTVOUzAwT0RabExUaGtOREl0TkdVNFpUSTJNVGxqWkdKaQ%22%7D&amp;cb=1684693547442&amp;dep=2%2CPAGE_LOAD" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pd</stringProp>
                  <stringProp name="Argument.value">{&quot;np&quot;:&quot;gtm&quot;,&quot;em&quot;:&quot;1bad6b8cf97131fceab8543e81f7757195fbb1d36b376ee994ad1cf17699c464&quot;,&quot;pin_unauth&quot;:&quot;dWlkPU9EaGxPR1JpWW1ZdE1XWTVOUzAwT0RabExUaGtOREl0TkdVNFpUSTJNVGxqWkdKaQ&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">2612859132799</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dep</stringProp>
                  <stringProp name="Argument.value">2,PAGE_LOAD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cb</stringProp>
                  <stringProp name="Argument.value">1684693547442</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">user/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ct.pinterest.com/user/?event=search&amp;ed=%7B%22np%22%3A%22gtm%22%7D&amp;tid=2612859132799&amp;cb=1684693547444&amp;dep=5%2CEVENT_TAGS_ABSENT" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">2612859132799</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dep</stringProp>
                  <stringProp name="Argument.value">5,EVENT_TAGS_ABSENT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ed</stringProp>
                  <stringProp name="Argument.value">{&quot;np&quot;:&quot;gtm&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cb</stringProp>
                  <stringProp name="Argument.value">1684693547444</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">user/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://collector-pxikkul2rm.px-cloud.net/api/v2/collector" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cts</stringProp>
                  <stringProp name="Argument.value">410c7124-f7fa-11ed-94c6-6f67526d7259</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rsc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsc</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">NTA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uuid</stringProp>
                  <stringProp name="Argument.value">e72a2550-f804-11ed-b107-69aad9aba940</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ft" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ft</stringProp>
                  <stringProp name="Argument.value">263</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">410c6dad-f7fa-11ed-94c6-6f67526d7259ó &#x84;±ó &#x84;¶ó &#x84;¸ó &#x84;´ó &#x84;¶ó &#x84;¹ó &#x84;³ó &#x84;µó &#x84;´ó &#x84;¶ó &#x84;´ó &#x84;¸ó &#x84;²</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cs</stringProp>
                  <stringProp name="Argument.value">4f4bb45b4ef3d1f8bb4d5a27c1295f7fce736a9dc9854e9622b8d3fba74aa4c6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vid</stringProp>
                  <stringProp name="Argument.value">40bf309a-f7fa-11ed-b3fa-a5ee45f1ce0d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pxhd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pxhd</stringProp>
                  <stringProp name="Argument.value">W0BgYwcW-mJHk%2Fxz-ALsSp1FV2QcQF4cqEGKXUImLpK4otclBga2e6SIhsF3P06hNt6gZK7KBYQDgHYlLfx1lw%3D%3D%3AnS5dd51DXJY5rpHg6y7D6NMGM7AWawLhb2Zn5tJYxNhl-DnKhkQ73vvjpg1cCmXGBTZPHeTXLwfcDbCWYU8nBGvSIKDzRVuhJLeHj7Ag6Ks%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">8847994958181882</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="payload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payload</stringProp>
                  <stringProp name="Argument.value">aUkQRhAIEGJqAwIKBgcQHhBWEAhJEGJqAwIKAQIQCAsBBx4QYmoDAwMGAxAIBgALHhBiagMCBQIHEAgQZktCV3dAQF1ACBJxU1xcXUYSQFdTVhJCQF1CV0BGW1dBEl1UElxHXl4SGkBXU1ZbXFUSFQIVG25cEhISElNGElNGEhpaRkZCQQgdHVFUHFBBRlNGW1EcUV1fHV5bUEEdQldAW19XRldASh1CShxEBRwEHAscX1tcHFhBCAAIAwoEAQcbblwSEhISU0YSemZ/fnBdVkt3XldfV1xGHFdREhpaRkZCQQgdHVFUHFBBRlNGW1EcUV1fHV5bUEEdQldAW19XRldASh1CShxEBRwEHAscX1tcHFhBCAAIBwsABAMbEB4QYmoDAwIABRAIEEVaV1deEB4QYmoDAgYDBBAIAwYECx4QYmoDAgUCChAIEEZAR1cQHhBiagMDAwoLEAhGQEdXHhBiagMCAQQFEAgQdntkCFxGWh9RWlteVhoAGwx2e2QIXEZaH1FaW15WGgMbDHZ7ZAhcRlofUVpbXlYaABsMdntkCFxGWh9RWlteVhoDGwx2e2QIXEZaH1FaW15WGgEbDHZ7ZAhcRlofUVpbXlYaAxsMdntkCFxGWh9RWlteVhoDGwx2e2QIXEZaH1FaW15WGgAbDHZ7ZAhcRlofUVpbXlYaAxsMdntkCFxGWh9RWlteVhoBGwx2e2QIXEZaH1FaW15WGgMbEB4QYmoDAgQAABAIAB4QYmoDAgAFABAIBwALCh4QYmoDAwICBhGAIAwQKBgQLAQc^GBQsDAx4QYmoDAgACBBAIEFcFAFMABwcCH1QKAgYfAwNXVh9QAwIFHwQLU1NWC1NQUwsGAhAeEGJqAwICCgoQCFRTXkFXHhBiagMCAQQCEASgQWkZGQkEIHR1&gt;DFRUUcUF1dWVtcVRxRXV8dQVdTQFFaQFdBR15GQRxXXB9VUBxaRl9eDUFBD1NfX1NcNFFdUVlFdDwMUXlNQV14PU0AfWFS0fUF1dWVtcVR9WV0FZRl1CH2hkS1cKd3FXRwFdflBAAVVmYXBUBHNhBAcACgALAgIDB?GgsLFwFzQl4XAXNGUxcBc0IDFwFzQgAXAXNTURcpBc1NCFwFzXFdVFwFzVFsXAXNGW1lFVh8EBwcABAQAAhcBc15CCwIECwoAABcBc15bFwFzVldRFwFzVl8UU1tWDwABAwMAAQQUXlNcVQ9XXB9VUBRBUA8DFEFAUW1XXldfD0FQFEFAUQ9bXFZXShR_:DWV0FGbVtWDx8LBQIBBAAUVld`BRm1GS0JXD1FbRksUU1FtQl1BW0ZbXVwPAhRTUW1RXltRWW1GS0JXD1AUU1FtXlNcVVFdVlcPV1wUU1FtQUdVVVdBRltdXG1eW0FGbV5XXFVGWg8HFEFXU0BR[Wm1BV15XUUZXVg9GQEdXFEFXU0BRWm1CU1VXRFtXRW1bVg9RB1EBC&gt;gMKAwQDAVYCAlRQFFNRbV9XRlMPdVpwWHxlf0h9dncGf2ZrSn8AY0V/dWhbe3NzXXNGme3FoZQYEcGV0mRlBldEdjc3B5c3RzcxRRWldRWVtcDwACAAEfAgQfAgMUUVpXUVldR0YPAAIAAR8CBB8CBxRVQF1HQm1TVkdeRkEPBhRcXW1AXV1fQQ8DFFVAXUdCbVFaW15WQFdcDwIUQVBtRk7BTRFdebUJHQEJ7dQVcPXldbQUdAVxBPT28=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">appId</stringProp>
                  <stringProp name="Argument.value">PXikKuL2RM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                  <stringProp name="Argument.value">v7.6.9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/collector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/c360/v1/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;action_name&quot;:&quot;sustainability__sr_sustainability_filter_viewed&quot;,&quot;action_version&quot;:&quot;2.0.x&quot;,&quot;content&quot;:{&quot;location_parameters&quot;:{&quot;destination_id&quot;:-970362,&quot;destination_type&quot;:&quot;CITY&quot;}},&quot;context&quot;:{&quot;page&quot;:{&quot;page_referrer&quot;:&quot;https://www.booking.com/index.en-gb.html?aid=2311236%3Blabel%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm%3Bws%3D&amp;gclid=EAIaIQobChMIh9XRu_OG_wIVy4uDBx0A7wjYEAAYASAAEgLOJvD_BwE&amp;lang=en-gb&amp;soz=1&amp;lang_changed=1&quot;,&quot;page_url&quot;:&quot;https://www.booking.com/searchresults.en-gb.html?ss=amman&amp;efdco=1&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;aid=2311236&amp;lang=en-gb&amp;sb=1&amp;src_elem=sb&amp;src=index&amp;dest_id=-970362&amp;dest_type=city&amp;ac_position=0&amp;ac_click_type=b&amp;ac_langcode=en&amp;ac_suggestion_list_length=5&amp;search_selected=true&amp;search_pageview_id=c5c38181613d00fb&amp;ac_meta=GhBjNWMzODE4MTYxM2QwMGZiIAAoATICZW46BWFtbWFuQABKAFAA&amp;checkin=2023-06-01&amp;checkout=2023-06-05&amp;group_adults=4&amp;no_rooms=1&amp;group_children=0&amp;sb_travel_purpose=leisure&quot;,&quot;page_title&quot;:&quot;Booking.com : Hotels in Amman . Book your hotel now!&quot;},&quot;web&quot;:{&quot;browser_language&quot;:&quot;en-US&quot;},&quot;local&quot;:{&quot;language&quot;:&quot;en-gb&quot;}},&quot;tracker&quot;:{&quot;tracker_name&quot;:&quot;C360ReactTracker&quot;,&quot;tracker_type&quot;:&quot;Client&quot;,&quot;tracker_version&quot;:&quot;0.1.0&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">c360/v1/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-Booking-CSRF</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Label" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Label</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-ET-Seed" elementType="Header">
                  <stringProp name="Header.name">X-Booking-ET-Seed</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Platform" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Platform</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/hotel/jo/the-paris-square-house.en-gb.html?label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;aid=2311236&amp;ucfs=1&amp;arphpl=1&amp;checkin=2023-06-01&amp;checkout=2023-06-05&amp;dest_id=-970362&amp;dest_type=city&amp;group_adults=4&amp;req_adults=4&amp;no_rooms=1&amp;group_children=0&amp;req_children=0&amp;hpos=1&amp;hapos=1&amp;sr_order=popularity&amp;srpvid=74918193e4d90102&amp;srepoch=1684693544&amp;all_sr_blocks=1002717501_373060864_7_0_0&amp;highlighted_blocks=1002717501_373060864_7_0_0&amp;matching_block_id=1002717501_373060864_7_0_0&amp;sr_pri_blocks=1002717501_373060864_7_0_0__36000&amp;map_fdco=1&amp;from=searchresults#hotelTmpl" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="all_sr_blocks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">all_sr_blocks</stringProp>
                  <stringProp name="Argument.value">1002717501_373060864_7_0_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr_pri_blocks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr_pri_blocks</stringProp>
                  <stringProp name="Argument.value">1002717501_373060864_7_0_0__36000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="arphpl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">arphpl</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="map_fdco" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">map_fdco</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="label" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">label</stringProp>
                  <stringProp name="Argument.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499:pl:ta:p1:p2:ac:ap:neg:fi:tikwd-65526620:lp9069822:li:dec:dm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dest_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dest_id</stringProp>
                  <stringProp name="Argument.value">-970362</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ucfs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ucfs</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="group_children" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_children</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req_children" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">req_children</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="no_rooms" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">no_rooms</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="srepoch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">srepoch</stringProp>
                  <stringProp name="Argument.value">1684693544</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkin</stringProp>
                  <stringProp name="Argument.value">2023-06-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="highlighted_blocks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">highlighted_blocks</stringProp>
                  <stringProp name="Argument.value">1002717501_373060864_7_0_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dest_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dest_type</stringProp>
                  <stringProp name="Argument.value">city</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr_order" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr_order</stringProp>
                  <stringProp name="Argument.value">popularity</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="matching_block_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matching_block_id</stringProp>
                  <stringProp name="Argument.value">1002717501_373060864_7_0_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="group_adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_adults</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="srpvid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">srpvid</stringProp>
                  <stringProp name="Argument.value">74918193e4d90102</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="from" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">from</stringProp>
                  <stringProp name="Argument.value">searchresults</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hpos" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hpos</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hapos" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hapos</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aid</stringProp>
                  <stringProp name="Argument.value">2311236</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkout</stringProp>
                  <stringProp name="Argument.value">2023-06-05</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req_adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">req_adults</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">hotel/jo/the-paris-square-house.en-gb.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">10158.0</stringProp>
              <stringProp name="ConstantTimer.delay">5079</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 10158 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/87sduif98q3rijax?d=www.booking.com" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&quot;3:QmgZTMBAd7GStdCDoG7/sA==:RwNbBo9aoo3JCfioya1yT7MNykhOQfplItG9p4waKk2YYgvg3no1+9o9dViWhmssOTT8fmUoOhpIPUynqwr9YIk+gVBu+Ru0RmvTb5WBYXp9v29oSdFEVRl2IPiKzwQO4cv+ZkMpkbUxBBssLo6u1+R347WqGuNVS6kYGL59MA+67m4yqYiG9AVOYVe102AacQDh7sZkvzrqcP6VKJq80vwU4OWWwth2yMOFMoQED0d6Jg8lbhGJMEzKgJ6YJ3OwILhafJwvTQq99+cjuZmppzHTuf5j7jF+B10APBJ6CUPXWcOEGOgtSfbgxUiGYrhqZQR2NmHks043/RvtWkmxewfd8wBh0wguDi8oxhmomqAIgv7YJWEMMfouvqsf4x4zcqHAnxIGP4cMI6e08c6Z5P6MbLyUiQSsyNa8zpX2zddFF5Drif59/cZgmbx0EceOqK9WwRd3h0qsgcdh6cFnOQ==:QAW9VezfC6qoivU5pHbi2KGQEh0s4+zofJNNSrPCAZs=&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">87sduif98q3rijax?d=www.booking.com</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/c360/v1/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;action_name&quot;:&quot;webcoreux.header_component_served&quot;,&quot;action_version&quot;:&quot;2.0.0&quot;,&quot;content&quot;:{&quot;product_verticals_loaded&quot;:[{&quot;item_type&quot;:&quot;accommodations&quot;,&quot;item_position&quot;:1,&quot;is_item_preselected&quot;:1},{&quot;item_type&quot;:&quot;flights&quot;,&quot;item_position&quot;:2,&quot;is_item_preselected&quot;:0},{&quot;item_type&quot;:&quot;cars&quot;,&quot;item_position&quot;:3,&quot;is_item_preselected&quot;:0},{&quot;item_type&quot;:&quot;attractions&quot;,&quot;item_position&quot;:4,&quot;is_item_preselected&quot;:0},{&quot;item_type&quot;:&quot;airport_taxis&quot;,&quot;item_position&quot;:5,&quot;is_item_preselected&quot;:0}],&quot;product_vertical_selected&quot;:&quot;accommodations&quot;,&quot;headertype&quot;:&quot;full&quot;,&quot;viewport&quot;:&quot;large&quot;,&quot;option_preselected&quot;:[{&quot;action_type&quot;:&quot;currency&quot;,&quot;option_text&quot;:&quot;JOD&quot;},{&quot;action_type&quot;:&quot;language&quot;,&quot;option_text&quot;:&quot;en-gb&quot;}],&quot;is_loggedin&quot;:0,&quot;aid&quot;:&quot;2311236&quot;,&quot;label&quot;:&quot;ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499:pl:ta:p1:p2:ac:ap:neg:fi:tikwd-65526620:lp9069822:li:dec:dm&quot;,&quot;genius_level&quot;:&quot;0&quot;},&quot;context&quot;:{&quot;page&quot;:{&quot;page_referrer&quot;:&quot;&quot;,&quot;page_url&quot;:&quot;https://www.booking.com/searchresults.en-gb.html?aid=2311236&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;no_rooms=1&amp;srpvid=74918193e4d90102&amp;highlighted_hotels=10027175&amp;checkin=2023-06-01&amp;redirected=1&amp;city=-970362&amp;hlrd=with_av&amp;group_adults=4&amp;source=hotel&amp;group_children=0&amp;checkout=2023-06-05&amp;keep_landing=1&amp;sid=28408250b09bd3a9b8e76c09b186b9e4#hotelTmpl&quot;,&quot;page_title&quot;:&quot;Booking.com : Hotels in Amman . Book your hotel now!&quot;},&quot;web&quot;:{&quot;browser_language&quot;:&quot;en-US&quot;},&quot;local&quot;:{&quot;currency&quot;:&quot;JOD&quot;,&quot;language&quot;:&quot;en-gb&quot;}},&quot;tracker&quot;:{&quot;tracker_name&quot;:&quot;C360ReactTracker&quot;,&quot;tracker_type&quot;:&quot;Client&quot;,&quot;tracker_version&quot;:&quot;0.1.0&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">c360/v1/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-Booking-CSRF</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Label" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Label</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">3b5f819919a3012d</stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-ET-Seed" elementType="Header">
                  <stringProp name="Header.name">X-Booking-ET-Seed</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Platform" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Platform</stringProp>
                  <stringProp name="Header.value">WWW</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://collector-pxikkul2rm.px-cloud.net/api/v2/collector" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vid</stringProp>
                  <stringProp name="Argument.value">40bf309a-f7fa-11ed-b3fa-a5ee45f1ce0d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pxhd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pxhd</stringProp>
                  <stringProp name="Argument.value">W0BgYwcW-mJHk%2Fxz-ALsSp1FV2QcQF4cqEGKXUImLpK4otclBga2e6SIhsF3P06hNt6gZK7KBYQDgHYlLfx1lw%3D%3D%3AnS5dd51DXJY5rpHg6y7D6NMGM7AWawLhb2Zn5tJYxNhl-DnKhkQ73vvjpg1cCmXGBTZPHeTXLwfcDbCWYU8nBGvSIKDzRVuhJLeHj7Ag6Ks%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">3286427319188027</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cts</stringProp>
                  <stringProp name="Argument.value">410c7124-f7fa-11ed-94c6-6f67526d7259</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rsc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="payload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payload</stringProp>
                  <stringProp name="Argument.value">aUkQRhAIEGJqAwIKAwQQHhBWEAhJEGJqAwIBBAIQCBBaRkZCQQgdHUVFRRxQXV1ZW1xVHFFdXx1BV1NAUVpAV0FHXkZBHFdcH1VQHFpGX14NU1tWDwABAwMAAQQUXlNQV14PU0AfWF0fUF1dWVtcVR9WV0FZRl1CH2hkS1cKd3FXRwFdflBAAVVmYXBUBHNhBAcACgALAgIDBgsLFwFzQl4XAXNGUxcBc0IDFwFzQgAXAXNTURcBc1NCFwFzXFdVFwFzVFsXAXNGW1lFVh8EBwcABAQAAhcBc15CCwIECwoAABcBc15bFwFzVldRFwFzVl8UXF1tQF1dX0EPAxRBQEJEW1YPBQYLAwoDCwFXBlYLAgMCABRaW1VaXltVWkZXVm1aXUZXXkEPAwICAAUDBQcUUVpXUVlbGXA8AAgABHwIEHwIDFEBXVltAV1FGV1YPAxRRW0ZLDx^8LBQIBBAAUWl5AVg9FW0ZabVNEFFS}VAXUdCbVNWR15GQQ8GFEFdR0BRVw9aXUZXDXhRVQF1HQm1RWNlteVkBXXA8CFFFaV1FZXUdGDwACAAEfAgQfK8AgcUWVdXQm1eU1xWW1xVDDwMUQVtWDwAKBgIKAAcCUAILUFYBUwtQClcFBFECC1ADCgRQC1cGEVpdRldeZl9CXhAeEGJNqAwILAAsQCAIeaEGJqAwM&gt;D`DCgQQCBBlW1wBABAeEKGJqAwIEAAAQCAIeEGJqAwIABQAQCAcBCgUeEGJqAwILBQIQCAEEAgIeEGJqAwICCwYQCAME}CgYECwEHBwUFBwoeEGJqAwMCAgYQCAMECgYGECwEHBKwUFBAEeEGJqAwIAAgQQCBBXVwAEAFBQAh9UCgIGHwMDV1YfU1RWVh8AB1NQVAJUVgsFAgIQ7HhBiagM7CAgoKEAhUU15BV09Pbw==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">appId</stringProp>
                  <stringProp name="Argument.value">PXikKuL2RM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">NTA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                  <stringProp name="Argument.value">v7.6.9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uuid</stringProp>
                  <stringProp name="Argument.value">ee262bb0-f804-11ed-afdd-25abf0fd9700</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ft" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ft</stringProp>
                  <stringProp name="Argument.value">263</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/collector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://accounts.google.com/gsi/status?client_id=901905703382-m88jn1h9ll89odkt6t5muc6h7ep83rlh.apps.googleusercontent.com&amp;as=V6TtBcdf7paLYRWUkg45oQ" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="as" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">as</stringProp>
                  <stringProp name="Argument.value">V6TtBcdf7paLYRWUkg45oQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">901905703382-m88jn1h9ll89odkt6t5muc6h7ep83rlh.apps.googleusercontent.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">gsi/status</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CJO2yQEIpLbJAQipncoBCKOEywEIk6HLAQiLq8wBCIWgzQEIwarNARjAy8wB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/fl/exposed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;model&quot;:&quot;VaRWSHWKNKfVdeWCTKIaHWSLWSHWSLWVKCTceTVfCIVQVJKVdeVaTaGfIaJMUaWIJMeJfXJVGaJRWSRT&quot;,&quot;items&quot;:[&quot;class-5&quot;,&quot;fc-2&quot;,&quot;review_score-80&quot;,&quot;ht_id-204&quot;,&quot;mealplan-1&quot;,&quot;distance-3000&quot;,&quot;fc-4&quot;,&quot;tdb-2&quot;],&quot;is_organic&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">fl/exposed</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">3b5f819919a3012d</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Info" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Info</stringProp>
                  <stringProp name="Header.value">1720070,1728110,1728250,1729920,1733680,1735070,1735270,1740070,1741560,1742360,ODREGZGMKHNYcNUC|1,1720070|1,1729920|3,1729920|1,1740070|4,ODREGZGMKHNYcNUC|6,ODREGZGMKHNYcNUC|7,NAFLeOeJAdcbdGTEYOdDWBLHMVC|1,NAFLeOeJAdcbdGTEYOdDWBLHMVC|2,INFddKNKNKPBDJJHMVGPLTLReASdVLT|2,ODREGZdaAYWXDHIcNQJBCC|1,ODREGZdaAYWXDHIcNQJBCC|2,ODREGZdaAYWXDHIcNQJBCC|6,ODREGZdaAYWXDHIcNQJBCC|8,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|1,PeYGIHRIZWNPKSXHPeDUaUC|1,PeYGIHRIZWNPKSXHPeDUaUC|3,NAREFYTBacTTNAIOFWC|5,NAREFYTBacTTNAIOFWC|2,NAFLeOeJOLQLbcZTTdHFHDQIJYBYeYO|1,ODREEPbTaJZVDXbWNWe|3,ODREEPbTaJZVDXbWNWe|5,cCHObEJcQYIMdUcHCXFZRJNGPbBfC|5,GfHMYYBQJaYbBZeQHVODKe|1,HINZJLeUXSaZbCcBUEXO|1,HINZJLeUXSaZbCcEXO|1,HINZJLeUXSaZbCcEXO|5,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|1,HINZJLeUXSaZbCcEXO|2,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|6,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|4,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|5,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|2,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|3,HINZJLeUXSaZbONdPGNbSGOLHXT|1,HINZJLeUXSaZbONdPGNbSGOLHXT|5,ODREYFbYALUZCGVTfeBHMacHSCZC|3,ODREYFbYALUZCGVTfeBHMacHSCZC|4,ODREGZEOTOCaIeJYKabWTacWXT|1,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|2,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|6,ODRdHUYDZHFBXVWUWCHOYO|1,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|1,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|9,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|3,NAREFYTBacTTNAIOFWC|1,HINZJLeUXSaZbCcEXO|3,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|7,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|1,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|2,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|5,dDfPJKSCYDTLUeXKbEfPYBBVYYT|1,dDfPJKSCYDTLUeXKbEfPYBBVYYT|2,TDXbdeRRYJWcFVbCDVCBOPFHe|1,TDXbdeRRYJWcFVbCDVCBOPFHe|6,TDXbdeRRYJWcFVbCDVCBOPFHe|2,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKdVO|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKdVO|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKBFO|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKBFO|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKVBC|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKVBC|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKOXKe|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKOXKe|3</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">28408250b09bd3a9b8e76c09b186b9e4</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-Booking-CSRF</stringProp>
                  <stringProp name="Header.value">cppqZAAAAAA=DbO0m64GBd-GSnZOmx10-odlB63wTFKeEtkIJCXoSJKFaT4pT3SXv1mnl7XzWmDdk0lzPWjO5OjD4zDqS-jsYF8Fs7-RK3qoQhtXMH_BSv1jDpVU4Tw5zqYkXOwnymPNwIufQJbJGClcfJYdHqrS3ZkDQoqRQ7u6nLTLxUXWCZ1lQMoMxos9sytdbOloP5HJg05MvyE_U_SzdCQG</stringProp>
                </elementProp>
                <elementProp name="X-Partner-Channel-Id" elementType="Header">
                  <stringProp name="Header.name">X-Partner-Channel-Id</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Label" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Label</stringProp>
                  <stringProp name="Header.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/dml/graphql?aid=2311236&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;no_rooms=1&amp;srpvid=74918193e4d90102&amp;highlighted_hotels=10027175&amp;checkin=2023-06-01&amp;redirected=1&amp;city=-970362&amp;hlrd=with_av&amp;group_adults=4&amp;source=hotel&amp;group_children=0&amp;checkout=2023-06-05&amp;keep_landing=1&amp;sid=28408250b09bd3a9b8e76c09b186b9e4&amp;lang=en-gb" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="highlighted_hotels" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">highlighted_hotels</stringProp>
                  <stringProp name="Argument.value">10027175</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="redirected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">redirected</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="city" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city</stringProp>
                  <stringProp name="Argument.value">-970362</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="keep_landing" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">keep_landing</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hlrd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hlrd</stringProp>
                  <stringProp name="Argument.value">with_av</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="label" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">label</stringProp>
                  <stringProp name="Argument.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499:pl:ta:p1:p2:ac:ap:neg:fi:tikwd-65526620:lp9069822:li:dec:dm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">source</stringProp>
                  <stringProp name="Argument.value">hotel</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="group_children" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_children</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">28408250b09bd3a9b8e76c09b186b9e4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="no_rooms" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">no_rooms</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkin</stringProp>
                  <stringProp name="Argument.value">2023-06-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="srpvid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">srpvid</stringProp>
                  <stringProp name="Argument.value">74918193e4d90102</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="group_adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_adults</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aid</stringProp>
                  <stringProp name="Argument.value">2311236</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkout</stringProp>
                  <stringProp name="Argument.value">2023-06-05</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dml/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-booking-context-aid" elementType="Header">
                  <stringProp name="Header.name">x-booking-context-aid</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="x-booking-csrf-token" elementType="Header">
                  <stringProp name="Header.name">x-booking-csrf-token</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJjb250ZXh0LWVucmljaG1lbnQtYXBpIiwic3ViIjoiY3NyZi10b2tlbiIsImlhdCI6MTY4NDY5MzU1NCwiZXhwIjoxNjg0Nzc5OTU0fQ.20J0pOYk7n_vMjZXYRS0GVFgDYOqdopfrEXsY6dKGUobneHHYkNEKkQZjehPMxolrNAPTL0t0XK66XC1M5I4DQ</stringProp>
                </elementProp>
                <elementProp name="x-booking-et-serialized-state" elementType="Header">
                  <stringProp name="Header.name">x-booking-et-serialized-state</stringProp>
                  <stringProp name="Header.value">E2XPtxY6BnI7LTJRn_Vcx2cDo75TLPd83CEL1XV8PiqE24MJIajUsFWM-1H3KzZLo</stringProp>
                </elementProp>
                <elementProp name="x-booking-context-action-name" elementType="Header">
                  <stringProp name="Header.name">x-booking-context-action-name</stringProp>
                  <stringProp name="Header.value">searchresults_irene</stringProp>
                </elementProp>
                <elementProp name="x-booking-site-type-id" elementType="Header">
                  <stringProp name="Header.name">x-booking-site-type-id</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-booking-pageview-id" elementType="Header">
                  <stringProp name="Header.name">x-booking-pageview-id</stringProp>
                  <stringProp name="Header.value">3b5f819919a3012d</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-booking-topic" elementType="Header">
                  <stringProp name="Header.name">x-booking-topic</stringProp>
                  <stringProp name="Header.value">capla_browser_b-search-web-searchresults</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/sendlayoutevents" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="traveller_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">traveller_type</stringProp>
                  <stringProp name="Argument.value">group</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="widget" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">widget</stringProp>
                  <stringProp name="Argument.value">30</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selected_sorter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selected_sorter</stringProp>
                  <stringProp name="Argument.value">popularity</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page_action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">page_action</stringProp>
                  <stringProp name="Argument.value">searchresults</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="selected_filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">selected_filter</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="length_of_stay" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">length_of_stay</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dest_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dest_id</stringProp>
                  <stringProp name="Argument.value">-970362</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="book_window" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">book_window</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="num_hotel_cards" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">num_hotel_cards</stringProp>
                  <stringProp name="Argument.value">25</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="travel_purpose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">travel_purpose</stringProp>
                  <stringProp name="Argument.value">leisure</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sendlayoutevents</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">3b5f819919a3012d</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Info" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Info</stringProp>
                  <stringProp name="Header.value">1720070,1728110,1728250,1729920,1733680,1735070,1735270,1740070,1741560,1742360,ODREGZGMKHNYcNUC|1,1720070|1,1729920|3,1729920|1,1740070|4,ODREGZGMKHNYcNUC|6,ODREGZGMKHNYcNUC|7,NAFLeOeJAdcbdGTEYOdDWBLHMVC|1,NAFLeOeJAdcbdGTEYOdDWBLHMVC|2,INFddKNKNKPBDJJHMVGPLTLReASdVLT|2,ODREGZdaAYWXDHIcNQJBCC|1,ODREGZdaAYWXDHIcNQJBCC|2,ODREGZdaAYWXDHIcNQJBCC|6,ODREGZdaAYWXDHIcNQJBCC|8,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|1,PeYGIHRIZWNPKSXHPeDUaUC|1,PeYGIHRIZWNPKSXHPeDUaUC|3,NAREFYTBacTTNAIOFWC|5,NAREFYTBacTTNAIOFWC|2,NAFLeOeJOLQLbcZTTdHFHDQIJYBYeYO|1,ODREEPbTaJZVDXbWNWe|3,ODREEPbTaJZVDXbWNWe|5,cCHObEJcQYIMdUcHCXFZRJNGPbBfC|5,GfHMYYBQJaYbBZeQHVODKe|1,HINZJLeUXSaZbCcBUEXO|1,HINZJLeUXSaZbCcEXO|1,HINZJLeUXSaZbCcEXO|5,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|1,HINZJLeUXSaZbCcEXO|2,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|6,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|4,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|5,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|2,HINZJLeUXSaZbdKNKNKPJdBJOTXNORe|3,HINZJLeUXSaZbONdPGNbSGOLHXT|1,HINZJLeUXSaZbONdPGNbSGOLHXT|5,ODREYFbYALUZCGVTfeBHMacHSCZC|3,ODREYFbYALUZCGVTfeBHMacHSCZC|4,ODREGZEOTOCaIeJYKabWTacWXT|1,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|2,ODREGHXYRFKUAAZFLMUWCPbfBJEUZC|6,ODRdHUYDZHFBXVWUWCHOYO|1,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|1,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|9,NAFLeOeJcCcCcCWNKTbLJBMLaWPBHT|3,NAREFYTBacTTNAIOFWC|1,HINZJLeUXSaZbCcEXO|3,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|7,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|1,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|2,YTTHbXeeVeCFZAcbRbROfLMfScTWfQRfET|5,dDfPJKSCYDTLUeXKbEfPYBBVYYT|1,dDfPJKSCYDTLUeXKbEfPYBBVYYT|2,TDXbdeRRYJWcFVbCDVCBOPFHe|1,TDXbdeRRYJWcFVbCDVCBOPFHe|6,TDXbdeRRYJWcFVbCDVCBOPFHe|2,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKdVO|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKdVO|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKBFO|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKBFO|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKVBC|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKVBC|3,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKOXKe|1,YTTHbXeeVJWcSMQZbIYUbHTXSfVSCKOXKe|3</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">28408250b09bd3a9b8e76c09b186b9e4</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-Booking-CSRF</stringProp>
                  <stringProp name="Header.value">cppqZAAAAAA=DbO0m64GBd-GSnZOmx10-odlB63wTFKeEtkIJCXoSJKFaT4pT3SXv1mnl7XzWmDdk0lzPWjO5OjD4zDqS-jsYF8Fs7-RK3qoQhtXMH_BSv1jDpVU4Tw5zqYkXOwnymPNwIufQJbJGClcfJYdHqrS3ZkDQoqRQ7u6nLTLxUXWCZ1lQMoMxos9sytdbOloP5HJg05MvyE_U_SzdCQG</stringProp>
                </elementProp>
                <elementProp name="X-Partner-Channel-Id" elementType="Header">
                  <stringProp name="Header.name">X-Partner-Channel-Id</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Label" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Label</stringProp>
                  <stringProp name="Header.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/dml/graphql?aid=2311236&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;no_rooms=1&amp;srpvid=74918193e4d90102&amp;highlighted_hotels=10027175&amp;checkin=2023-06-01&amp;redirected=1&amp;city=-970362&amp;hlrd=with_av&amp;group_adults=4&amp;source=hotel&amp;group_children=0&amp;checkout=2023-06-05&amp;keep_landing=1&amp;sid=28408250b09bd3a9b8e76c09b186b9e4&amp;lang=en-gb" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="highlighted_hotels" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">highlighted_hotels</stringProp>
                  <stringProp name="Argument.value">10027175</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="redirected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">redirected</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="city" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city</stringProp>
                  <stringProp name="Argument.value">-970362</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="keep_landing" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">keep_landing</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hlrd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hlrd</stringProp>
                  <stringProp name="Argument.value">with_av</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="label" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">label</stringProp>
                  <stringProp name="Argument.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499:pl:ta:p1:p2:ac:ap:neg:fi:tikwd-65526620:lp9069822:li:dec:dm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">source</stringProp>
                  <stringProp name="Argument.value">hotel</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="group_children" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_children</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">28408250b09bd3a9b8e76c09b186b9e4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="no_rooms" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">no_rooms</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkin</stringProp>
                  <stringProp name="Argument.value">2023-06-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="srpvid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">srpvid</stringProp>
                  <stringProp name="Argument.value">74918193e4d90102</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="group_adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_adults</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aid</stringProp>
                  <stringProp name="Argument.value">2311236</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkout</stringProp>
                  <stringProp name="Argument.value">2023-06-05</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dml/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-booking-context-aid" elementType="Header">
                  <stringProp name="Header.name">x-booking-context-aid</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="x-booking-csrf-token" elementType="Header">
                  <stringProp name="Header.name">x-booking-csrf-token</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJjb250ZXh0LWVucmljaG1lbnQtYXBpIiwic3ViIjoiY3NyZi10b2tlbiIsImlhdCI6MTY4NDY5MzU1NCwiZXhwIjoxNjg0Nzc5OTU0fQ.20J0pOYk7n_vMjZXYRS0GVFgDYOqdopfrEXsY6dKGUobneHHYkNEKkQZjehPMxolrNAPTL0t0XK66XC1M5I4DQ</stringProp>
                </elementProp>
                <elementProp name="x-booking-et-serialized-state" elementType="Header">
                  <stringProp name="Header.name">x-booking-et-serialized-state</stringProp>
                  <stringProp name="Header.value">E2XPtxY6BnI7LTJRn_Vcx2cDo75TLPd83CEL1XV8PiqE24MJIajUsFWM-1H3KzZLo</stringProp>
                </elementProp>
                <elementProp name="x-booking-context-action-name" elementType="Header">
                  <stringProp name="Header.name">x-booking-context-action-name</stringProp>
                  <stringProp name="Header.value">searchresults_irene</stringProp>
                </elementProp>
                <elementProp name="x-booking-site-type-id" elementType="Header">
                  <stringProp name="Header.name">x-booking-site-type-id</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-booking-pageview-id" elementType="Header">
                  <stringProp name="Header.name">x-booking-pageview-id</stringProp>
                  <stringProp name="Header.value">3b5f819919a3012d</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-booking-topic" elementType="Header">
                  <stringProp name="Header.name">x-booking-topic</stringProp>
                  <stringProp name="Header.value">capla_browser_b-search-web-searchresults</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/dml/graphql?aid=2311236&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;no_rooms=1&amp;srpvid=74918193e4d90102&amp;highlighted_hotels=10027175&amp;checkin=2023-06-01&amp;redirected=1&amp;city=-970362&amp;hlrd=with_av&amp;group_adults=4&amp;source=hotel&amp;group_children=0&amp;checkout=2023-06-05&amp;keep_landing=1&amp;sid=28408250b09bd3a9b8e76c09b186b9e4&amp;lang=en-gb" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="highlighted_hotels" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">highlighted_hotels</stringProp>
                  <stringProp name="Argument.value">10027175</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="redirected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">redirected</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="city" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">city</stringProp>
                  <stringProp name="Argument.value">-970362</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="keep_landing" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">keep_landing</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hlrd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hlrd</stringProp>
                  <stringProp name="Argument.value">with_av</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="label" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">label</stringProp>
                  <stringProp name="Argument.value">ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499:pl:ta:p1:p2:ac:ap:neg:fi:tikwd-65526620:lp9069822:li:dec:dm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">source</stringProp>
                  <stringProp name="Argument.value">hotel</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="group_children" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_children</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">28408250b09bd3a9b8e76c09b186b9e4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="no_rooms" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">no_rooms</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkin</stringProp>
                  <stringProp name="Argument.value">2023-06-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="srpvid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">srpvid</stringProp>
                  <stringProp name="Argument.value">74918193e4d90102</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="group_adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">group_adults</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aid</stringProp>
                  <stringProp name="Argument.value">2311236</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">checkout</stringProp>
                  <stringProp name="Argument.value">2023-06-05</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dml/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-booking-context-aid" elementType="Header">
                  <stringProp name="Header.name">x-booking-context-aid</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="x-booking-csrf-token" elementType="Header">
                  <stringProp name="Header.name">x-booking-csrf-token</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJjb250ZXh0LWVucmljaG1lbnQtYXBpIiwic3ViIjoiY3NyZi10b2tlbiIsImlhdCI6MTY4NDY5MzU1NCwiZXhwIjoxNjg0Nzc5OTU0fQ.20J0pOYk7n_vMjZXYRS0GVFgDYOqdopfrEXsY6dKGUobneHHYkNEKkQZjehPMxolrNAPTL0t0XK66XC1M5I4DQ</stringProp>
                </elementProp>
                <elementProp name="x-booking-et-serialized-state" elementType="Header">
                  <stringProp name="Header.name">x-booking-et-serialized-state</stringProp>
                  <stringProp name="Header.value">E2XPtxY6BnI7LTJRn_Vcx2cDo75TLPd83CEL1XV8PiqE24MJIajUsFWM-1H3KzZLo</stringProp>
                </elementProp>
                <elementProp name="x-booking-context-action-name" elementType="Header">
                  <stringProp name="Header.name">x-booking-context-action-name</stringProp>
                  <stringProp name="Header.value">searchresults_irene</stringProp>
                </elementProp>
                <elementProp name="x-booking-site-type-id" elementType="Header">
                  <stringProp name="Header.name">x-booking-site-type-id</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-booking-pageview-id" elementType="Header">
                  <stringProp name="Header.name">x-booking-pageview-id</stringProp>
                  <stringProp name="Header.value">3b5f819919a3012d</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-booking-topic" elementType="Header">
                  <stringProp name="Header.name">x-booking-topic</stringProp>
                  <stringProp name="Header.value">capla_browser_b-search-web-searchresults</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/c360/v1/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;action_name&quot;:&quot;webcoreux.header_component_scrolled&quot;,&quot;action_version&quot;:&quot;1.0.0&quot;,&quot;content&quot;:{&quot;product_verticals_seen&quot;:[&quot;accommodations&quot;,&quot;flights&quot;,&quot;cars&quot;,&quot;attractions&quot;,&quot;airport_taxis&quot;]},&quot;context&quot;:{&quot;page&quot;:{&quot;page_referrer&quot;:&quot;&quot;,&quot;page_url&quot;:&quot;https://www.booking.com/searchresults.en-gb.html?aid=2311236&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;no_rooms=1&amp;srpvid=74918193e4d90102&amp;highlighted_hotels=10027175&amp;checkin=2023-06-01&amp;redirected=1&amp;city=-970362&amp;hlrd=with_av&amp;group_adults=4&amp;source=hotel&amp;group_children=0&amp;checkout=2023-06-05&amp;keep_landing=1&amp;sid=28408250b09bd3a9b8e76c09b186b9e4#hotelTmpl&quot;,&quot;page_title&quot;:&quot;Booking.com : Hotels in Amman . Book your hotel now!&quot;},&quot;web&quot;:{&quot;browser_language&quot;:&quot;en-US&quot;},&quot;local&quot;:{&quot;currency&quot;:&quot;JOD&quot;,&quot;language&quot;:&quot;en-gb&quot;}},&quot;tracker&quot;:{&quot;tracker_name&quot;:&quot;C360ReactTracker&quot;,&quot;tracker_type&quot;:&quot;Client&quot;,&quot;tracker_version&quot;:&quot;0.1.0&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">c360/v1/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Booking-Language-Code" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Language-Code</stringProp>
                  <stringProp name="Header.value">en-gb</stringProp>
                </elementProp>
                <elementProp name="X-Booking-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-Booking-CSRF</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-AID" elementType="Header">
                  <stringProp name="Header.name">X-Booking-AID</stringProp>
                  <stringProp name="Header.value">2311236</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Label" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Label</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Pageview-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Pageview-Id</stringProp>
                  <stringProp name="Header.value">3b5f819919a3012d</stringProp>
                </elementProp>
                <elementProp name="X-Booking-SiteType-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-SiteType-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-ET-Seed" elementType="Header">
                  <stringProp name="Header.name">X-Booking-ET-Seed</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Session-Id" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Session-Id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="X-Booking-Platform" elementType="Header">
                  <stringProp name="Header.name">X-Booking-Platform</stringProp>
                  <stringProp name="Header.value">WWW</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://gtm-mktg.booking.com/g/collect?v=2&amp;tid=G-A12345&amp;gtm=45je35h0&amp;_p=1813529228&amp;gcs=G1--&amp;cid=1359512495.1684688971&amp;ul=en-us&amp;sr=1536x864&amp;uaa=x86&amp;uab=64&amp;uafvl=Google%2520Chrome%3B113.0.5672.127%7CChromium%3B113.0.5672.127%7CNot-A.Brand%3B24.0.0.0&amp;uamb=0&amp;uam=&amp;uap=Windows&amp;uapv=10.0.0&amp;uaw=0&amp;sst.uc=JO&amp;sst.rnd=762981028.1684693558&amp;sst.gcd=G1--&amp;_s=1&amp;sid=1684693507&amp;sct=2&amp;seg=1&amp;dl=https%3A%2F%2Fwww.booking.com%2Fsearchresults.en-gb.html%3Faid%3D2311236%26label%3Dar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%253Apl%253Ata%253Ap1%253Ap2%253Aac%253Aap%253Aneg%253Afi%253Atikwd-65526620%253Alp9069822%253Ali%253Adec%253Adm%26no_rooms%3D1%26srpvid%3D74918193e4d90102%26highlighted_hotels%3D10027175%26checkin%3D2023-06-01%26redirected%3D1%26city%3D-970362%26hlrd%3Dwith_av%26group_adults%3D4%26source%3Dhotel%26group_children%3D0%26checkout%3D2023-06-05%26keep_landing%3D1%26sid%3D28408250b09bd3a9b8e76c09b186b9e4&amp;dt=Booking.com%20%3A%20Hotels%20in%20Amman%20.%20Book%20your%20hotel%20now!&amp;en=page_view&amp;ep.is_aid_mcc_level_tracked=&amp;ep.cd_action=searchresults&amp;ep.n_b=&amp;richsstsse" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://www.booking.com/searchresults.en-gb.html?aid=2311236&amp;label=ar-jo-booking-desktop-ZVye8ECeu3oLbr3gTSBf6AS652829001499%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg%3Afi%3Atikwd-65526620%3Alp9069822%3Ali%3Adec%3Adm&amp;no_rooms=1&amp;srpvid=74918193e4d90102&amp;highlighted_hotels=10027175&amp;checkin=2023-06-01&amp;redirected=1&amp;city=-970362&amp;hlrd=with_av&amp;group_adults=4&amp;source=hotel&amp;group_children=0&amp;checkout=2023-06-05&amp;keep_landing=1&amp;sid=28408250b09bd3a9b8e76c09b186b9e4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sst.gcd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sst.gcd</stringProp>
                  <stringProp name="Argument.value">G1--</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.is_aid_mcc_level_tracked" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ep.is_aid_mcc_level_tracked</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">G-A12345</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uafvl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uafvl</stringProp>
                  <stringProp name="Argument.value">Google%20Chrome;113.0.5672.127|Chromium;113.0.5672.127|Not-A.Brand;24.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">1684693507</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Booking.com : Hotels in Amman . Book your hotel now!</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaa</stringProp>
                  <stringProp name="Argument.value">x86</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seg</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.n_b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ep.n_b</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gcs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gcs</stringProp>
                  <stringProp name="Argument.value">G1--</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uab</stringProp>
                  <stringProp name="Argument.value">64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uamb</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1536x864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uam" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uam</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">45je35h0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uapv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uapv</stringProp>
                  <stringProp name="Argument.value">10.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uap</stringProp>
                  <stringProp name="Argument.value">Windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sct</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="richsstsse" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">richsstsse</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">page_view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaw</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sst.rnd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sst.rnd</stringProp>
                  <stringProp name="Argument.value">762981028.1684693558</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sst.uc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sst.uc</stringProp>
                  <stringProp name="Argument.value">JO</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_p</stringProp>
                  <stringProp name="Argument.value">1813529228</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.cd_action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ep.cd_action</stringProp>
                  <stringProp name="Argument.value">searchresults</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1359512495.1684688971</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">g/collect</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://collector-pxikkul2rm.px-cloud.net/api/v2/collector" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cts</stringProp>
                  <stringProp name="Argument.value">410c7124-f7fa-11ed-94c6-6f67526d7259</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rsc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsc</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">NTA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uuid</stringProp>
                  <stringProp name="Argument.value">ee262bb0-f804-11ed-afdd-25abf0fd9700</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ft" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ft</stringProp>
                  <stringProp name="Argument.value">263</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">ee69652c-f804-11ed-b305-65444a4b6257ó &#x84;±ó &#x84;¶ó &#x84;¸ó &#x84;´ó &#x84;¶ó &#x84;¹ó &#x84;³ó &#x84;µó &#x84;µó &#x84;¸ó &#x84;²ó &#x84;°ó &#x84;³</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cs</stringProp>
                  <stringProp name="Argument.value">7362c37daa8ddd9508efa510110e47c8b147acc2ee1e8f1c6a9672aa48b7fb52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vid</stringProp>
                  <stringProp name="Argument.value">40bf309a-f7fa-11ed-b3fa-a5ee45f1ce0d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pxhd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pxhd</stringProp>
                  <stringProp name="Argument.value">W0BgYwcW-mJHk%2Fxz-ALsSp1FV2QcQF4cqEGKXUImLpK4otclBga2e6SIhsF3P06hNt6gZK7KBYQDgHYlLfx1lw%3D%3D%3AnS5dd51DXJY5rpHg6y7D6NMGM7AWawLhb2Zn5tJYxNhl-DnKhkQ73vvjpg1cCmXGBTZPHeTXLwfcDbCWYU8nBGvSIKDzRVuhJLeHj7Ag6Ks%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">1330784725129811</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="payload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payload</stringProp>
                  <stringProp name="Argument.value">aUkQRhAIEGJqAwIBAgEQHhBWEAhJEGJqAwICAwIQCFRTXkFXHhBiagMCAAAHEAhUU15BVx4QYmoDAgoHBxAIVFNeQVceEGJqAwMCBAcQCFRTXkFXHhBiagMCBgcEEAhUU15BVx4QYmoDAgYGAxAIVFNeQVceEGJqAwICCwoQCFRTXkFXHhBiagMCBwcFEAhUU15BVx4QYmoDAgMFAhAIVFNeQVceEGJqAwIKAAYQCFRTXkFXHhBiagMCAgoFEAhUU15BVx4QYmoDAwIGABAIVFNeQVceEGJqAwIHAAAQCBALBVdUUQZRVwUCAVMEAlNXUFFWCgZRA1YBClZWAAUKABAeEGJqAwIKBgIQCBBRWl4EBlZfR1AEX1QGVQMKA1VaAhAeEGJqAwIGBAYQCBAHAAYHAVFXC1YFAARTVgAGAQoEBAoDVAIBUwILB1RQABAeEGJqAwICCgIQCBAKBAZRBlYHUFFQCgMLU1AGUFEBU1BTVwVUUVdTVgQAURAeEGJqAwMAAQIQCBAGC1YKBFACVgYEV1dXBwULBwFXBFQHAwJWAQpWVgAAABAeEGJqAwMDAQcQCGlJEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGBTCwgQHhBGS0JXEAgQRldKRhAeEFxTX1cQCBBBQRAeEFpXW1VaRhAIAQQeEEVbVkZaEAgBAgQcAwICAgIEAwIBBwMHBB4QShAIAAcBHAQCAgICBAMCAQcDBwQAHhBLEAgDBgIcBgICAgILAwcHAAUBBgZPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYFQKUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFNeRm1VQF1HQhAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIBgQKHAACAgIDAAACBQIBAwAHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGAAB1wKUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEEJAWw8DEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgHAgIcAAICAgMAAAIFAgEDAAdPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYAALXApRQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQQkBbDwAQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAcBAhwAAgICAwAAAgUCAQMATx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGAAVlwKUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEEJAWw8BEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgHBAIcAAICAgMAAAIFAgEDAE8eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgAFpcClFDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBCQFsPBhAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIBwsCHAACAgIDAAACBQIBAwBPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYABeXApRQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQQkBbDwcQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAQAAhwAAgICAwAAAgUCAQMATx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGADA1QKWUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFFeU0FBDwcQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAQLBxwAAgICAwAAAgUCAQMATx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGADAFQKWUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFRRDwAQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAUABxwAAgICAwAAAgUCAQMATx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGADAVQKWUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEEBXRFtXRW1BUV1AVw8KAhAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIBQcHHAACAgIDAAACBQIBAwBPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYAMGVApZQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQWkZtW1YPAAIGEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgKAgccAAICAgMAAAIFAgEDAE8eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgAwdUCllDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBfV1NeQl5TXA8DEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgKAQccAAICAgMAAAIFAgEDAE8eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgAwRUCllDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBWW0FGU1xRVw8BAgICEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgKBAccAAICAgMAAAIFAgEDAE8eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgAwVUCllDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBUUQ8GEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgLAwccAAICAgMAAAIFAgEDAE8eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgAwpUCllDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBGVlAPABAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAICwYHHAACAgIDAAACBQIBAwBPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYAdUCkFDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBhR0FGU1tcU1BeV2JAXUJXQEZLdFteRldADwMQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMCAAIcAAICAgMAAAIFAgEDAE8eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgWlQLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFFeU0FBDwMQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMDBwMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgW1QLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFFeU0FBDwAQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMDCgMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgWFQLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFFeU0FBDwEQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMAAwMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgWVQLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFFeU0FBDwYQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMABgMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgXlQLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFFeU0FBDwcQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMABQMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgX1QLBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFFeU0FBDwIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMBAgMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgC1QLUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFZbQUZTXFFXDwMCAgIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMBBQQcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgU1QLUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFZbQUZTXFFXDwECAgIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMGAgQcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgUFQLUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFZbQUZTXFFXDwcCAgIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMGAQQcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgWlQLWUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEEJdQkdeU0BtU1FGW0RbRltXQQ8DAxAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAAGRwGAgICAgsDBwcABQEGBh4QSxAIAwcDAxwAAgICBQEABgADCgUHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGBbVAtZQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQQl1CR15TQG1TUUZbRFtGW1dBDwAHARAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAwcGAxwAAgICBQEABgADCgUHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGBYVAtZQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQQl1CR15TQG1TUUZbRFtGW1dBDwcGEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgDBwUDHAACAgIFAQAGAAMKBQdPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYFlUC1lDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBCXUJHXlNAbVNRRl^tEW0ZbV0EPAAcFEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgDBAIDHAACAgIFAQAGAAMKBQdPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYF5UC1lDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBCXUJHXlNAbVNRRltEW0ZbV0EPAwIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMEAQMcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgC1QLQUMIEB4QRktCVxAIEFFaVS&gt;1FZUF1KEB4QXFNfVxAIEFRRDwAQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMFAgQcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgU1QLQUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFRRDwYQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMFAQQcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgUFQLQUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFRRDwcQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAMFBAQcAAICDAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgWlRTBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEF9XU15CXlNcDwsLCxAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAwoGANxwAAgICBQEABgADCgUHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGBbVFMGQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQX1dTXkJeU1wPAxAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAwoFAxwAAgICBQEABgADCgUHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGBYVFMGQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQX1dTXkJeU1wPBhAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAwsCAxwAAgICBQEABgADCgUHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGBZVFMGQwgQHhBGS0JXEAgQUVpXUVlQXS?UoQHhBcU19XEAgQX1dTXkJeU1wPCxAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAwsBAxwAAgICBQEABgADCgUHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGBaVFNRQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQQkBbRFNRS21GS0JXDwEQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAGUBBgYeEEsQCAACAgQcAAICAgUBAAYAAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgW1RTUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFpGbVtWDwACBhAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAAIBBBwAAgICBQEABgADCgUHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGBYVFNRQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQWkZtW1YPAAIDEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgAAgQEHAMLCwsHAwMFAwoFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgWVRTUUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEFpGbVtWDwACARAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAAILBBwDCwsLBwMDBQMKBQdPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYF5UU1FDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBaRm1bVg8AAgoQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAADAAQcAwsLCwcDAwUDCgUHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGALVFAGQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQQl1CR15TQG1cV1NAUEttXlNcVl9TQFlBDwsCAgIFBAsLChAeEFpXW1VaRhAIAx4QRVtpWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAAYABBwGAgIDBgQGCgYBBQdPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYFNUUAZDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBCXUJHXlNAbVxXU0BQS21eU1xWX1NAWUEP_AAEHBwsFEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgABgcEHAYCAgMGBAYK;ENBgEFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgUFRQBkMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEEJdQkdeU0BtXFdTQFBLbV5TXFZfU0BZQQ8DBQMBCxAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAAYKBBwGAgIDBgQGCgYBBQdPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYAtUUFFDCBAeEEZLQlcQCCBBRWldRWVBdShAeEFxTX1cQCBBGVlAPABAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAAcEAxwGAgIDBgQGCgYBBQdPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYFNUUFFDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBGVlAPARAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAAcLAxwGAgIDBgQGCgYBBQdPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYFpUUFlDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBAV0RbV0VtQVFdQFcPCwIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAAEBAQcBgICAwYEBgoGAQUHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGBbVFBZQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQQFdEW1dFbUFRXUBXDwoCEB4QWldbVVpGEAgDHhBFW1ZGWhAIAx4QShAIAAABHAYCAgICCwMHBwAFAQYGHhBLEAgABAsEHAYCAgMGBAYKBgEFB08eSRBGU1V8U19XEAgQe3xiZ2YQHhBbVhAIEAhgWFRQWUMIEB4QRktCVxAIEFFaV1FZUF1KEB4QXFNfVxAIEEBXRFtXRW1BUV1AVw8FAhAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAAUABBwGAgIDBgQGCgYBBQdPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYFlUUFlDC}BAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBAV0RbV0VtQVFdQFcPBAIQHhBaV1tVWkYQCAMeEEVbVkZaEAgDHhBKEAgAAAEcBgICAgILAwcHAAUBBgYeEEsQCAAFBwQcBgICAwYEBgoGAQUHTx5JEEZTVXxTX1cQCBB7fGJnZhAeEFtWEAgQCGBaVFBBQwgQHhBGS0JXEAgQUVpXUVlQXUoQHhBcU19XEAgQWl1GV15UU1FbXltGSw8DBBAeEFpXW1VaRhAIAx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAAoBAxwGAgIDBgQGCgYBBQdPHkkQRlNVfFNfVxAIEHt8YmdmEB4QW1YQCBAIYFtUUEFDCBAeEEZLQlcQCBBRWldRWVBdShAeEFxTX1cQCBBaXUZXXlRTUVteW0ZLDwMCBRAeEFpXW1VaRhAIAGx4QRVtWRloQCAMeEEoQCAAAARwGAgICAgsDBwcABQEGBh4QSxAIAAoEAxwGAgIDBgQGCgYBBQdPHkkQRlNVfFNfVxAIE} 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</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">appId</stringProp>
                  <stringProp name="Argument.value">PXikKuL2RM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                  <stringProp name="Argument.value">v7.6.9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/collector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ct.pinterest.com/user/?tid=2612859132799&amp;pd=%7B%22np%22%3A%22gtm%22%2C%22em%22%3A%221bad6b8cf97131fceab8543e81f7757195fbb1d36b376ee994ad1cf17699c464%22%2C%22pin_unauth%22%3A%22dWlkPU9EaGxPR1JpWW1ZdE1XWTVOUzAwT0RabExUaGtOREl0TkdVNFpUSTJNVGxqWkdKaQ%22%7D&amp;cb=1684693558741&amp;dep=2%2CPAGE_LOAD" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pd</stringProp>
                  <stringProp name="Argument.value">{&quot;np&quot;:&quot;gtm&quot;,&quot;em&quot;:&quot;1bad6b8cf97131fceab8543e81f7757195fbb1d36b376ee994ad1cf17699c464&quot;,&quot;pin_unauth&quot;:&quot;dWlkPU9EaGxPR1JpWW1ZdE1XWTVOUzAwT0RabExUaGtOREl0TkdVNFpUSTJNVGxqWkdKaQ&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">2612859132799</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dep</stringProp>
                  <stringProp name="Argument.value">2,PAGE_LOAD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cb</stringProp>
                  <stringProp name="Argument.value">1684693558741</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">user/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ct.pinterest.com/user/?event=search&amp;ed=%7B%22np%22%3A%22gtm%22%7D&amp;tid=2612859132799&amp;cb=1684693558743&amp;dep=5%2CEVENT_TAGS_ABSENT" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="event" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">event</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">2612859132799</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dep</stringProp>
                  <stringProp name="Argument.value">5,EVENT_TAGS_ABSENT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ed</stringProp>
                  <stringProp name="Argument.value">{&quot;np&quot;:&quot;gtm&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cb</stringProp>
                  <stringProp name="Argument.value">1684693558743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">user/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.booking.com/navigation_times" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ch</stringProp>
                  <stringProp name="Argument.value">d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="stype" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">stype</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="css_load" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">css_load</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref_action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref_action</stringProp>
                  <stringProp name="Argument.value">searchresults</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">3b5f819919a3012d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cdn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cdn</stringProp>
                  <stringProp name="Argument.value">cf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nts</stringProp>
                  <stringProp name="Argument.value">0,1,1684693552376,0,0,1684693552383,1684693553825,1684693553825,1684693553825,1684693553825,1684693553825,1684693553825,0,1684693553827,1684693554209,1684693556158,1684693554215,1684693556683,1684693556683,1684693556764,1684693557835,1684693557840,1684693557858,0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bo</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="utiming" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">utiming</stringProp>
                  <stringProp name="Argument.value">speedindex:4489,b-stylesheets:2151,b-pre-scripts:4134,b-post-scripts:4244</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aid</stringProp>
                  <stringProp name="Argument.value">2311236</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="first" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">first</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dc</stringProp>
                  <stringProp name="Argument.value">34</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">navigation_times</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="X-Booking-CSRF" elementType="Header">
                  <stringProp name="Header.name">X-Booking-CSRF</stringProp>
                  <stringProp name="Header.value">cppqZAAAAAA=DbO0m64GBd-GSnZOmx10-odlB63wTFKeEtkIJCXoSJKFaT4pT3SXv1mnl7XzWmDdk0lzPWjO5OjD4zDqS-jsYF8Fs7-RK3qoQhtXMH_BSv1jDpVU4Tw5zqYkXOwnymPNwIufQJbJGClcfJYdHqrS3ZkDQoqRQ7u6nLTLxUXWCZ1lQMoMxos9sytdbOloP5HJg05MvyE_U_SzdCQG</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
          <stringProp name="DurationAssertion.duration">1500</stringProp>
        </DurationAssertion>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
